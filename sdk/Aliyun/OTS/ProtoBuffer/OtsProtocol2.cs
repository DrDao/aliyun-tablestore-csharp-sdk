// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.aliyun.cloudservice.ots2 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class OtsProtocol2 {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_Error__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Error, global::com.aliyun.cloudservice.ots2.Error.Builder> internal__static_com_aliyun_cloudservice_ots2_Error__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ColumnSchema__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnSchema, global::com.aliyun.cloudservice.ots2.ColumnSchema.Builder> internal__static_com_aliyun_cloudservice_ots2_ColumnSchema__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ColumnValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnValue, global::com.aliyun.cloudservice.ots2.ColumnValue.Builder> internal__static_com_aliyun_cloudservice_ots2_ColumnValue__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_Column__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Column, global::com.aliyun.cloudservice.ots2.Column.Builder> internal__static_com_aliyun_cloudservice_ots2_Column__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_Row__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Row, global::com.aliyun.cloudservice.ots2.Row.Builder> internal__static_com_aliyun_cloudservice_ots2_Row__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_TableMeta__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableMeta, global::com.aliyun.cloudservice.ots2.TableMeta.Builder> internal__static_com_aliyun_cloudservice_ots2_TableMeta__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_RelationCondition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RelationCondition, global::com.aliyun.cloudservice.ots2.RelationCondition.Builder> internal__static_com_aliyun_cloudservice_ots2_RelationCondition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_CompositeCondition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CompositeCondition, global::com.aliyun.cloudservice.ots2.CompositeCondition.Builder> internal__static_com_aliyun_cloudservice_ots2_CompositeCondition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ColumnCondition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnCondition, global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder> internal__static_com_aliyun_cloudservice_ots2_ColumnCondition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_Condition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Condition, global::com.aliyun.cloudservice.ots2.Condition.Builder> internal__static_com_aliyun_cloudservice_ots2_Condition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_CapacityUnit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CapacityUnit, global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder> internal__static_com_aliyun_cloudservice_ots2_CapacityUnit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ReservedThroughputDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails, global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.Builder> internal__static_com_aliyun_cloudservice_ots2_ReservedThroughputDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ReservedThroughput__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ReservedThroughput, global::com.aliyun.cloudservice.ots2.ReservedThroughput.Builder> internal__static_com_aliyun_cloudservice_ots2_ReservedThroughput__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ConsumedCapacity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ConsumedCapacity, global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder> internal__static_com_aliyun_cloudservice_ots2_ConsumedCapacity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_StreamSpecification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamSpecification, global::com.aliyun.cloudservice.ots2.StreamSpecification.Builder> internal__static_com_aliyun_cloudservice_ots2_StreamSpecification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_StreamDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamDetails, global::com.aliyun.cloudservice.ots2.StreamDetails.Builder> internal__static_com_aliyun_cloudservice_ots2_StreamDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_CreateTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CreateTableRequest, global::com.aliyun.cloudservice.ots2.CreateTableRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_CreateTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_CreateTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CreateTableResponse, global::com.aliyun.cloudservice.ots2.CreateTableResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_CreateTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_UpdateTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateTableRequest, global::com.aliyun.cloudservice.ots2.UpdateTableRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_UpdateTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_UpdateTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateTableResponse, global::com.aliyun.cloudservice.ots2.UpdateTableResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_UpdateTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DescribeTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeTableRequest, global::com.aliyun.cloudservice.ots2.DescribeTableRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_DescribeTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DescribeTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeTableResponse, global::com.aliyun.cloudservice.ots2.DescribeTableResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_DescribeTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ListTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListTableRequest, global::com.aliyun.cloudservice.ots2.ListTableRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_ListTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ListTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListTableResponse, global::com.aliyun.cloudservice.ots2.ListTableResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_ListTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DeleteTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteTableRequest, global::com.aliyun.cloudservice.ots2.DeleteTableRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_DeleteTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DeleteTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteTableResponse, global::com.aliyun.cloudservice.ots2.DeleteTableResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_DeleteTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRowRequest, global::com.aliyun.cloudservice.ots2.GetRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_GetRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRowResponse, global::com.aliyun.cloudservice.ots2.GetRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_GetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ColumnUpdate__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnUpdate, global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder> internal__static_com_aliyun_cloudservice_ots2_ColumnUpdate__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_UpdateRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateRowRequest, global::com.aliyun.cloudservice.ots2.UpdateRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_UpdateRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_UpdateRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateRowResponse, global::com.aliyun.cloudservice.ots2.UpdateRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_UpdateRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_PutRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.PutRowRequest, global::com.aliyun.cloudservice.ots2.PutRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_PutRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_PutRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.PutRowResponse, global::com.aliyun.cloudservice.ots2.PutRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_PutRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DeleteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteRowRequest, global::com.aliyun.cloudservice.ots2.DeleteRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_DeleteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DeleteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteRowResponse, global::com.aliyun.cloudservice.ots2.DeleteRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_DeleteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_BatchGetRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchGetRowRequest, global::com.aliyun.cloudservice.ots2.BatchGetRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_BatchGetRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_BatchGetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchGetRowResponse, global::com.aliyun.cloudservice.ots2.BatchGetRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_BatchGetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_PutRowInBatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_PutRowInBatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_UpdateRowInBatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_UpdateRowInBatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DeleteRowInBatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_DeleteRowInBatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.BatchWriteRowRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_RowInBatchWriteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_RowInBatchWriteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchWriteRowResponse, global::com.aliyun.cloudservice.ots2.BatchWriteRowResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetRangeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRangeRequest, global::com.aliyun.cloudservice.ots2.GetRangeRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_GetRangeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetRangeResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRangeResponse, global::com.aliyun.cloudservice.ots2.GetRangeResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_GetRangeResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ListStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListStreamRequest, global::com.aliyun.cloudservice.ots2.ListStreamRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_ListStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_ListStreamResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListStreamResponse, global::com.aliyun.cloudservice.ots2.ListStreamResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_ListStreamResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_Stream__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Stream, global::com.aliyun.cloudservice.ots2.Stream.Builder> internal__static_com_aliyun_cloudservice_ots2_Stream__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_StreamShard__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamShard, global::com.aliyun.cloudservice.ots2.StreamShard.Builder> internal__static_com_aliyun_cloudservice_ots2_StreamShard__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DescribeStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeStreamRequest, global::com.aliyun.cloudservice.ots2.DescribeStreamRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_DescribeStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_DescribeStreamResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeStreamResponse, global::com.aliyun.cloudservice.ots2.DescribeStreamResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_DescribeStreamResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetShardIteratorRequest, global::com.aliyun.cloudservice.ots2.GetShardIteratorRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetShardIteratorResponse, global::com.aliyun.cloudservice.ots2.GetShardIteratorResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetStreamRecordRequest, global::com.aliyun.cloudservice.ots2.GetStreamRecordRequest.Builder> internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_RecordSequenceInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RecordSequenceInfo, global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.Builder> internal__static_com_aliyun_cloudservice_ots2_RecordSequenceInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_StreamRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamRecord, global::com.aliyun.cloudservice.ots2.StreamRecord.Builder> internal__static_com_aliyun_cloudservice_ots2_StreamRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetStreamRecordResponse, global::com.aliyun.cloudservice.ots2.GetStreamRecordResponse.Builder> internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static OtsProtocol2() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChRvdHNfcHJvdG9jb2wuMi5wcm90bxIkY29tLmFsaXl1bi5vcGVuc2Vydmlj" + 
          "ZXMub3RzLnByb3RvY29sIiYKBUVycm9yEgwKBGNvZGUYASACKAkSDwoHbWVz" + 
          "c2FnZRgCIAEoCSJcCgxDb2x1bW5TY2hlbWESDAoEbmFtZRgBIAIoCRI+CgR0" + 
          "eXBlGAIgAigOMjAuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3Rv" + 
          "Y29sLkNvbHVtblR5cGUiogEKC0NvbHVtblZhbHVlEj4KBHR5cGUYASACKA4y" + 
          "MC5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1u" + 
          "VHlwZRINCgV2X2ludBgCIAEoAxIQCgh2X3N0cmluZxgDIAEoCRIOCgZ2X2Jv" + 
          "b2wYBCABKAgSEAoIdl9kb3VibGUYBSABKAESEAoIdl9iaW5hcnkYBiABKAwi" + 
          "WAoGQ29sdW1uEgwKBG5hbWUYASACKAkSQAoFdmFsdWUYAiACKAsyMS5jb20u" + 
          "YWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1uVmFsdWUi" + 
          "mQEKA1JvdxJJChNwcmltYXJ5X2tleV9jb2x1bW5zGAEgAygLMiwuY29tLmFs" + 
          "aXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLkNvbHVtbhJHChFhdHRy" + 
          "aWJ1dGVfY29sdW1ucxgCIAMoCzIsLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2Vz" + 
          "Lm90cy5wcm90b2NvbC5Db2x1bW4iaAoJVGFibGVNZXRhEhIKCnRhYmxlX25h" + 
          "bWUYASACKAkSRwoLcHJpbWFyeV9rZXkYAiADKAsyMi5jb20uYWxpeXVuLm9w" + 
          "ZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1uU2NoZW1hItQBChFSZWxh" + 
          "dGlvbkNvbmRpdGlvbhJICgpjb21wYXJhdG9yGAEgAigOMjQuY29tLmFsaXl1" + 
          "bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLkNvbXBhcmF0b3JUeXBlEhMK" + 
          "C2NvbHVtbl9uYW1lGAIgAigJEkcKDGNvbHVtbl92YWx1ZRgDIAIoCzIxLmNv" + 
          "bS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5Db2x1bW5WYWx1" + 
          "ZRIXCg9wYXNzX2lmX21pc3NpbmcYBCACKAgirgEKEkNvbXBvc2l0ZUNvbmRp" + 
          "dGlvbhJJCgpjb21iaW5hdG9yGAEgAigOMjUuY29tLmFsaXl1bi5vcGVuc2Vy" + 
          "dmljZXMub3RzLnByb3RvY29sLkxvZ2ljYWxPcGVyYXRvchJNCg5zdWJfY29u" + 
          "ZGl0aW9ucxgCIAMoCzI1LmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5w" + 
          "cm90b2NvbC5Db2x1bW5Db25kaXRpb24ibQoPQ29sdW1uQ29uZGl0aW9uEkcK" + 
          "BHR5cGUYASACKA4yOS5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJv" + 
          "dG9jb2wuQ29sdW1uQ29uZGl0aW9uVHlwZRIRCgljb25kaXRpb24YAiACKAwi" + 
          "sgEKCUNvbmRpdGlvbhJUCg1yb3dfZXhpc3RlbmNlGAEgAigOMj0uY29tLmFs" + 
          "aXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLlJvd0V4aXN0ZW5jZUV4" + 
          "cGVjdGF0aW9uEk8KEGNvbHVtbl9jb25kaXRpb24YAiABKAsyNS5jb20uYWxp" + 
          "eXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1uQ29uZGl0aW9u" + 
          "IisKDENhcGFjaXR5VW5pdBIMCgRyZWFkGAEgASgFEg0KBXdyaXRlGAIgASgF" + 
          "IsEBChlSZXNlcnZlZFRocm91Z2hwdXREZXRhaWxzEkkKDWNhcGFjaXR5X3Vu" + 
          "aXQYASACKAsyMi5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9j" + 
          "b2wuQ2FwYWNpdHlVbml0EhoKEmxhc3RfaW5jcmVhc2VfdGltZRgCIAIoAxIa" + 
          "ChJsYXN0X2RlY3JlYXNlX3RpbWUYAyABKAMSIQoZbnVtYmVyX29mX2RlY3Jl" + 
          "YXNlc190b2RheRgEIAIoBSJfChJSZXNlcnZlZFRocm91Z2hwdXQSSQoNY2Fw" + 
          "YWNpdHlfdW5pdBgBIAIoCzIyLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90" + 
          "cy5wcm90b2NvbC5DYXBhY2l0eVVuaXQiXQoQQ29uc3VtZWRDYXBhY2l0eRJJ" + 
          "Cg1jYXBhY2l0eV91bml0GAEgAigLMjIuY29tLmFsaXl1bi5vcGVuc2Vydmlj" + 
          "ZXMub3RzLnByb3RvY29sLkNhcGFjaXR5VW5pdCJFChNTdHJlYW1TcGVjaWZp" + 
          "Y2F0aW9uEhUKDWVuYWJsZV9zdHJlYW0YASACKAgSFwoPZXhwaXJhdGlvbl90" + 
          "aW1lGAIgASgFImwKDVN0cmVhbURldGFpbHMSFQoNZW5hYmxlX3N0cmVhbRgB" + 
          "IAIoCBIRCglzdHJlYW1faWQYAiABKAkSFwoPZXhwaXJhdGlvbl90aW1lGAMg" + 
          "ASgFEhgKEGxhc3RfZW5hYmxlX3RpbWUYBCABKAMigAIKEkNyZWF0ZVRhYmxl" + 
          "UmVxdWVzdBJDCgp0YWJsZV9tZXRhGAEgAigLMi8uY29tLmFsaXl1bi5vcGVu" + 
          "c2VydmljZXMub3RzLnByb3RvY29sLlRhYmxlTWV0YRJVChNyZXNlcnZlZF90" + 
          "aHJvdWdocHV0GAIgAigLMjguY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3Rz" + 
          "LnByb3RvY29sLlJlc2VydmVkVGhyb3VnaHB1dBJOCgtzdHJlYW1fc3BlYxgD" + 
          "IAEoCzI5LmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5T" + 
          "dHJlYW1TcGVjaWZpY2F0aW9uIhUKE0NyZWF0ZVRhYmxlUmVzcG9uc2UizwEK" + 
          "ElVwZGF0ZVRhYmxlUmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgAigJElUKE3Jl" + 
          "c2VydmVkX3Rocm91Z2hwdXQYAiABKAsyOC5jb20uYWxpeXVuLm9wZW5zZXJ2" + 
          "aWNlcy5vdHMucHJvdG9jb2wuUmVzZXJ2ZWRUaHJvdWdocHV0Ek4KC3N0cmVh" + 
          "bV9zcGVjGAMgASgLMjkuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnBy" + 
          "b3RvY29sLlN0cmVhbVNwZWNpZmljYXRpb24iyAEKE1VwZGF0ZVRhYmxlUmVz" + 
          "cG9uc2USZAobcmVzZXJ2ZWRfdGhyb3VnaHB1dF9kZXRhaWxzGAEgAigLMj8u" + 
          "Y29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLlJlc2VydmVk" + 
          "VGhyb3VnaHB1dERldGFpbHMSSwoOc3RyZWFtX2RldGFpbHMYAiABKAsyMy5j" + 
          "b20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuU3RyZWFtRGV0" + 
          "YWlscyIqChREZXNjcmliZVRhYmxlUmVxdWVzdBISCgp0YWJsZV9uYW1lGAEg" + 
          "AigJIo8CChVEZXNjcmliZVRhYmxlUmVzcG9uc2USQwoKdGFibGVfbWV0YRgB" + 
          "IAIoCzIvLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5U" + 
          "YWJsZU1ldGESZAobcmVzZXJ2ZWRfdGhyb3VnaHB1dF9kZXRhaWxzGAIgAigL" + 
          "Mj8uY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLlJlc2Vy" + 
          "dmVkVGhyb3VnaHB1dERldGFpbHMSSwoOc3RyZWFtX2RldGFpbHMYAyABKAsy" + 
          "My5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuU3RyZWFt" + 
          "RGV0YWlscyISChBMaXN0VGFibGVSZXF1ZXN0IigKEUxpc3RUYWJsZVJlc3Bv" + 
          "bnNlEhMKC3RhYmxlX25hbWVzGAEgAygJIigKEkRlbGV0ZVRhYmxlUmVxdWVz" + 
          "dBISCgp0YWJsZV9uYW1lGAEgAigJIhUKE0RlbGV0ZVRhYmxlUmVzcG9uc2Ui" + 
          "xQEKDUdldFJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRJBCgtwcmlt" + 
          "YXJ5X2tleRgCIAMoCzIsLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5w" + 
          "cm90b2NvbC5Db2x1bW4SFgoOY29sdW1uc190b19nZXQYAyADKAkSRQoGZmls" + 
          "dGVyGAQgASgLMjUuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3Rv" + 
          "Y29sLkNvbHVtbkNvbmRpdGlvbiKSAQoOR2V0Um93UmVzcG9uc2USSAoIY29u" + 
          "c3VtZWQYASACKAsyNi5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJv" + 
          "dG9jb2wuQ29uc3VtZWRDYXBhY2l0eRI2CgNyb3cYAiACKAsyKS5jb20uYWxp" + 
          "eXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuUm93IqEBCgxDb2x1bW5V" + 
          "cGRhdGUSQQoEdHlwZRgBIAIoDjIzLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2Vz" + 
          "Lm90cy5wcm90b2NvbC5PcGVyYXRpb25UeXBlEgwKBG5hbWUYAiACKAkSQAoF" + 
          "dmFsdWUYAyABKAsyMS5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJv" + 
          "dG9jb2wuQ29sdW1uVmFsdWUi/AEKEFVwZGF0ZVJvd1JlcXVlc3QSEgoKdGFi" + 
          "bGVfbmFtZRgBIAIoCRJCCgljb25kaXRpb24YAiACKAsyLy5jb20uYWxpeXVu" + 
          "Lm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29uZGl0aW9uEkEKC3ByaW1h" + 
          "cnlfa2V5GAMgAygLMiwuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnBy" + 
          "b3RvY29sLkNvbHVtbhJNChFhdHRyaWJ1dGVfY29sdW1ucxgEIAMoCzIyLmNv" + 
          "bS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5Db2x1bW5VcGRh" + 
          "dGUiXQoRVXBkYXRlUm93UmVzcG9uc2USSAoIY29uc3VtZWQYASACKAsyNi5j" + 
          "b20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29uc3VtZWRD" + 
          "YXBhY2l0eSLzAQoNUHV0Um93UmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgAigJ" + 
          "EkIKCWNvbmRpdGlvbhgCIAIoCzIvLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2Vz" + 
          "Lm90cy5wcm90b2NvbC5Db25kaXRpb24SQQoLcHJpbWFyeV9rZXkYAyADKAsy" + 
          "LC5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1u" + 
          "EkcKEWF0dHJpYnV0ZV9jb2x1bW5zGAQgAygLMiwuY29tLmFsaXl1bi5vcGVu" + 
          "c2VydmljZXMub3RzLnByb3RvY29sLkNvbHVtbiJaCg5QdXRSb3dSZXNwb25z" + 
          "ZRJICghjb25zdW1lZBgBIAIoCzI2LmNvbS5hbGl5dW4ub3BlbnNlcnZpY2Vz" + 
          "Lm90cy5wcm90b2NvbC5Db25zdW1lZENhcGFjaXR5Iq0BChBEZWxldGVSb3dS" + 
          "ZXF1ZXN0EhIKCnRhYmxlX25hbWUYASACKAkSQgoJY29uZGl0aW9uGAIgAigL" + 
          "Mi8uY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLkNvbmRp" + 
          "dGlvbhJBCgtwcmltYXJ5X2tleRgDIAMoCzIsLmNvbS5hbGl5dW4ub3BlbnNl" + 
          "cnZpY2VzLm90cy5wcm90b2NvbC5Db2x1bW4iXQoRRGVsZXRlUm93UmVzcG9u" + 
          "c2USSAoIY29uc3VtZWQYASACKAsyNi5jb20uYWxpeXVuLm9wZW5zZXJ2aWNl" + 
          "cy5vdHMucHJvdG9jb2wuQ29uc3VtZWRDYXBhY2l0eSJcChdSb3dJbkJhdGNo" + 
          "R2V0Um93UmVxdWVzdBJBCgtwcmltYXJ5X2tleRgBIAMoCzIsLmNvbS5hbGl5" + 
          "dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5Db2x1bW4i2wEKGVRhYmxl" + 
          "SW5CYXRjaEdldFJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRJLCgRy" + 
          "b3dzGAIgAygLMj0uY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3Rv" + 
          "Y29sLlJvd0luQmF0Y2hHZXRSb3dSZXF1ZXN0EhYKDmNvbHVtbnNfdG9fZ2V0" + 
          "GAMgAygJEkUKBmZpbHRlchgEIAEoCzI1LmNvbS5hbGl5dW4ub3BlbnNlcnZp" + 
          "Y2VzLm90cy5wcm90b2NvbC5Db2x1bW5Db25kaXRpb24iZQoSQmF0Y2hHZXRS" + 
          "b3dSZXF1ZXN0Ek8KBnRhYmxlcxgBIAMoCzI/LmNvbS5hbGl5dW4ub3BlbnNl" + 
          "cnZpY2VzLm90cy5wcm90b2NvbC5UYWJsZUluQmF0Y2hHZXRSb3dSZXF1ZXN0" + 
          "Iu0BChhSb3dJbkJhdGNoR2V0Um93UmVzcG9uc2USEwoFaXNfb2sYASACKAg6" + 
          "BHRydWUSOgoFZXJyb3IYAiABKAsyKy5jb20uYWxpeXVuLm9wZW5zZXJ2aWNl" + 
          "cy5vdHMucHJvdG9jb2wuRXJyb3ISSAoIY29uc3VtZWQYAyABKAsyNi5jb20u" + 
          "YWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29uc3VtZWRDYXBh" + 
          "Y2l0eRI2CgNyb3cYBCABKAsyKS5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5v" + 
          "dHMucHJvdG9jb2wuUm93In4KGlRhYmxlSW5CYXRjaEdldFJvd1Jlc3BvbnNl" + 
          "EhIKCnRhYmxlX25hbWUYASACKAkSTAoEcm93cxgCIAMoCzI+LmNvbS5hbGl5" + 
          "dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5Sb3dJbkJhdGNoR2V0Um93" + 
          "UmVzcG9uc2UiZwoTQmF0Y2hHZXRSb3dSZXNwb25zZRJQCgZ0YWJsZXMYASAD" + 
          "KAsyQC5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuVGFi" + 
          "bGVJbkJhdGNoR2V0Um93UmVzcG9uc2Ui7gEKHFB1dFJvd0luQmF0Y2hXcml0" + 
          "ZVJvd1JlcXVlc3QSQgoJY29uZGl0aW9uGAEgAigLMi8uY29tLmFsaXl1bi5v" + 
          "cGVuc2VydmljZXMub3RzLnByb3RvY29sLkNvbmRpdGlvbhJBCgtwcmltYXJ5" + 
          "X2tleRgCIAMoCzIsLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90" + 
          "b2NvbC5Db2x1bW4SRwoRYXR0cmlidXRlX2NvbHVtbnMYAyADKAsyLC5jb20u" + 
          "YWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1uIvcBCh9V" + 
          "cGRhdGVSb3dJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0EkIKCWNvbmRpdGlvbhgB" + 
          "IAIoCzIvLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5D" + 
          "b25kaXRpb24SQQoLcHJpbWFyeV9rZXkYAiADKAsyLC5jb20uYWxpeXVuLm9w" + 
          "ZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1uEk0KEWF0dHJpYnV0ZV9j" + 
          "b2x1bW5zGAMgAygLMjIuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnBy" + 
          "b3RvY29sLkNvbHVtblVwZGF0ZSKoAQofRGVsZXRlUm93SW5CYXRjaFdyaXRl" + 
          "Um93UmVxdWVzdBJCCgljb25kaXRpb24YASACKAsyLy5jb20uYWxpeXVuLm9w" + 
          "ZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29uZGl0aW9uEkEKC3ByaW1hcnlf" + 
          "a2V5GAIgAygLMiwuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3Rv" + 
          "Y29sLkNvbHVtbiK/AgobVGFibGVJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0EhIK" + 
          "CnRhYmxlX25hbWUYASACKAkSVAoIcHV0X3Jvd3MYAiADKAsyQi5jb20uYWxp" + 
          "eXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuUHV0Um93SW5CYXRjaFdy" + 
          "aXRlUm93UmVxdWVzdBJaCgt1cGRhdGVfcm93cxgDIAMoCzJFLmNvbS5hbGl5" + 
          "dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90b2NvbC5VcGRhdGVSb3dJbkJhdGNo" + 
          "V3JpdGVSb3dSZXF1ZXN0EloKC2RlbGV0ZV9yb3dzGAQgAygLMkUuY29tLmFs" + 
          "aXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLkRlbGV0ZVJvd0luQmF0" + 
          "Y2hXcml0ZVJvd1JlcXVlc3QiaQoUQmF0Y2hXcml0ZVJvd1JlcXVlc3QSUQoG" + 
          "dGFibGVzGAEgAygLMkEuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnBy" + 
          "b3RvY29sLlRhYmxlSW5CYXRjaFdyaXRlUm93UmVxdWVzdCK3AQoaUm93SW5C" + 
          "YXRjaFdyaXRlUm93UmVzcG9uc2USEwoFaXNfb2sYASACKAg6BHRydWUSOgoF" + 
          "ZXJyb3IYAiABKAsyKy5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJv" + 
          "dG9jb2wuRXJyb3ISSAoIY29uc3VtZWQYAyABKAsyNi5jb20uYWxpeXVuLm9w" + 
          "ZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29uc3VtZWRDYXBhY2l0eSK0Agoc" + 
          "VGFibGVJbkJhdGNoV3JpdGVSb3dSZXNwb25zZRISCgp0YWJsZV9uYW1lGAEg" + 
          "AigJElIKCHB1dF9yb3dzGAIgAygLMkAuY29tLmFsaXl1bi5vcGVuc2Vydmlj" + 
          "ZXMub3RzLnByb3RvY29sLlJvd0luQmF0Y2hXcml0ZVJvd1Jlc3BvbnNlElUK" + 
          "C3VwZGF0ZV9yb3dzGAMgAygLMkAuY29tLmFsaXl1bi5vcGVuc2VydmljZXMu" + 
          "b3RzLnByb3RvY29sLlJvd0luQmF0Y2hXcml0ZVJvd1Jlc3BvbnNlElUKC2Rl" + 
          "bGV0ZV9yb3dzGAQgAygLMkAuY29tLmFsaXl1bi5vcGVuc2VydmljZXMub3Rz" + 
          "LnByb3RvY29sLlJvd0luQmF0Y2hXcml0ZVJvd1Jlc3BvbnNlImsKFUJhdGNo" + 
          "V3JpdGVSb3dSZXNwb25zZRJSCgZ0YWJsZXMYASADKAsyQi5jb20uYWxpeXVu" + 
          "Lm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuVGFibGVJbkJhdGNoV3JpdGVS" + 
          "b3dSZXNwb25zZSL7AgoPR2V0UmFuZ2VSZXF1ZXN0EhIKCnRhYmxlX25hbWUY" + 
          "ASACKAkSQgoJZGlyZWN0aW9uGAIgAigOMi8uY29tLmFsaXl1bi5vcGVuc2Vy" + 
          "dmljZXMub3RzLnByb3RvY29sLkRpcmVjdGlvbhIWCg5jb2x1bW5zX3RvX2dl" + 
          "dBgDIAMoCRINCgVsaW1pdBgEIAEoBRJRChtpbmNsdXNpdmVfc3RhcnRfcHJp" + 
          "bWFyeV9rZXkYBSADKAsyLC5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMu" + 
          "cHJvdG9jb2wuQ29sdW1uEk8KGWV4Y2x1c2l2ZV9lbmRfcHJpbWFyeV9rZXkY" + 
          "BiADKAsyLC5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wu" + 
          "Q29sdW1uEkUKBmZpbHRlchgHIAEoCzI1LmNvbS5hbGl5dW4ub3BlbnNlcnZp" + 
          "Y2VzLm90cy5wcm90b2NvbC5Db2x1bW5Db25kaXRpb24i4wEKEEdldFJhbmdl" + 
          "UmVzcG9uc2USSAoIY29uc3VtZWQYASACKAsyNi5jb20uYWxpeXVuLm9wZW5z" + 
          "ZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29uc3VtZWRDYXBhY2l0eRJMChZuZXh0" + 
          "X3N0YXJ0X3ByaW1hcnlfa2V5GAIgAygLMiwuY29tLmFsaXl1bi5vcGVuc2Vy" + 
          "dmljZXMub3RzLnByb3RvY29sLkNvbHVtbhI3CgRyb3dzGAMgAygLMikuY29t" + 
          "LmFsaXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLlJvdyInChFMaXN0" + 
          "U3RyZWFtUmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgASgJIlMKEkxpc3RTdHJl" + 
          "YW1SZXNwb25zZRI9CgdzdHJlYW1zGAEgAygLMiwuY29tLmFsaXl1bi5vcGVu" + 
          "c2VydmljZXMub3RzLnByb3RvY29sLlN0cmVhbSJGCgZTdHJlYW0SEQoJc3Ry" + 
          "ZWFtX2lkGAEgAigJEhIKCnRhYmxlX25hbWUYAiACKAkSFQoNY3JlYXRpb25f" + 
          "dGltZRgDIAIoAyJNCgtTdHJlYW1TaGFyZBIQCghzaGFyZF9pZBgBIAIoCRIR" + 
          "CglwYXJlbnRfaWQYAiABKAkSGQoRcGFyZW50X3NpYmxpbmdfaWQYAyABKAki" + 
          "YQoVRGVzY3JpYmVTdHJlYW1SZXF1ZXN0EhEKCXN0cmVhbV9pZBgBIAIoCRIg" + 
          "ChhpbmNsdXNpdmVfc3RhcnRfc2hhcmRfaWQYAiABKAkSEwoLc2hhcmRfbGlt" + 
          "aXQYAyABKAUilAIKFkRlc2NyaWJlU3RyZWFtUmVzcG9uc2USEQoJc3RyZWFt" + 
          "X2lkGAEgAigJEhcKD2V4cGlyYXRpb25fdGltZRgCIAIoBRISCgp0YWJsZV9u" + 
          "YW1lGAMgAigJEhUKDWNyZWF0aW9uX3RpbWUYBCACKAMSSQoNc3RyZWFtX3N0" + 
          "YXR1cxgFIAIoDjIyLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90cy5wcm90" + 
          "b2NvbC5TdHJlYW1TdGF0dXMSQQoGc2hhcmRzGAYgAygLMjEuY29tLmFsaXl1" + 
          "bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLlN0cmVhbVNoYXJkEhUKDW5l" + 
          "eHRfc2hhcmRfaWQYByABKAkiPgoXR2V0U2hhcmRJdGVyYXRvclJlcXVlc3QS" + 
          "EQoJc3RyZWFtX2lkGAEgAigJEhAKCHNoYXJkX2lkGAIgAigJIjIKGEdldFNo" + 
          "YXJkSXRlcmF0b3JSZXNwb25zZRIWCg5zaGFyZF9pdGVyYXRvchgBIAIoCSI/" + 
          "ChZHZXRTdHJlYW1SZWNvcmRSZXF1ZXN0EhYKDnNoYXJkX2l0ZXJhdG9yGAEg" + 
          "AigJEg0KBWxpbWl0GAIgASgFIkgKElJlY29yZFNlcXVlbmNlSW5mbxINCgVl" + 
          "cG9jaBgBIAIoBRIRCgl0aW1lc3RhbXAYAiACKAMSEAoIcm93SW5kZXgYAyAC" + 
          "KAUimQMKDFN0cmVhbVJlY29yZBJKCgdvcF90eXBlGAEgAigOMjkuY29tLmFs" + 
          "aXl1bi5vcGVuc2VydmljZXMub3RzLnByb3RvY29sLlN0cmVhbU9wZXJhdGlv" + 
          "blR5cGUSQQoLcHJpbWFyeV9rZXkYAiADKAsyLC5jb20uYWxpeXVuLm9wZW5z" + 
          "ZXJ2aWNlcy5vdHMucHJvdG9jb2wuQ29sdW1uEk8KGWF0dHJpYnV0ZV9jb2x1" + 
          "bW5zX2Zvcl9wdXQYAyADKAsyLC5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5v" + 
          "dHMucHJvdG9jb2wuQ29sdW1uElgKHGF0dHJpYnV0ZV9jb2x1bW5zX2Zvcl91" + 
          "cGRhdGUYBCADKAsyMi5jb20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJv" + 
          "dG9jb2wuQ29sdW1uVXBkYXRlEk8KDXNlcXVlbmNlX2luZm8YBSACKAsyOC5j" + 
          "b20uYWxpeXVuLm9wZW5zZXJ2aWNlcy5vdHMucHJvdG9jb2wuUmVjb3JkU2Vx" + 
          "dWVuY2VJbmZvIoIBChdHZXRTdHJlYW1SZWNvcmRSZXNwb25zZRJKCg5zdHJl" + 
          "YW1fcmVjb3JkcxgBIAMoCzIyLmNvbS5hbGl5dW4ub3BlbnNlcnZpY2VzLm90" + 
          "cy5wcm90b2NvbC5TdHJlYW1SZWNvcmQSGwoTbmV4dF9zaGFyZF9pdGVyYXRv" + 
          "chgCIAEoCSpkCgpDb2x1bW5UeXBlEgsKB0lORl9NSU4QABILCgdJTkZfTUFY" + 
          "EAESCwoHSU5URUdFUhACEgoKBlNUUklORxADEgsKB0JPT0xFQU4QBBIKCgZE" + 
          "T1VCTEUQBRIKCgZCSU5BUlkQBipNChdSb3dFeGlzdGVuY2VFeHBlY3RhdGlv" + 
          "bhIKCgZJR05PUkUQABIQCgxFWFBFQ1RfRVhJU1QQARIUChBFWFBFQ1RfTk9U" + 
          "X0VYSVNUEAIqOgoTQ29sdW1uQ29uZGl0aW9uVHlwZRIQCgxDQ1RfUkVMQVRJ" + 
          "T04QARIRCg1DQ1RfQ09NUE9TSVRFEAIqgAEKDkNvbXBhcmF0b3JUeXBlEgwK" + 
          "CENUX0VRVUFMEAESEAoMQ1RfTk9UX0VRVUFMEAISEwoPQ1RfR1JFQVRFUl9U" + 
          "SEFOEAMSFAoQQ1RfR1JFQVRFUl9FUVVBTBAEEhAKDENUX0xFU1NfVEhBThAF" + 
          "EhEKDUNUX0xFU1NfRVFVQUwQBio0Cg9Mb2dpY2FsT3BlcmF0b3ISCgoGTE9f" + 
          "Tk9UEAESCgoGTE9fQU5EEAISCQoFTE9fT1IQAyokCg1PcGVyYXRpb25UeXBl" + 
          "EgcKA1BVVBABEgoKBkRFTEVURRACKiYKCURpcmVjdGlvbhILCgdGT1JXQVJE" + 
          "EAASDAoIQkFDS1dBUkQQASo2CgxTdHJlYW1TdGF0dXMSEwoPU1RSRUFNX0VO" + 
          "QUJMSU5HEAESEQoNU1RSRUFNX0FDVElWRRACKksKE1N0cmVhbU9wZXJhdGlv" + 
          "blR5cGUSDgoKU1RSRUFNX1BVVBABEhEKDVNUUkVBTV9VUERBVEUQAhIRCg1T" + 
          "VFJFQU1fREVMRVRFEAM=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_aliyun_cloudservice_ots2_Error__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_aliyun_cloudservice_ots2_Error__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Error, global::com.aliyun.cloudservice.ots2.Error.Builder>(internal__static_com_aliyun_cloudservice_ots2_Error__Descriptor,
                new string[] { "Code", "Message", });
        internal__static_com_aliyun_cloudservice_ots2_ColumnSchema__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_aliyun_cloudservice_ots2_ColumnSchema__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnSchema, global::com.aliyun.cloudservice.ots2.ColumnSchema.Builder>(internal__static_com_aliyun_cloudservice_ots2_ColumnSchema__Descriptor,
                new string[] { "Name", "Type", });
        internal__static_com_aliyun_cloudservice_ots2_ColumnValue__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_aliyun_cloudservice_ots2_ColumnValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnValue, global::com.aliyun.cloudservice.ots2.ColumnValue.Builder>(internal__static_com_aliyun_cloudservice_ots2_ColumnValue__Descriptor,
                new string[] { "Type", "VInt", "VString", "VBool", "VDouble", "VBinary", });
        internal__static_com_aliyun_cloudservice_ots2_Column__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_aliyun_cloudservice_ots2_Column__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Column, global::com.aliyun.cloudservice.ots2.Column.Builder>(internal__static_com_aliyun_cloudservice_ots2_Column__Descriptor,
                new string[] { "Name", "Value", });
        internal__static_com_aliyun_cloudservice_ots2_Row__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_aliyun_cloudservice_ots2_Row__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Row, global::com.aliyun.cloudservice.ots2.Row.Builder>(internal__static_com_aliyun_cloudservice_ots2_Row__Descriptor,
                new string[] { "PrimaryKeyColumns", "AttributeColumns", });
        internal__static_com_aliyun_cloudservice_ots2_TableMeta__Descriptor = Descriptor.MessageTypes[5];
        internal__static_com_aliyun_cloudservice_ots2_TableMeta__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableMeta, global::com.aliyun.cloudservice.ots2.TableMeta.Builder>(internal__static_com_aliyun_cloudservice_ots2_TableMeta__Descriptor,
                new string[] { "TableName", "PrimaryKey", });
        internal__static_com_aliyun_cloudservice_ots2_RelationCondition__Descriptor = Descriptor.MessageTypes[6];
        internal__static_com_aliyun_cloudservice_ots2_RelationCondition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RelationCondition, global::com.aliyun.cloudservice.ots2.RelationCondition.Builder>(internal__static_com_aliyun_cloudservice_ots2_RelationCondition__Descriptor,
                new string[] { "Comparator", "ColumnName", "ColumnValue", "PassIfMissing", });
        internal__static_com_aliyun_cloudservice_ots2_CompositeCondition__Descriptor = Descriptor.MessageTypes[7];
        internal__static_com_aliyun_cloudservice_ots2_CompositeCondition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CompositeCondition, global::com.aliyun.cloudservice.ots2.CompositeCondition.Builder>(internal__static_com_aliyun_cloudservice_ots2_CompositeCondition__Descriptor,
                new string[] { "Combinator", "SubConditions", });
        internal__static_com_aliyun_cloudservice_ots2_ColumnCondition__Descriptor = Descriptor.MessageTypes[8];
        internal__static_com_aliyun_cloudservice_ots2_ColumnCondition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnCondition, global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder>(internal__static_com_aliyun_cloudservice_ots2_ColumnCondition__Descriptor,
                new string[] { "Type", "Condition", });
        internal__static_com_aliyun_cloudservice_ots2_Condition__Descriptor = Descriptor.MessageTypes[9];
        internal__static_com_aliyun_cloudservice_ots2_Condition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Condition, global::com.aliyun.cloudservice.ots2.Condition.Builder>(internal__static_com_aliyun_cloudservice_ots2_Condition__Descriptor,
                new string[] { "RowExistence", "ColumnCondition", });
        internal__static_com_aliyun_cloudservice_ots2_CapacityUnit__Descriptor = Descriptor.MessageTypes[10];
        internal__static_com_aliyun_cloudservice_ots2_CapacityUnit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CapacityUnit, global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder>(internal__static_com_aliyun_cloudservice_ots2_CapacityUnit__Descriptor,
                new string[] { "Read", "Write", });
        internal__static_com_aliyun_cloudservice_ots2_ReservedThroughputDetails__Descriptor = Descriptor.MessageTypes[11];
        internal__static_com_aliyun_cloudservice_ots2_ReservedThroughputDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails, global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.Builder>(internal__static_com_aliyun_cloudservice_ots2_ReservedThroughputDetails__Descriptor,
                new string[] { "CapacityUnit", "LastIncreaseTime", "LastDecreaseTime", "NumberOfDecreasesToday", });
        internal__static_com_aliyun_cloudservice_ots2_ReservedThroughput__Descriptor = Descriptor.MessageTypes[12];
        internal__static_com_aliyun_cloudservice_ots2_ReservedThroughput__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ReservedThroughput, global::com.aliyun.cloudservice.ots2.ReservedThroughput.Builder>(internal__static_com_aliyun_cloudservice_ots2_ReservedThroughput__Descriptor,
                new string[] { "CapacityUnit", });
        internal__static_com_aliyun_cloudservice_ots2_ConsumedCapacity__Descriptor = Descriptor.MessageTypes[13];
        internal__static_com_aliyun_cloudservice_ots2_ConsumedCapacity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ConsumedCapacity, global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder>(internal__static_com_aliyun_cloudservice_ots2_ConsumedCapacity__Descriptor,
                new string[] { "CapacityUnit", });
        internal__static_com_aliyun_cloudservice_ots2_StreamSpecification__Descriptor = Descriptor.MessageTypes[14];
        internal__static_com_aliyun_cloudservice_ots2_StreamSpecification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamSpecification, global::com.aliyun.cloudservice.ots2.StreamSpecification.Builder>(internal__static_com_aliyun_cloudservice_ots2_StreamSpecification__Descriptor,
                new string[] { "EnableStream", "ExpirationTime", });
        internal__static_com_aliyun_cloudservice_ots2_StreamDetails__Descriptor = Descriptor.MessageTypes[15];
        internal__static_com_aliyun_cloudservice_ots2_StreamDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamDetails, global::com.aliyun.cloudservice.ots2.StreamDetails.Builder>(internal__static_com_aliyun_cloudservice_ots2_StreamDetails__Descriptor,
                new string[] { "EnableStream", "StreamId", "ExpirationTime", "LastEnableTime", });
        internal__static_com_aliyun_cloudservice_ots2_CreateTableRequest__Descriptor = Descriptor.MessageTypes[16];
        internal__static_com_aliyun_cloudservice_ots2_CreateTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CreateTableRequest, global::com.aliyun.cloudservice.ots2.CreateTableRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_CreateTableRequest__Descriptor,
                new string[] { "TableMeta", "ReservedThroughput", "StreamSpec", });
        internal__static_com_aliyun_cloudservice_ots2_CreateTableResponse__Descriptor = Descriptor.MessageTypes[17];
        internal__static_com_aliyun_cloudservice_ots2_CreateTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.CreateTableResponse, global::com.aliyun.cloudservice.ots2.CreateTableResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_CreateTableResponse__Descriptor,
                new string[] { });
        internal__static_com_aliyun_cloudservice_ots2_UpdateTableRequest__Descriptor = Descriptor.MessageTypes[18];
        internal__static_com_aliyun_cloudservice_ots2_UpdateTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateTableRequest, global::com.aliyun.cloudservice.ots2.UpdateTableRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_UpdateTableRequest__Descriptor,
                new string[] { "TableName", "ReservedThroughput", "StreamSpec", });
        internal__static_com_aliyun_cloudservice_ots2_UpdateTableResponse__Descriptor = Descriptor.MessageTypes[19];
        internal__static_com_aliyun_cloudservice_ots2_UpdateTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateTableResponse, global::com.aliyun.cloudservice.ots2.UpdateTableResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_UpdateTableResponse__Descriptor,
                new string[] { "ReservedThroughputDetails", "StreamDetails", });
        internal__static_com_aliyun_cloudservice_ots2_DescribeTableRequest__Descriptor = Descriptor.MessageTypes[20];
        internal__static_com_aliyun_cloudservice_ots2_DescribeTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeTableRequest, global::com.aliyun.cloudservice.ots2.DescribeTableRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_DescribeTableRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_aliyun_cloudservice_ots2_DescribeTableResponse__Descriptor = Descriptor.MessageTypes[21];
        internal__static_com_aliyun_cloudservice_ots2_DescribeTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeTableResponse, global::com.aliyun.cloudservice.ots2.DescribeTableResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_DescribeTableResponse__Descriptor,
                new string[] { "TableMeta", "ReservedThroughputDetails", "StreamDetails", });
        internal__static_com_aliyun_cloudservice_ots2_ListTableRequest__Descriptor = Descriptor.MessageTypes[22];
        internal__static_com_aliyun_cloudservice_ots2_ListTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListTableRequest, global::com.aliyun.cloudservice.ots2.ListTableRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_ListTableRequest__Descriptor,
                new string[] { });
        internal__static_com_aliyun_cloudservice_ots2_ListTableResponse__Descriptor = Descriptor.MessageTypes[23];
        internal__static_com_aliyun_cloudservice_ots2_ListTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListTableResponse, global::com.aliyun.cloudservice.ots2.ListTableResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_ListTableResponse__Descriptor,
                new string[] { "TableNames", });
        internal__static_com_aliyun_cloudservice_ots2_DeleteTableRequest__Descriptor = Descriptor.MessageTypes[24];
        internal__static_com_aliyun_cloudservice_ots2_DeleteTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteTableRequest, global::com.aliyun.cloudservice.ots2.DeleteTableRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_DeleteTableRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_aliyun_cloudservice_ots2_DeleteTableResponse__Descriptor = Descriptor.MessageTypes[25];
        internal__static_com_aliyun_cloudservice_ots2_DeleteTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteTableResponse, global::com.aliyun.cloudservice.ots2.DeleteTableResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_DeleteTableResponse__Descriptor,
                new string[] { });
        internal__static_com_aliyun_cloudservice_ots2_GetRowRequest__Descriptor = Descriptor.MessageTypes[26];
        internal__static_com_aliyun_cloudservice_ots2_GetRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRowRequest, global::com.aliyun.cloudservice.ots2.GetRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetRowRequest__Descriptor,
                new string[] { "TableName", "PrimaryKey", "ColumnsToGet", "Filter", });
        internal__static_com_aliyun_cloudservice_ots2_GetRowResponse__Descriptor = Descriptor.MessageTypes[27];
        internal__static_com_aliyun_cloudservice_ots2_GetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRowResponse, global::com.aliyun.cloudservice.ots2.GetRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetRowResponse__Descriptor,
                new string[] { "Consumed", "Row", });
        internal__static_com_aliyun_cloudservice_ots2_ColumnUpdate__Descriptor = Descriptor.MessageTypes[28];
        internal__static_com_aliyun_cloudservice_ots2_ColumnUpdate__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ColumnUpdate, global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder>(internal__static_com_aliyun_cloudservice_ots2_ColumnUpdate__Descriptor,
                new string[] { "Type", "Name", "Value", });
        internal__static_com_aliyun_cloudservice_ots2_UpdateRowRequest__Descriptor = Descriptor.MessageTypes[29];
        internal__static_com_aliyun_cloudservice_ots2_UpdateRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateRowRequest, global::com.aliyun.cloudservice.ots2.UpdateRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_UpdateRowRequest__Descriptor,
                new string[] { "TableName", "Condition", "PrimaryKey", "AttributeColumns", });
        internal__static_com_aliyun_cloudservice_ots2_UpdateRowResponse__Descriptor = Descriptor.MessageTypes[30];
        internal__static_com_aliyun_cloudservice_ots2_UpdateRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateRowResponse, global::com.aliyun.cloudservice.ots2.UpdateRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_UpdateRowResponse__Descriptor,
                new string[] { "Consumed", });
        internal__static_com_aliyun_cloudservice_ots2_PutRowRequest__Descriptor = Descriptor.MessageTypes[31];
        internal__static_com_aliyun_cloudservice_ots2_PutRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.PutRowRequest, global::com.aliyun.cloudservice.ots2.PutRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_PutRowRequest__Descriptor,
                new string[] { "TableName", "Condition", "PrimaryKey", "AttributeColumns", });
        internal__static_com_aliyun_cloudservice_ots2_PutRowResponse__Descriptor = Descriptor.MessageTypes[32];
        internal__static_com_aliyun_cloudservice_ots2_PutRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.PutRowResponse, global::com.aliyun.cloudservice.ots2.PutRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_PutRowResponse__Descriptor,
                new string[] { "Consumed", });
        internal__static_com_aliyun_cloudservice_ots2_DeleteRowRequest__Descriptor = Descriptor.MessageTypes[33];
        internal__static_com_aliyun_cloudservice_ots2_DeleteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteRowRequest, global::com.aliyun.cloudservice.ots2.DeleteRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_DeleteRowRequest__Descriptor,
                new string[] { "TableName", "Condition", "PrimaryKey", });
        internal__static_com_aliyun_cloudservice_ots2_DeleteRowResponse__Descriptor = Descriptor.MessageTypes[34];
        internal__static_com_aliyun_cloudservice_ots2_DeleteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteRowResponse, global::com.aliyun.cloudservice.ots2.DeleteRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_DeleteRowResponse__Descriptor,
                new string[] { "Consumed", });
        internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowRequest__Descriptor = Descriptor.MessageTypes[35];
        internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowRequest__Descriptor,
                new string[] { "PrimaryKey", });
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowRequest__Descriptor = Descriptor.MessageTypes[36];
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowRequest__Descriptor,
                new string[] { "TableName", "Rows", "ColumnsToGet", "Filter", });
        internal__static_com_aliyun_cloudservice_ots2_BatchGetRowRequest__Descriptor = Descriptor.MessageTypes[37];
        internal__static_com_aliyun_cloudservice_ots2_BatchGetRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchGetRowRequest, global::com.aliyun.cloudservice.ots2.BatchGetRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_BatchGetRowRequest__Descriptor,
                new string[] { "Tables", });
        internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowResponse__Descriptor = Descriptor.MessageTypes[38];
        internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowResponse__Descriptor,
                new string[] { "IsOk", "Error", "Consumed", "Row", });
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowResponse__Descriptor = Descriptor.MessageTypes[39];
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowResponse__Descriptor,
                new string[] { "TableName", "Rows", });
        internal__static_com_aliyun_cloudservice_ots2_BatchGetRowResponse__Descriptor = Descriptor.MessageTypes[40];
        internal__static_com_aliyun_cloudservice_ots2_BatchGetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchGetRowResponse, global::com.aliyun.cloudservice.ots2.BatchGetRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_BatchGetRowResponse__Descriptor,
                new string[] { "Tables", });
        internal__static_com_aliyun_cloudservice_ots2_PutRowInBatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[41];
        internal__static_com_aliyun_cloudservice_ots2_PutRowInBatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_PutRowInBatchWriteRowRequest__Descriptor,
                new string[] { "Condition", "PrimaryKey", "AttributeColumns", });
        internal__static_com_aliyun_cloudservice_ots2_UpdateRowInBatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[42];
        internal__static_com_aliyun_cloudservice_ots2_UpdateRowInBatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_UpdateRowInBatchWriteRowRequest__Descriptor,
                new string[] { "Condition", "PrimaryKey", "AttributeColumns", });
        internal__static_com_aliyun_cloudservice_ots2_DeleteRowInBatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[43];
        internal__static_com_aliyun_cloudservice_ots2_DeleteRowInBatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_DeleteRowInBatchWriteRowRequest__Descriptor,
                new string[] { "Condition", "PrimaryKey", });
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[44];
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowRequest__Descriptor,
                new string[] { "TableName", "PutRows", "UpdateRows", "DeleteRows", });
        internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[45];
        internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchWriteRowRequest, global::com.aliyun.cloudservice.ots2.BatchWriteRowRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowRequest__Descriptor,
                new string[] { "Tables", });
        internal__static_com_aliyun_cloudservice_ots2_RowInBatchWriteRowResponse__Descriptor = Descriptor.MessageTypes[46];
        internal__static_com_aliyun_cloudservice_ots2_RowInBatchWriteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_RowInBatchWriteRowResponse__Descriptor,
                new string[] { "IsOk", "Error", "Consumed", });
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowResponse__Descriptor = Descriptor.MessageTypes[47];
        internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowResponse__Descriptor,
                new string[] { "TableName", "PutRows", "UpdateRows", "DeleteRows", });
        internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowResponse__Descriptor = Descriptor.MessageTypes[48];
        internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.BatchWriteRowResponse, global::com.aliyun.cloudservice.ots2.BatchWriteRowResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowResponse__Descriptor,
                new string[] { "Tables", });
        internal__static_com_aliyun_cloudservice_ots2_GetRangeRequest__Descriptor = Descriptor.MessageTypes[49];
        internal__static_com_aliyun_cloudservice_ots2_GetRangeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRangeRequest, global::com.aliyun.cloudservice.ots2.GetRangeRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetRangeRequest__Descriptor,
                new string[] { "TableName", "Direction", "ColumnsToGet", "Limit", "InclusiveStartPrimaryKey", "ExclusiveEndPrimaryKey", "Filter", });
        internal__static_com_aliyun_cloudservice_ots2_GetRangeResponse__Descriptor = Descriptor.MessageTypes[50];
        internal__static_com_aliyun_cloudservice_ots2_GetRangeResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetRangeResponse, global::com.aliyun.cloudservice.ots2.GetRangeResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetRangeResponse__Descriptor,
                new string[] { "Consumed", "NextStartPrimaryKey", "Rows", });
        internal__static_com_aliyun_cloudservice_ots2_ListStreamRequest__Descriptor = Descriptor.MessageTypes[51];
        internal__static_com_aliyun_cloudservice_ots2_ListStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListStreamRequest, global::com.aliyun.cloudservice.ots2.ListStreamRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_ListStreamRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_aliyun_cloudservice_ots2_ListStreamResponse__Descriptor = Descriptor.MessageTypes[52];
        internal__static_com_aliyun_cloudservice_ots2_ListStreamResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.ListStreamResponse, global::com.aliyun.cloudservice.ots2.ListStreamResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_ListStreamResponse__Descriptor,
                new string[] { "Streams", });
        internal__static_com_aliyun_cloudservice_ots2_Stream__Descriptor = Descriptor.MessageTypes[53];
        internal__static_com_aliyun_cloudservice_ots2_Stream__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.Stream, global::com.aliyun.cloudservice.ots2.Stream.Builder>(internal__static_com_aliyun_cloudservice_ots2_Stream__Descriptor,
                new string[] { "StreamId", "TableName", "CreationTime", });
        internal__static_com_aliyun_cloudservice_ots2_StreamShard__Descriptor = Descriptor.MessageTypes[54];
        internal__static_com_aliyun_cloudservice_ots2_StreamShard__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamShard, global::com.aliyun.cloudservice.ots2.StreamShard.Builder>(internal__static_com_aliyun_cloudservice_ots2_StreamShard__Descriptor,
                new string[] { "ShardId", "ParentId", "ParentSiblingId", });
        internal__static_com_aliyun_cloudservice_ots2_DescribeStreamRequest__Descriptor = Descriptor.MessageTypes[55];
        internal__static_com_aliyun_cloudservice_ots2_DescribeStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeStreamRequest, global::com.aliyun.cloudservice.ots2.DescribeStreamRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_DescribeStreamRequest__Descriptor,
                new string[] { "StreamId", "InclusiveStartShardId", "ShardLimit", });
        internal__static_com_aliyun_cloudservice_ots2_DescribeStreamResponse__Descriptor = Descriptor.MessageTypes[56];
        internal__static_com_aliyun_cloudservice_ots2_DescribeStreamResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.DescribeStreamResponse, global::com.aliyun.cloudservice.ots2.DescribeStreamResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_DescribeStreamResponse__Descriptor,
                new string[] { "StreamId", "ExpirationTime", "TableName", "CreationTime", "StreamStatus", "Shards", "NextShardId", });
        internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorRequest__Descriptor = Descriptor.MessageTypes[57];
        internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetShardIteratorRequest, global::com.aliyun.cloudservice.ots2.GetShardIteratorRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorRequest__Descriptor,
                new string[] { "StreamId", "ShardId", });
        internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorResponse__Descriptor = Descriptor.MessageTypes[58];
        internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetShardIteratorResponse, global::com.aliyun.cloudservice.ots2.GetShardIteratorResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorResponse__Descriptor,
                new string[] { "ShardIterator", });
        internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordRequest__Descriptor = Descriptor.MessageTypes[59];
        internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetStreamRecordRequest, global::com.aliyun.cloudservice.ots2.GetStreamRecordRequest.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordRequest__Descriptor,
                new string[] { "ShardIterator", "Limit", });
        internal__static_com_aliyun_cloudservice_ots2_RecordSequenceInfo__Descriptor = Descriptor.MessageTypes[60];
        internal__static_com_aliyun_cloudservice_ots2_RecordSequenceInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.RecordSequenceInfo, global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.Builder>(internal__static_com_aliyun_cloudservice_ots2_RecordSequenceInfo__Descriptor,
                new string[] { "Epoch", "Timestamp", "RowIndex", });
        internal__static_com_aliyun_cloudservice_ots2_StreamRecord__Descriptor = Descriptor.MessageTypes[61];
        internal__static_com_aliyun_cloudservice_ots2_StreamRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.StreamRecord, global::com.aliyun.cloudservice.ots2.StreamRecord.Builder>(internal__static_com_aliyun_cloudservice_ots2_StreamRecord__Descriptor,
                new string[] { "OpType", "PrimaryKey", "AttributeColumnsForPut", "AttributeColumnsForUpdate", "SequenceInfo", });
        internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordResponse__Descriptor = Descriptor.MessageTypes[62];
        internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.aliyun.cloudservice.ots2.GetStreamRecordResponse, global::com.aliyun.cloudservice.ots2.GetStreamRecordResponse.Builder>(internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordResponse__Descriptor,
                new string[] { "StreamRecords", "NextShardIterator", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum ColumnType {
    INF_MIN = 0,
    INF_MAX = 1,
    INTEGER = 2,
    STRING = 3,
    BOOLEAN = 4,
    DOUBLE = 5,
    BINARY = 6,
  }
  
  public enum RowExistenceExpectation {
    IGNORE = 0,
    EXPECT_EXIST = 1,
    EXPECT_NOT_EXIST = 2,
  }
  
  public enum ColumnConditionType {
    CCT_RELATION = 1,
    CCT_COMPOSITE = 2,
  }
  
  public enum ComparatorType {
    CT_EQUAL = 1,
    CT_NOT_EQUAL = 2,
    CT_GREATER_THAN = 3,
    CT_GREATER_EQUAL = 4,
    CT_LESS_THAN = 5,
    CT_LESS_EQUAL = 6,
  }
  
  public enum LogicalOperator {
    LO_NOT = 1,
    LO_AND = 2,
    LO_OR = 3,
  }
  
  public enum OperationType {
    PUT = 1,
    DELETE = 2,
  }
  
  public enum Direction {
    FORWARD = 0,
    BACKWARD = 1,
  }
  
  public enum StreamStatus {
    STREAM_ENABLING = 1,
    STREAM_ACTIVE = 2,
  }
  
  public enum StreamOperationType {
    STREAM_PUT = 1,
    STREAM_UPDATE = 2,
    STREAM_DELETE = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Error : pb::GeneratedMessage<Error, Error.Builder> {
    private Error() { }
    private static readonly Error defaultInstance = new Error().MakeReadOnly();
    private static readonly string[] _errorFieldNames = new string[] { "code", "message" };
    private static readonly uint[] _errorFieldTags = new uint[] { 10, 18 };
    public static Error DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Error DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Error ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Error__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Error, Error.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Error__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private string code_ = "";
    public bool HasCode {
      get { return hasCode; }
    }
    public string Code {
      get { return code_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _errorFieldNames;
      if (hasCode) {
        output.WriteString(1, field_names[0], Code);
      }
      if (hasMessage) {
        output.WriteString(2, field_names[1], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCode) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Code);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Error ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Error ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Error ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Error ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Error ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Error ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Error ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Error ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Error ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Error ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Error MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Error prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Error, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Error cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Error result;
      
      private Error PrepareBuilder() {
        if (resultIsReadOnly) {
          Error original = result;
          result = new Error();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Error MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.Error.Descriptor; }
      }
      
      public override Error DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.Error.DefaultInstance; }
      }
      
      public override Error BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Error) {
          return MergeFrom((Error) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Error other) {
        if (other == global::com.aliyun.cloudservice.ots2.Error.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_errorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _errorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCode = input.ReadString(ref result.code_);
              break;
            }
            case 18: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public string Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = "";
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static Error() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnSchema : pb::GeneratedMessage<ColumnSchema, ColumnSchema.Builder> {
    private ColumnSchema() { }
    private static readonly ColumnSchema defaultInstance = new ColumnSchema().MakeReadOnly();
    private static readonly string[] _columnSchemaFieldNames = new string[] { "name", "type" };
    private static readonly uint[] _columnSchemaFieldTags = new uint[] { 10, 16 };
    public static ColumnSchema DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnSchema DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnSchema ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnSchema__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnSchema, ColumnSchema.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnSchema__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::com.aliyun.cloudservice.ots2.ColumnType type_ = global::com.aliyun.cloudservice.ots2.ColumnType.INF_MIN;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnType Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _columnSchemaFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[1], (int) Type, Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ColumnSchema ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnSchema ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnSchema ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnSchema ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnSchema ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnSchema MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnSchema prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnSchema, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnSchema cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnSchema result;
      
      private ColumnSchema PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnSchema original = result;
          result = new ColumnSchema();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnSchema MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnSchema.Descriptor; }
      }
      
      public override ColumnSchema DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnSchema.DefaultInstance; }
      }
      
      public override ColumnSchema BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnSchema) {
          return MergeFrom((ColumnSchema) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnSchema other) {
        if (other == global::com.aliyun.cloudservice.ots2.ColumnSchema.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnSchemaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.aliyun.cloudservice.ots2.ColumnType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.aliyun.cloudservice.ots2.ColumnType.INF_MIN;
        return this;
      }
    }
    static ColumnSchema() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnValue : pb::GeneratedMessage<ColumnValue, ColumnValue.Builder> {
    private ColumnValue() { }
    private static readonly ColumnValue defaultInstance = new ColumnValue().MakeReadOnly();
    private static readonly string[] _columnValueFieldNames = new string[] { "type", "v_binary", "v_bool", "v_double", "v_int", "v_string" };
    private static readonly uint[] _columnValueFieldTags = new uint[] { 8, 50, 32, 41, 16, 26 };
    public static ColumnValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnValue, ColumnValue.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnValue__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::com.aliyun.cloudservice.ots2.ColumnType type_ = global::com.aliyun.cloudservice.ots2.ColumnType.INF_MIN;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnType Type {
      get { return type_; }
    }
    
    public const int VIntFieldNumber = 2;
    private bool hasVInt;
    private long vInt_;
    public bool HasVInt {
      get { return hasVInt; }
    }
    public long VInt {
      get { return vInt_; }
    }
    
    public const int VStringFieldNumber = 3;
    private bool hasVString;
    private string vString_ = "";
    public bool HasVString {
      get { return hasVString; }
    }
    public string VString {
      get { return vString_; }
    }
    
    public const int VBoolFieldNumber = 4;
    private bool hasVBool;
    private bool vBool_;
    public bool HasVBool {
      get { return hasVBool; }
    }
    public bool VBool {
      get { return vBool_; }
    }
    
    public const int VDoubleFieldNumber = 5;
    private bool hasVDouble;
    private double vDouble_;
    public bool HasVDouble {
      get { return hasVDouble; }
    }
    public double VDouble {
      get { return vDouble_; }
    }
    
    public const int VBinaryFieldNumber = 6;
    private bool hasVBinary;
    private pb::ByteString vBinary_ = pb::ByteString.Empty;
    public bool HasVBinary {
      get { return hasVBinary; }
    }
    public pb::ByteString VBinary {
      get { return vBinary_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _columnValueFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[0], (int) Type, Type);
      }
      if (hasVInt) {
        output.WriteInt64(2, field_names[4], VInt);
      }
      if (hasVString) {
        output.WriteString(3, field_names[5], VString);
      }
      if (hasVBool) {
        output.WriteBool(4, field_names[2], VBool);
      }
      if (hasVDouble) {
        output.WriteDouble(5, field_names[3], VDouble);
      }
      if (hasVBinary) {
        output.WriteBytes(6, field_names[1], VBinary);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        if (hasVInt) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, VInt);
        }
        if (hasVString) {
          size += pb::CodedOutputStream.ComputeStringSize(3, VString);
        }
        if (hasVBool) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, VBool);
        }
        if (hasVDouble) {
          size += pb::CodedOutputStream.ComputeDoubleSize(5, VDouble);
        }
        if (hasVBinary) {
          size += pb::CodedOutputStream.ComputeBytesSize(6, VBinary);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ColumnValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnValue MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnValue result;
      
      private ColumnValue PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnValue original = result;
          result = new ColumnValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnValue.Descriptor; }
      }
      
      public override ColumnValue DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance; }
      }
      
      public override ColumnValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnValue) {
          return MergeFrom((ColumnValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnValue other) {
        if (other == global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasVInt) {
          VInt = other.VInt;
        }
        if (other.HasVString) {
          VString = other.VString;
        }
        if (other.HasVBool) {
          VBool = other.VBool;
        }
        if (other.HasVDouble) {
          VDouble = other.VDouble;
        }
        if (other.HasVBinary) {
          VBinary = other.VBinary;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasVInt = input.ReadInt64(ref result.vInt_);
              break;
            }
            case 26: {
              result.hasVString = input.ReadString(ref result.vString_);
              break;
            }
            case 32: {
              result.hasVBool = input.ReadBool(ref result.vBool_);
              break;
            }
            case 41: {
              result.hasVDouble = input.ReadDouble(ref result.vDouble_);
              break;
            }
            case 50: {
              result.hasVBinary = input.ReadBytes(ref result.vBinary_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.aliyun.cloudservice.ots2.ColumnType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.aliyun.cloudservice.ots2.ColumnType.INF_MIN;
        return this;
      }
      
      public bool HasVInt {
        get { return result.hasVInt; }
      }
      public long VInt {
        get { return result.VInt; }
        set { SetVInt(value); }
      }
      public Builder SetVInt(long value) {
        PrepareBuilder();
        result.hasVInt = true;
        result.vInt_ = value;
        return this;
      }
      public Builder ClearVInt() {
        PrepareBuilder();
        result.hasVInt = false;
        result.vInt_ = 0L;
        return this;
      }
      
      public bool HasVString {
        get { return result.hasVString; }
      }
      public string VString {
        get { return result.VString; }
        set { SetVString(value); }
      }
      public Builder SetVString(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVString = true;
        result.vString_ = value;
        return this;
      }
      public Builder ClearVString() {
        PrepareBuilder();
        result.hasVString = false;
        result.vString_ = "";
        return this;
      }
      
      public bool HasVBool {
        get { return result.hasVBool; }
      }
      public bool VBool {
        get { return result.VBool; }
        set { SetVBool(value); }
      }
      public Builder SetVBool(bool value) {
        PrepareBuilder();
        result.hasVBool = true;
        result.vBool_ = value;
        return this;
      }
      public Builder ClearVBool() {
        PrepareBuilder();
        result.hasVBool = false;
        result.vBool_ = false;
        return this;
      }
      
      public bool HasVDouble {
        get { return result.hasVDouble; }
      }
      public double VDouble {
        get { return result.VDouble; }
        set { SetVDouble(value); }
      }
      public Builder SetVDouble(double value) {
        PrepareBuilder();
        result.hasVDouble = true;
        result.vDouble_ = value;
        return this;
      }
      public Builder ClearVDouble() {
        PrepareBuilder();
        result.hasVDouble = false;
        result.vDouble_ = 0D;
        return this;
      }
      
      public bool HasVBinary {
        get { return result.hasVBinary; }
      }
      public pb::ByteString VBinary {
        get { return result.VBinary; }
        set { SetVBinary(value); }
      }
      public Builder SetVBinary(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVBinary = true;
        result.vBinary_ = value;
        return this;
      }
      public Builder ClearVBinary() {
        PrepareBuilder();
        result.hasVBinary = false;
        result.vBinary_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ColumnValue() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Column : pb::GeneratedMessage<Column, Column.Builder> {
    private Column() { }
    private static readonly Column defaultInstance = new Column().MakeReadOnly();
    private static readonly string[] _columnFieldNames = new string[] { "name", "value" };
    private static readonly uint[] _columnFieldTags = new uint[] { 10, 18 };
    public static Column DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Column DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Column ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Column__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Column, Column.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Column__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private global::com.aliyun.cloudservice.ots2.ColumnValue value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnValue Value {
      get { return value_ ?? global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasValue) return false;
        if (!Value.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _columnFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasValue) {
        output.WriteMessage(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Column ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Column ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Column ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Column ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Column ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Column ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Column ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Column ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Column ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Column ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Column MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Column prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Column, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Column cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Column result;
      
      private Column PrepareBuilder() {
        if (resultIsReadOnly) {
          Column original = result;
          result = new Column();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Column MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.Column.Descriptor; }
      }
      
      public override Column DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.Column.DefaultInstance; }
      }
      
      public override Column BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Column) {
          return MergeFrom((Column) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Column other) {
        if (other == global::com.aliyun.cloudservice.ots2.Column.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.ColumnValue.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ColumnValue.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnValue Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::com.aliyun.cloudservice.ots2.ColumnValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::com.aliyun.cloudservice.ots2.ColumnValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::com.aliyun.cloudservice.ots2.ColumnValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance) {
            result.value_ = global::com.aliyun.cloudservice.ots2.ColumnValue.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static Column() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Row : pb::GeneratedMessage<Row, Row.Builder> {
    private Row() { }
    private static readonly Row defaultInstance = new Row().MakeReadOnly();
    private static readonly string[] _rowFieldNames = new string[] { "attribute_columns", "primary_key_columns" };
    private static readonly uint[] _rowFieldTags = new uint[] { 18, 10 };
    public static Row DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Row DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Row ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Row__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Row, Row.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Row__FieldAccessorTable; }
    }
    
    public const int PrimaryKeyColumnsFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKeyColumns_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyColumnsList {
      get { return primaryKeyColumns_; }
    }
    public int PrimaryKeyColumnsCount {
      get { return primaryKeyColumns_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKeyColumns(int index) {
      return primaryKeyColumns_[index];
    }
    
    public const int AttributeColumnsFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> attributeColumns_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsList {
      get { return attributeColumns_; }
    }
    public int AttributeColumnsCount {
      get { return attributeColumns_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumns(int index) {
      return attributeColumns_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyColumnsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _rowFieldNames;
      if (primaryKeyColumns_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], primaryKeyColumns_);
      }
      if (attributeColumns_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attributeColumns_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyColumnsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Row ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Row ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Row ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Row ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Row ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Row ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Row ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Row ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Row ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Row ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Row MakeReadOnly() {
      primaryKeyColumns_.MakeReadOnly();
      attributeColumns_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Row prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Row, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Row cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Row result;
      
      private Row PrepareBuilder() {
        if (resultIsReadOnly) {
          Row original = result;
          result = new Row();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Row MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.Row.Descriptor; }
      }
      
      public override Row DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.Row.DefaultInstance; }
      }
      
      public override Row BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Row) {
          return MergeFrom((Row) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Row other) {
        if (other == global::com.aliyun.cloudservice.ots2.Row.DefaultInstance) return this;
        PrepareBuilder();
        if (other.primaryKeyColumns_.Count != 0) {
          result.primaryKeyColumns_.Add(other.primaryKeyColumns_);
        }
        if (other.attributeColumns_.Count != 0) {
          result.attributeColumns_.Add(other.attributeColumns_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.primaryKeyColumns_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attributeColumns_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyColumnsList {
        get { return PrepareBuilder().primaryKeyColumns_; }
      }
      public int PrimaryKeyColumnsCount {
        get { return result.PrimaryKeyColumnsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKeyColumns(int index) {
        return result.GetPrimaryKeyColumns(index);
      }
      public Builder SetPrimaryKeyColumns(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKeyColumns_[index] = value;
        return this;
      }
      public Builder SetPrimaryKeyColumns(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKeyColumns_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKeyColumns(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKeyColumns_.Add(value);
        return this;
      }
      public Builder AddPrimaryKeyColumns(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKeyColumns_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKeyColumns(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKeyColumns_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKeyColumns() {
        PrepareBuilder();
        result.primaryKeyColumns_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsList {
        get { return PrepareBuilder().attributeColumns_; }
      }
      public int AttributeColumnsCount {
        get { return result.AttributeColumnsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumns(int index) {
        return result.GetAttributeColumns(index);
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_[index] = value;
        return this;
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_.Add(value);
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributeColumns(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.attributeColumns_.Add(values);
        return this;
      }
      public Builder ClearAttributeColumns() {
        PrepareBuilder();
        result.attributeColumns_.Clear();
        return this;
      }
    }
    static Row() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableMeta : pb::GeneratedMessage<TableMeta, TableMeta.Builder> {
    private TableMeta() { }
    private static readonly TableMeta defaultInstance = new TableMeta().MakeReadOnly();
    private static readonly string[] _tableMetaFieldNames = new string[] { "primary_key", "table_name" };
    private static readonly uint[] _tableMetaFieldTags = new uint[] { 18, 10 };
    public static TableMeta DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableMeta DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableMeta ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableMeta__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableMeta, TableMeta.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableMeta__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnSchema> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnSchema>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.ColumnSchema> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnSchema GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.aliyun.cloudservice.ots2.ColumnSchema element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _tableMetaFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], primaryKey_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnSchema element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TableMeta ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableMeta ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableMeta ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableMeta ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableMeta ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableMeta ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableMeta ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableMeta ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableMeta ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableMeta ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableMeta MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableMeta prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableMeta, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableMeta cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableMeta result;
      
      private TableMeta PrepareBuilder() {
        if (resultIsReadOnly) {
          TableMeta original = result;
          result = new TableMeta();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableMeta MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.TableMeta.Descriptor; }
      }
      
      public override TableMeta DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.TableMeta.DefaultInstance; }
      }
      
      public override TableMeta BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableMeta) {
          return MergeFrom((TableMeta) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableMeta other) {
        if (other == global::com.aliyun.cloudservice.ots2.TableMeta.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableMetaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableMetaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.ColumnSchema.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.ColumnSchema> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnSchema GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.ColumnSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.ColumnSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.ColumnSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.ColumnSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.ColumnSchema> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
    }
    static TableMeta() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RelationCondition : pb::GeneratedMessage<RelationCondition, RelationCondition.Builder> {
    private RelationCondition() { }
    private static readonly RelationCondition defaultInstance = new RelationCondition().MakeReadOnly();
    private static readonly string[] _relationConditionFieldNames = new string[] { "column_name", "column_value", "comparator", "pass_if_missing" };
    private static readonly uint[] _relationConditionFieldTags = new uint[] { 18, 26, 8, 32 };
    public static RelationCondition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RelationCondition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RelationCondition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RelationCondition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RelationCondition, RelationCondition.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RelationCondition__FieldAccessorTable; }
    }
    
    public const int ComparatorFieldNumber = 1;
    private bool hasComparator;
    private global::com.aliyun.cloudservice.ots2.ComparatorType comparator_ = global::com.aliyun.cloudservice.ots2.ComparatorType.CT_EQUAL;
    public bool HasComparator {
      get { return hasComparator; }
    }
    public global::com.aliyun.cloudservice.ots2.ComparatorType Comparator {
      get { return comparator_; }
    }
    
    public const int ColumnNameFieldNumber = 2;
    private bool hasColumnName;
    private string columnName_ = "";
    public bool HasColumnName {
      get { return hasColumnName; }
    }
    public string ColumnName {
      get { return columnName_; }
    }
    
    public const int ColumnValueFieldNumber = 3;
    private bool hasColumnValue;
    private global::com.aliyun.cloudservice.ots2.ColumnValue columnValue_;
    public bool HasColumnValue {
      get { return hasColumnValue; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnValue ColumnValue {
      get { return columnValue_ ?? global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance; }
    }
    
    public const int PassIfMissingFieldNumber = 4;
    private bool hasPassIfMissing;
    private bool passIfMissing_;
    public bool HasPassIfMissing {
      get { return hasPassIfMissing; }
    }
    public bool PassIfMissing {
      get { return passIfMissing_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasComparator) return false;
        if (!hasColumnName) return false;
        if (!hasColumnValue) return false;
        if (!hasPassIfMissing) return false;
        if (!ColumnValue.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _relationConditionFieldNames;
      if (hasComparator) {
        output.WriteEnum(1, field_names[2], (int) Comparator, Comparator);
      }
      if (hasColumnName) {
        output.WriteString(2, field_names[0], ColumnName);
      }
      if (hasColumnValue) {
        output.WriteMessage(3, field_names[1], ColumnValue);
      }
      if (hasPassIfMissing) {
        output.WriteBool(4, field_names[3], PassIfMissing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasComparator) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Comparator);
        }
        if (hasColumnName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ColumnName);
        }
        if (hasColumnValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ColumnValue);
        }
        if (hasPassIfMissing) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, PassIfMissing);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RelationCondition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelationCondition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelationCondition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelationCondition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelationCondition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelationCondition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RelationCondition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RelationCondition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RelationCondition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelationCondition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RelationCondition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RelationCondition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RelationCondition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RelationCondition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RelationCondition result;
      
      private RelationCondition PrepareBuilder() {
        if (resultIsReadOnly) {
          RelationCondition original = result;
          result = new RelationCondition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RelationCondition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.RelationCondition.Descriptor; }
      }
      
      public override RelationCondition DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.RelationCondition.DefaultInstance; }
      }
      
      public override RelationCondition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RelationCondition) {
          return MergeFrom((RelationCondition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RelationCondition other) {
        if (other == global::com.aliyun.cloudservice.ots2.RelationCondition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasComparator) {
          Comparator = other.Comparator;
        }
        if (other.HasColumnName) {
          ColumnName = other.ColumnName;
        }
        if (other.HasColumnValue) {
          MergeColumnValue(other.ColumnValue);
        }
        if (other.HasPassIfMissing) {
          PassIfMissing = other.PassIfMissing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_relationConditionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _relationConditionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.comparator_, out unknown)) {
                result.hasComparator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasColumnName = input.ReadString(ref result.columnName_);
              break;
            }
            case 26: {
              global::com.aliyun.cloudservice.ots2.ColumnValue.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ColumnValue.CreateBuilder();
              if (result.hasColumnValue) {
                subBuilder.MergeFrom(ColumnValue);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ColumnValue = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasPassIfMissing = input.ReadBool(ref result.passIfMissing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasComparator {
       get { return result.hasComparator; }
      }
      public global::com.aliyun.cloudservice.ots2.ComparatorType Comparator {
        get { return result.Comparator; }
        set { SetComparator(value); }
      }
      public Builder SetComparator(global::com.aliyun.cloudservice.ots2.ComparatorType value) {
        PrepareBuilder();
        result.hasComparator = true;
        result.comparator_ = value;
        return this;
      }
      public Builder ClearComparator() {
        PrepareBuilder();
        result.hasComparator = false;
        result.comparator_ = global::com.aliyun.cloudservice.ots2.ComparatorType.CT_EQUAL;
        return this;
      }
      
      public bool HasColumnName {
        get { return result.hasColumnName; }
      }
      public string ColumnName {
        get { return result.ColumnName; }
        set { SetColumnName(value); }
      }
      public Builder SetColumnName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnName = true;
        result.columnName_ = value;
        return this;
      }
      public Builder ClearColumnName() {
        PrepareBuilder();
        result.hasColumnName = false;
        result.columnName_ = "";
        return this;
      }
      
      public bool HasColumnValue {
       get { return result.hasColumnValue; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnValue ColumnValue {
        get { return result.ColumnValue; }
        set { SetColumnValue(value); }
      }
      public Builder SetColumnValue(global::com.aliyun.cloudservice.ots2.ColumnValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnValue = true;
        result.columnValue_ = value;
        return this;
      }
      public Builder SetColumnValue(global::com.aliyun.cloudservice.ots2.ColumnValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasColumnValue = true;
        result.columnValue_ = builderForValue.Build();
        return this;
      }
      public Builder MergeColumnValue(global::com.aliyun.cloudservice.ots2.ColumnValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasColumnValue &&
            result.columnValue_ != global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance) {
            result.columnValue_ = global::com.aliyun.cloudservice.ots2.ColumnValue.CreateBuilder(result.columnValue_).MergeFrom(value).BuildPartial();
        } else {
          result.columnValue_ = value;
        }
        result.hasColumnValue = true;
        return this;
      }
      public Builder ClearColumnValue() {
        PrepareBuilder();
        result.hasColumnValue = false;
        result.columnValue_ = null;
        return this;
      }
      
      public bool HasPassIfMissing {
        get { return result.hasPassIfMissing; }
      }
      public bool PassIfMissing {
        get { return result.PassIfMissing; }
        set { SetPassIfMissing(value); }
      }
      public Builder SetPassIfMissing(bool value) {
        PrepareBuilder();
        result.hasPassIfMissing = true;
        result.passIfMissing_ = value;
        return this;
      }
      public Builder ClearPassIfMissing() {
        PrepareBuilder();
        result.hasPassIfMissing = false;
        result.passIfMissing_ = false;
        return this;
      }
    }
    static RelationCondition() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompositeCondition : pb::GeneratedMessage<CompositeCondition, CompositeCondition.Builder> {
    private CompositeCondition() { }
    private static readonly CompositeCondition defaultInstance = new CompositeCondition().MakeReadOnly();
    private static readonly string[] _compositeConditionFieldNames = new string[] { "combinator", "sub_conditions" };
    private static readonly uint[] _compositeConditionFieldTags = new uint[] { 8, 18 };
    public static CompositeCondition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CompositeCondition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CompositeCondition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CompositeCondition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CompositeCondition, CompositeCondition.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CompositeCondition__FieldAccessorTable; }
    }
    
    public const int CombinatorFieldNumber = 1;
    private bool hasCombinator;
    private global::com.aliyun.cloudservice.ots2.LogicalOperator combinator_ = global::com.aliyun.cloudservice.ots2.LogicalOperator.LO_NOT;
    public bool HasCombinator {
      get { return hasCombinator; }
    }
    public global::com.aliyun.cloudservice.ots2.LogicalOperator Combinator {
      get { return combinator_; }
    }
    
    public const int SubConditionsFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnCondition> subConditions_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnCondition>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.ColumnCondition> SubConditionsList {
      get { return subConditions_; }
    }
    public int SubConditionsCount {
      get { return subConditions_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnCondition GetSubConditions(int index) {
      return subConditions_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCombinator) return false;
        foreach (global::com.aliyun.cloudservice.ots2.ColumnCondition element in SubConditionsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _compositeConditionFieldNames;
      if (hasCombinator) {
        output.WriteEnum(1, field_names[0], (int) Combinator, Combinator);
      }
      if (subConditions_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], subConditions_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCombinator) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Combinator);
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnCondition element in SubConditionsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CompositeCondition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompositeCondition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompositeCondition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompositeCondition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompositeCondition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompositeCondition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CompositeCondition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CompositeCondition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CompositeCondition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompositeCondition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CompositeCondition MakeReadOnly() {
      subConditions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CompositeCondition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CompositeCondition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CompositeCondition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CompositeCondition result;
      
      private CompositeCondition PrepareBuilder() {
        if (resultIsReadOnly) {
          CompositeCondition original = result;
          result = new CompositeCondition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CompositeCondition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.CompositeCondition.Descriptor; }
      }
      
      public override CompositeCondition DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.CompositeCondition.DefaultInstance; }
      }
      
      public override CompositeCondition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CompositeCondition) {
          return MergeFrom((CompositeCondition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CompositeCondition other) {
        if (other == global::com.aliyun.cloudservice.ots2.CompositeCondition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCombinator) {
          Combinator = other.Combinator;
        }
        if (other.subConditions_.Count != 0) {
          result.subConditions_.Add(other.subConditions_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_compositeConditionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _compositeConditionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.combinator_, out unknown)) {
                result.hasCombinator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.subConditions_, global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCombinator {
       get { return result.hasCombinator; }
      }
      public global::com.aliyun.cloudservice.ots2.LogicalOperator Combinator {
        get { return result.Combinator; }
        set { SetCombinator(value); }
      }
      public Builder SetCombinator(global::com.aliyun.cloudservice.ots2.LogicalOperator value) {
        PrepareBuilder();
        result.hasCombinator = true;
        result.combinator_ = value;
        return this;
      }
      public Builder ClearCombinator() {
        PrepareBuilder();
        result.hasCombinator = false;
        result.combinator_ = global::com.aliyun.cloudservice.ots2.LogicalOperator.LO_NOT;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.ColumnCondition> SubConditionsList {
        get { return PrepareBuilder().subConditions_; }
      }
      public int SubConditionsCount {
        get { return result.SubConditionsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnCondition GetSubConditions(int index) {
        return result.GetSubConditions(index);
      }
      public Builder SetSubConditions(int index, global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subConditions_[index] = value;
        return this;
      }
      public Builder SetSubConditions(int index, global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subConditions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSubConditions(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subConditions_.Add(value);
        return this;
      }
      public Builder AddSubConditions(global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subConditions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSubConditions(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.ColumnCondition> values) {
        PrepareBuilder();
        result.subConditions_.Add(values);
        return this;
      }
      public Builder ClearSubConditions() {
        PrepareBuilder();
        result.subConditions_.Clear();
        return this;
      }
    }
    static CompositeCondition() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnCondition : pb::GeneratedMessage<ColumnCondition, ColumnCondition.Builder> {
    private ColumnCondition() { }
    private static readonly ColumnCondition defaultInstance = new ColumnCondition().MakeReadOnly();
    private static readonly string[] _columnConditionFieldNames = new string[] { "condition", "type" };
    private static readonly uint[] _columnConditionFieldTags = new uint[] { 18, 8 };
    public static ColumnCondition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnCondition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnCondition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnCondition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnCondition, ColumnCondition.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnCondition__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::com.aliyun.cloudservice.ots2.ColumnConditionType type_ = global::com.aliyun.cloudservice.ots2.ColumnConditionType.CCT_RELATION;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnConditionType Type {
      get { return type_; }
    }
    
    public const int ConditionFieldNumber = 2;
    private bool hasCondition;
    private pb::ByteString condition_ = pb::ByteString.Empty;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public pb::ByteString Condition {
      get { return condition_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasCondition) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _columnConditionFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasCondition) {
        output.WriteBytes(2, field_names[0], Condition);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Condition);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ColumnCondition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnCondition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnCondition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnCondition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnCondition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnCondition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnCondition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnCondition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnCondition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnCondition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnCondition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnCondition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnCondition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnCondition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnCondition result;
      
      private ColumnCondition PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnCondition original = result;
          result = new ColumnCondition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnCondition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnCondition.Descriptor; }
      }
      
      public override ColumnCondition DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance; }
      }
      
      public override ColumnCondition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnCondition) {
          return MergeFrom((ColumnCondition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnCondition other) {
        if (other == global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasCondition) {
          Condition = other.Condition;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnConditionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnConditionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasCondition = input.ReadBytes(ref result.condition_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnConditionType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.aliyun.cloudservice.ots2.ColumnConditionType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.aliyun.cloudservice.ots2.ColumnConditionType.CCT_RELATION;
        return this;
      }
      
      public bool HasCondition {
        get { return result.hasCondition; }
      }
      public pb::ByteString Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ColumnCondition() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Condition : pb::GeneratedMessage<Condition, Condition.Builder> {
    private Condition() { }
    private static readonly Condition defaultInstance = new Condition().MakeReadOnly();
    private static readonly string[] _conditionFieldNames = new string[] { "column_condition", "row_existence" };
    private static readonly uint[] _conditionFieldTags = new uint[] { 18, 8 };
    public static Condition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Condition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Condition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Condition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Condition, Condition.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Condition__FieldAccessorTable; }
    }
    
    public const int RowExistenceFieldNumber = 1;
    private bool hasRowExistence;
    private global::com.aliyun.cloudservice.ots2.RowExistenceExpectation rowExistence_ = global::com.aliyun.cloudservice.ots2.RowExistenceExpectation.IGNORE;
    public bool HasRowExistence {
      get { return hasRowExistence; }
    }
    public global::com.aliyun.cloudservice.ots2.RowExistenceExpectation RowExistence {
      get { return rowExistence_; }
    }
    
    public const int ColumnConditionFieldNumber = 2;
    private bool hasColumnCondition;
    private global::com.aliyun.cloudservice.ots2.ColumnCondition columnCondition_;
    public bool HasColumnCondition {
      get { return hasColumnCondition; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnCondition ColumnCondition {
      get { return columnCondition_ ?? global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRowExistence) return false;
        if (HasColumnCondition) {
          if (!ColumnCondition.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _conditionFieldNames;
      if (hasRowExistence) {
        output.WriteEnum(1, field_names[1], (int) RowExistence, RowExistence);
      }
      if (hasColumnCondition) {
        output.WriteMessage(2, field_names[0], ColumnCondition);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRowExistence) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) RowExistence);
        }
        if (hasColumnCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ColumnCondition);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Condition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Condition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Condition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Condition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Condition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Condition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Condition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Condition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Condition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Condition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Condition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Condition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Condition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Condition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Condition result;
      
      private Condition PrepareBuilder() {
        if (resultIsReadOnly) {
          Condition original = result;
          result = new Condition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Condition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.Condition.Descriptor; }
      }
      
      public override Condition DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance; }
      }
      
      public override Condition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Condition) {
          return MergeFrom((Condition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Condition other) {
        if (other == global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRowExistence) {
          RowExistence = other.RowExistence;
        }
        if (other.HasColumnCondition) {
          MergeColumnCondition(other.ColumnCondition);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conditionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conditionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.rowExistence_, out unknown)) {
                result.hasRowExistence = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder();
              if (result.hasColumnCondition) {
                subBuilder.MergeFrom(ColumnCondition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ColumnCondition = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRowExistence {
       get { return result.hasRowExistence; }
      }
      public global::com.aliyun.cloudservice.ots2.RowExistenceExpectation RowExistence {
        get { return result.RowExistence; }
        set { SetRowExistence(value); }
      }
      public Builder SetRowExistence(global::com.aliyun.cloudservice.ots2.RowExistenceExpectation value) {
        PrepareBuilder();
        result.hasRowExistence = true;
        result.rowExistence_ = value;
        return this;
      }
      public Builder ClearRowExistence() {
        PrepareBuilder();
        result.hasRowExistence = false;
        result.rowExistence_ = global::com.aliyun.cloudservice.ots2.RowExistenceExpectation.IGNORE;
        return this;
      }
      
      public bool HasColumnCondition {
       get { return result.hasColumnCondition; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnCondition ColumnCondition {
        get { return result.ColumnCondition; }
        set { SetColumnCondition(value); }
      }
      public Builder SetColumnCondition(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnCondition = true;
        result.columnCondition_ = value;
        return this;
      }
      public Builder SetColumnCondition(global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasColumnCondition = true;
        result.columnCondition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeColumnCondition(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasColumnCondition &&
            result.columnCondition_ != global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance) {
            result.columnCondition_ = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder(result.columnCondition_).MergeFrom(value).BuildPartial();
        } else {
          result.columnCondition_ = value;
        }
        result.hasColumnCondition = true;
        return this;
      }
      public Builder ClearColumnCondition() {
        PrepareBuilder();
        result.hasColumnCondition = false;
        result.columnCondition_ = null;
        return this;
      }
    }
    static Condition() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CapacityUnit : pb::GeneratedMessage<CapacityUnit, CapacityUnit.Builder> {
    private CapacityUnit() { }
    private static readonly CapacityUnit defaultInstance = new CapacityUnit().MakeReadOnly();
    private static readonly string[] _capacityUnitFieldNames = new string[] { "read", "write" };
    private static readonly uint[] _capacityUnitFieldTags = new uint[] { 8, 16 };
    public static CapacityUnit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CapacityUnit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CapacityUnit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CapacityUnit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CapacityUnit, CapacityUnit.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CapacityUnit__FieldAccessorTable; }
    }
    
    public const int ReadFieldNumber = 1;
    private bool hasRead;
    private int read_;
    public bool HasRead {
      get { return hasRead; }
    }
    public int Read {
      get { return read_; }
    }
    
    public const int WriteFieldNumber = 2;
    private bool hasWrite;
    private int write_;
    public bool HasWrite {
      get { return hasWrite; }
    }
    public int Write {
      get { return write_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _capacityUnitFieldNames;
      if (hasRead) {
        output.WriteInt32(1, field_names[0], Read);
      }
      if (hasWrite) {
        output.WriteInt32(2, field_names[1], Write);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRead) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Read);
        }
        if (hasWrite) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Write);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CapacityUnit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CapacityUnit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CapacityUnit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CapacityUnit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CapacityUnit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CapacityUnit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CapacityUnit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CapacityUnit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CapacityUnit result;
      
      private CapacityUnit PrepareBuilder() {
        if (resultIsReadOnly) {
          CapacityUnit original = result;
          result = new CapacityUnit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CapacityUnit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.CapacityUnit.Descriptor; }
      }
      
      public override CapacityUnit DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance; }
      }
      
      public override CapacityUnit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CapacityUnit) {
          return MergeFrom((CapacityUnit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CapacityUnit other) {
        if (other == global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRead) {
          Read = other.Read;
        }
        if (other.HasWrite) {
          Write = other.Write;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_capacityUnitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _capacityUnitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRead = input.ReadInt32(ref result.read_);
              break;
            }
            case 16: {
              result.hasWrite = input.ReadInt32(ref result.write_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRead {
        get { return result.hasRead; }
      }
      public int Read {
        get { return result.Read; }
        set { SetRead(value); }
      }
      public Builder SetRead(int value) {
        PrepareBuilder();
        result.hasRead = true;
        result.read_ = value;
        return this;
      }
      public Builder ClearRead() {
        PrepareBuilder();
        result.hasRead = false;
        result.read_ = 0;
        return this;
      }
      
      public bool HasWrite {
        get { return result.hasWrite; }
      }
      public int Write {
        get { return result.Write; }
        set { SetWrite(value); }
      }
      public Builder SetWrite(int value) {
        PrepareBuilder();
        result.hasWrite = true;
        result.write_ = value;
        return this;
      }
      public Builder ClearWrite() {
        PrepareBuilder();
        result.hasWrite = false;
        result.write_ = 0;
        return this;
      }
    }
    static CapacityUnit() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReservedThroughputDetails : pb::GeneratedMessage<ReservedThroughputDetails, ReservedThroughputDetails.Builder> {
    private ReservedThroughputDetails() { }
    private static readonly ReservedThroughputDetails defaultInstance = new ReservedThroughputDetails().MakeReadOnly();
    private static readonly string[] _reservedThroughputDetailsFieldNames = new string[] { "capacity_unit", "last_decrease_time", "last_increase_time", "number_of_decreases_today" };
    private static readonly uint[] _reservedThroughputDetailsFieldTags = new uint[] { 10, 24, 16, 32 };
    public static ReservedThroughputDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReservedThroughputDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReservedThroughputDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ReservedThroughputDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReservedThroughputDetails, ReservedThroughputDetails.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ReservedThroughputDetails__FieldAccessorTable; }
    }
    
    public const int CapacityUnitFieldNumber = 1;
    private bool hasCapacityUnit;
    private global::com.aliyun.cloudservice.ots2.CapacityUnit capacityUnit_;
    public bool HasCapacityUnit {
      get { return hasCapacityUnit; }
    }
    public global::com.aliyun.cloudservice.ots2.CapacityUnit CapacityUnit {
      get { return capacityUnit_ ?? global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance; }
    }
    
    public const int LastIncreaseTimeFieldNumber = 2;
    private bool hasLastIncreaseTime;
    private long lastIncreaseTime_;
    public bool HasLastIncreaseTime {
      get { return hasLastIncreaseTime; }
    }
    public long LastIncreaseTime {
      get { return lastIncreaseTime_; }
    }
    
    public const int LastDecreaseTimeFieldNumber = 3;
    private bool hasLastDecreaseTime;
    private long lastDecreaseTime_;
    public bool HasLastDecreaseTime {
      get { return hasLastDecreaseTime; }
    }
    public long LastDecreaseTime {
      get { return lastDecreaseTime_; }
    }
    
    public const int NumberOfDecreasesTodayFieldNumber = 4;
    private bool hasNumberOfDecreasesToday;
    private int numberOfDecreasesToday_;
    public bool HasNumberOfDecreasesToday {
      get { return hasNumberOfDecreasesToday; }
    }
    public int NumberOfDecreasesToday {
      get { return numberOfDecreasesToday_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCapacityUnit) return false;
        if (!hasLastIncreaseTime) return false;
        if (!hasNumberOfDecreasesToday) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reservedThroughputDetailsFieldNames;
      if (hasCapacityUnit) {
        output.WriteMessage(1, field_names[0], CapacityUnit);
      }
      if (hasLastIncreaseTime) {
        output.WriteInt64(2, field_names[2], LastIncreaseTime);
      }
      if (hasLastDecreaseTime) {
        output.WriteInt64(3, field_names[1], LastDecreaseTime);
      }
      if (hasNumberOfDecreasesToday) {
        output.WriteInt32(4, field_names[3], NumberOfDecreasesToday);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCapacityUnit) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CapacityUnit);
        }
        if (hasLastIncreaseTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, LastIncreaseTime);
        }
        if (hasLastDecreaseTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, LastDecreaseTime);
        }
        if (hasNumberOfDecreasesToday) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, NumberOfDecreasesToday);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReservedThroughputDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReservedThroughputDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReservedThroughputDetails MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReservedThroughputDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReservedThroughputDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReservedThroughputDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReservedThroughputDetails result;
      
      private ReservedThroughputDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          ReservedThroughputDetails original = result;
          result = new ReservedThroughputDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReservedThroughputDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.Descriptor; }
      }
      
      public override ReservedThroughputDetails DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.DefaultInstance; }
      }
      
      public override ReservedThroughputDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReservedThroughputDetails) {
          return MergeFrom((ReservedThroughputDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReservedThroughputDetails other) {
        if (other == global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCapacityUnit) {
          MergeCapacityUnit(other.CapacityUnit);
        }
        if (other.HasLastIncreaseTime) {
          LastIncreaseTime = other.LastIncreaseTime;
        }
        if (other.HasLastDecreaseTime) {
          LastDecreaseTime = other.LastDecreaseTime;
        }
        if (other.HasNumberOfDecreasesToday) {
          NumberOfDecreasesToday = other.NumberOfDecreasesToday;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reservedThroughputDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reservedThroughputDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder subBuilder = global::com.aliyun.cloudservice.ots2.CapacityUnit.CreateBuilder();
              if (result.hasCapacityUnit) {
                subBuilder.MergeFrom(CapacityUnit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CapacityUnit = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasLastIncreaseTime = input.ReadInt64(ref result.lastIncreaseTime_);
              break;
            }
            case 24: {
              result.hasLastDecreaseTime = input.ReadInt64(ref result.lastDecreaseTime_);
              break;
            }
            case 32: {
              result.hasNumberOfDecreasesToday = input.ReadInt32(ref result.numberOfDecreasesToday_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCapacityUnit {
       get { return result.hasCapacityUnit; }
      }
      public global::com.aliyun.cloudservice.ots2.CapacityUnit CapacityUnit {
        get { return result.CapacityUnit; }
        set { SetCapacityUnit(value); }
      }
      public Builder SetCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = value;
        return this;
      }
      public Builder SetCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCapacityUnit &&
            result.capacityUnit_ != global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance) {
            result.capacityUnit_ = global::com.aliyun.cloudservice.ots2.CapacityUnit.CreateBuilder(result.capacityUnit_).MergeFrom(value).BuildPartial();
        } else {
          result.capacityUnit_ = value;
        }
        result.hasCapacityUnit = true;
        return this;
      }
      public Builder ClearCapacityUnit() {
        PrepareBuilder();
        result.hasCapacityUnit = false;
        result.capacityUnit_ = null;
        return this;
      }
      
      public bool HasLastIncreaseTime {
        get { return result.hasLastIncreaseTime; }
      }
      public long LastIncreaseTime {
        get { return result.LastIncreaseTime; }
        set { SetLastIncreaseTime(value); }
      }
      public Builder SetLastIncreaseTime(long value) {
        PrepareBuilder();
        result.hasLastIncreaseTime = true;
        result.lastIncreaseTime_ = value;
        return this;
      }
      public Builder ClearLastIncreaseTime() {
        PrepareBuilder();
        result.hasLastIncreaseTime = false;
        result.lastIncreaseTime_ = 0L;
        return this;
      }
      
      public bool HasLastDecreaseTime {
        get { return result.hasLastDecreaseTime; }
      }
      public long LastDecreaseTime {
        get { return result.LastDecreaseTime; }
        set { SetLastDecreaseTime(value); }
      }
      public Builder SetLastDecreaseTime(long value) {
        PrepareBuilder();
        result.hasLastDecreaseTime = true;
        result.lastDecreaseTime_ = value;
        return this;
      }
      public Builder ClearLastDecreaseTime() {
        PrepareBuilder();
        result.hasLastDecreaseTime = false;
        result.lastDecreaseTime_ = 0L;
        return this;
      }
      
      public bool HasNumberOfDecreasesToday {
        get { return result.hasNumberOfDecreasesToday; }
      }
      public int NumberOfDecreasesToday {
        get { return result.NumberOfDecreasesToday; }
        set { SetNumberOfDecreasesToday(value); }
      }
      public Builder SetNumberOfDecreasesToday(int value) {
        PrepareBuilder();
        result.hasNumberOfDecreasesToday = true;
        result.numberOfDecreasesToday_ = value;
        return this;
      }
      public Builder ClearNumberOfDecreasesToday() {
        PrepareBuilder();
        result.hasNumberOfDecreasesToday = false;
        result.numberOfDecreasesToday_ = 0;
        return this;
      }
    }
    static ReservedThroughputDetails() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReservedThroughput : pb::GeneratedMessage<ReservedThroughput, ReservedThroughput.Builder> {
    private ReservedThroughput() { }
    private static readonly ReservedThroughput defaultInstance = new ReservedThroughput().MakeReadOnly();
    private static readonly string[] _reservedThroughputFieldNames = new string[] { "capacity_unit" };
    private static readonly uint[] _reservedThroughputFieldTags = new uint[] { 10 };
    public static ReservedThroughput DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReservedThroughput DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReservedThroughput ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ReservedThroughput__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReservedThroughput, ReservedThroughput.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ReservedThroughput__FieldAccessorTable; }
    }
    
    public const int CapacityUnitFieldNumber = 1;
    private bool hasCapacityUnit;
    private global::com.aliyun.cloudservice.ots2.CapacityUnit capacityUnit_;
    public bool HasCapacityUnit {
      get { return hasCapacityUnit; }
    }
    public global::com.aliyun.cloudservice.ots2.CapacityUnit CapacityUnit {
      get { return capacityUnit_ ?? global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCapacityUnit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reservedThroughputFieldNames;
      if (hasCapacityUnit) {
        output.WriteMessage(1, field_names[0], CapacityUnit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCapacityUnit) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CapacityUnit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReservedThroughput ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughput ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReservedThroughput ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReservedThroughput MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReservedThroughput prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReservedThroughput, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReservedThroughput cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReservedThroughput result;
      
      private ReservedThroughput PrepareBuilder() {
        if (resultIsReadOnly) {
          ReservedThroughput original = result;
          result = new ReservedThroughput();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReservedThroughput MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ReservedThroughput.Descriptor; }
      }
      
      public override ReservedThroughput DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ReservedThroughput.DefaultInstance; }
      }
      
      public override ReservedThroughput BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReservedThroughput) {
          return MergeFrom((ReservedThroughput) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReservedThroughput other) {
        if (other == global::com.aliyun.cloudservice.ots2.ReservedThroughput.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCapacityUnit) {
          MergeCapacityUnit(other.CapacityUnit);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reservedThroughputFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reservedThroughputFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder subBuilder = global::com.aliyun.cloudservice.ots2.CapacityUnit.CreateBuilder();
              if (result.hasCapacityUnit) {
                subBuilder.MergeFrom(CapacityUnit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CapacityUnit = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCapacityUnit {
       get { return result.hasCapacityUnit; }
      }
      public global::com.aliyun.cloudservice.ots2.CapacityUnit CapacityUnit {
        get { return result.CapacityUnit; }
        set { SetCapacityUnit(value); }
      }
      public Builder SetCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = value;
        return this;
      }
      public Builder SetCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCapacityUnit &&
            result.capacityUnit_ != global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance) {
            result.capacityUnit_ = global::com.aliyun.cloudservice.ots2.CapacityUnit.CreateBuilder(result.capacityUnit_).MergeFrom(value).BuildPartial();
        } else {
          result.capacityUnit_ = value;
        }
        result.hasCapacityUnit = true;
        return this;
      }
      public Builder ClearCapacityUnit() {
        PrepareBuilder();
        result.hasCapacityUnit = false;
        result.capacityUnit_ = null;
        return this;
      }
    }
    static ReservedThroughput() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConsumedCapacity : pb::GeneratedMessage<ConsumedCapacity, ConsumedCapacity.Builder> {
    private ConsumedCapacity() { }
    private static readonly ConsumedCapacity defaultInstance = new ConsumedCapacity().MakeReadOnly();
    private static readonly string[] _consumedCapacityFieldNames = new string[] { "capacity_unit" };
    private static readonly uint[] _consumedCapacityFieldTags = new uint[] { 10 };
    public static ConsumedCapacity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConsumedCapacity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConsumedCapacity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ConsumedCapacity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConsumedCapacity, ConsumedCapacity.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ConsumedCapacity__FieldAccessorTable; }
    }
    
    public const int CapacityUnitFieldNumber = 1;
    private bool hasCapacityUnit;
    private global::com.aliyun.cloudservice.ots2.CapacityUnit capacityUnit_;
    public bool HasCapacityUnit {
      get { return hasCapacityUnit; }
    }
    public global::com.aliyun.cloudservice.ots2.CapacityUnit CapacityUnit {
      get { return capacityUnit_ ?? global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCapacityUnit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _consumedCapacityFieldNames;
      if (hasCapacityUnit) {
        output.WriteMessage(1, field_names[0], CapacityUnit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCapacityUnit) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CapacityUnit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ConsumedCapacity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConsumedCapacity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConsumedCapacity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConsumedCapacity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConsumedCapacity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConsumedCapacity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConsumedCapacity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConsumedCapacity result;
      
      private ConsumedCapacity PrepareBuilder() {
        if (resultIsReadOnly) {
          ConsumedCapacity original = result;
          result = new ConsumedCapacity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConsumedCapacity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Descriptor; }
      }
      
      public override ConsumedCapacity DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
      }
      
      public override ConsumedCapacity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConsumedCapacity) {
          return MergeFrom((ConsumedCapacity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConsumedCapacity other) {
        if (other == global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCapacityUnit) {
          MergeCapacityUnit(other.CapacityUnit);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_consumedCapacityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _consumedCapacityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder subBuilder = global::com.aliyun.cloudservice.ots2.CapacityUnit.CreateBuilder();
              if (result.hasCapacityUnit) {
                subBuilder.MergeFrom(CapacityUnit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CapacityUnit = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCapacityUnit {
       get { return result.hasCapacityUnit; }
      }
      public global::com.aliyun.cloudservice.ots2.CapacityUnit CapacityUnit {
        get { return result.CapacityUnit; }
        set { SetCapacityUnit(value); }
      }
      public Builder SetCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = value;
        return this;
      }
      public Builder SetCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCapacityUnit(global::com.aliyun.cloudservice.ots2.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCapacityUnit &&
            result.capacityUnit_ != global::com.aliyun.cloudservice.ots2.CapacityUnit.DefaultInstance) {
            result.capacityUnit_ = global::com.aliyun.cloudservice.ots2.CapacityUnit.CreateBuilder(result.capacityUnit_).MergeFrom(value).BuildPartial();
        } else {
          result.capacityUnit_ = value;
        }
        result.hasCapacityUnit = true;
        return this;
      }
      public Builder ClearCapacityUnit() {
        PrepareBuilder();
        result.hasCapacityUnit = false;
        result.capacityUnit_ = null;
        return this;
      }
    }
    static ConsumedCapacity() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StreamSpecification : pb::GeneratedMessage<StreamSpecification, StreamSpecification.Builder> {
    private StreamSpecification() { }
    private static readonly StreamSpecification defaultInstance = new StreamSpecification().MakeReadOnly();
    private static readonly string[] _streamSpecificationFieldNames = new string[] { "enable_stream", "expiration_time" };
    private static readonly uint[] _streamSpecificationFieldTags = new uint[] { 8, 16 };
    public static StreamSpecification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamSpecification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamSpecification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamSpecification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamSpecification, StreamSpecification.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamSpecification__FieldAccessorTable; }
    }
    
    public const int EnableStreamFieldNumber = 1;
    private bool hasEnableStream;
    private bool enableStream_;
    public bool HasEnableStream {
      get { return hasEnableStream; }
    }
    public bool EnableStream {
      get { return enableStream_; }
    }
    
    public const int ExpirationTimeFieldNumber = 2;
    private bool hasExpirationTime;
    private int expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public int ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEnableStream) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamSpecificationFieldNames;
      if (hasEnableStream) {
        output.WriteBool(1, field_names[0], EnableStream);
      }
      if (hasExpirationTime) {
        output.WriteInt32(2, field_names[1], ExpirationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEnableStream) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, EnableStream);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ExpirationTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamSpecification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamSpecification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamSpecification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamSpecification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamSpecification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamSpecification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamSpecification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamSpecification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamSpecification result;
      
      private StreamSpecification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamSpecification original = result;
          result = new StreamSpecification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamSpecification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamSpecification.Descriptor; }
      }
      
      public override StreamSpecification DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamSpecification.DefaultInstance; }
      }
      
      public override StreamSpecification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamSpecification) {
          return MergeFrom((StreamSpecification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamSpecification other) {
        if (other == global::com.aliyun.cloudservice.ots2.StreamSpecification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEnableStream) {
          EnableStream = other.EnableStream;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamSpecificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamSpecificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEnableStream = input.ReadBool(ref result.enableStream_);
              break;
            }
            case 16: {
              result.hasExpirationTime = input.ReadInt32(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEnableStream {
        get { return result.hasEnableStream; }
      }
      public bool EnableStream {
        get { return result.EnableStream; }
        set { SetEnableStream(value); }
      }
      public Builder SetEnableStream(bool value) {
        PrepareBuilder();
        result.hasEnableStream = true;
        result.enableStream_ = value;
        return this;
      }
      public Builder ClearEnableStream() {
        PrepareBuilder();
        result.hasEnableStream = false;
        result.enableStream_ = false;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public int ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(int value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
    }
    static StreamSpecification() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StreamDetails : pb::GeneratedMessage<StreamDetails, StreamDetails.Builder> {
    private StreamDetails() { }
    private static readonly StreamDetails defaultInstance = new StreamDetails().MakeReadOnly();
    private static readonly string[] _streamDetailsFieldNames = new string[] { "enable_stream", "expiration_time", "last_enable_time", "stream_id" };
    private static readonly uint[] _streamDetailsFieldTags = new uint[] { 8, 24, 32, 18 };
    public static StreamDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamDetails, StreamDetails.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamDetails__FieldAccessorTable; }
    }
    
    public const int EnableStreamFieldNumber = 1;
    private bool hasEnableStream;
    private bool enableStream_;
    public bool HasEnableStream {
      get { return hasEnableStream; }
    }
    public bool EnableStream {
      get { return enableStream_; }
    }
    
    public const int StreamIdFieldNumber = 2;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int ExpirationTimeFieldNumber = 3;
    private bool hasExpirationTime;
    private int expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public int ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int LastEnableTimeFieldNumber = 4;
    private bool hasLastEnableTime;
    private long lastEnableTime_;
    public bool HasLastEnableTime {
      get { return hasLastEnableTime; }
    }
    public long LastEnableTime {
      get { return lastEnableTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEnableStream) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamDetailsFieldNames;
      if (hasEnableStream) {
        output.WriteBool(1, field_names[0], EnableStream);
      }
      if (hasStreamId) {
        output.WriteString(2, field_names[3], StreamId);
      }
      if (hasExpirationTime) {
        output.WriteInt32(3, field_names[1], ExpirationTime);
      }
      if (hasLastEnableTime) {
        output.WriteInt64(4, field_names[2], LastEnableTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEnableStream) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, EnableStream);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, StreamId);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ExpirationTime);
        }
        if (hasLastEnableTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, LastEnableTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamDetails MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamDetails result;
      
      private StreamDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamDetails original = result;
          result = new StreamDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamDetails.Descriptor; }
      }
      
      public override StreamDetails DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamDetails.DefaultInstance; }
      }
      
      public override StreamDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamDetails) {
          return MergeFrom((StreamDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamDetails other) {
        if (other == global::com.aliyun.cloudservice.ots2.StreamDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEnableStream) {
          EnableStream = other.EnableStream;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.HasLastEnableTime) {
          LastEnableTime = other.LastEnableTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEnableStream = input.ReadBool(ref result.enableStream_);
              break;
            }
            case 18: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 24: {
              result.hasExpirationTime = input.ReadInt32(ref result.expirationTime_);
              break;
            }
            case 32: {
              result.hasLastEnableTime = input.ReadInt64(ref result.lastEnableTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEnableStream {
        get { return result.hasEnableStream; }
      }
      public bool EnableStream {
        get { return result.EnableStream; }
        set { SetEnableStream(value); }
      }
      public Builder SetEnableStream(bool value) {
        PrepareBuilder();
        result.hasEnableStream = true;
        result.enableStream_ = value;
        return this;
      }
      public Builder ClearEnableStream() {
        PrepareBuilder();
        result.hasEnableStream = false;
        result.enableStream_ = false;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public int ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(int value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
      
      public bool HasLastEnableTime {
        get { return result.hasLastEnableTime; }
      }
      public long LastEnableTime {
        get { return result.LastEnableTime; }
        set { SetLastEnableTime(value); }
      }
      public Builder SetLastEnableTime(long value) {
        PrepareBuilder();
        result.hasLastEnableTime = true;
        result.lastEnableTime_ = value;
        return this;
      }
      public Builder ClearLastEnableTime() {
        PrepareBuilder();
        result.hasLastEnableTime = false;
        result.lastEnableTime_ = 0L;
        return this;
      }
    }
    static StreamDetails() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateTableRequest : pb::GeneratedMessage<CreateTableRequest, CreateTableRequest.Builder> {
    private CreateTableRequest() { }
    private static readonly CreateTableRequest defaultInstance = new CreateTableRequest().MakeReadOnly();
    private static readonly string[] _createTableRequestFieldNames = new string[] { "reserved_throughput", "stream_spec", "table_meta" };
    private static readonly uint[] _createTableRequestFieldTags = new uint[] { 18, 26, 10 };
    public static CreateTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CreateTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateTableRequest, CreateTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CreateTableRequest__FieldAccessorTable; }
    }
    
    public const int TableMetaFieldNumber = 1;
    private bool hasTableMeta;
    private global::com.aliyun.cloudservice.ots2.TableMeta tableMeta_;
    public bool HasTableMeta {
      get { return hasTableMeta; }
    }
    public global::com.aliyun.cloudservice.ots2.TableMeta TableMeta {
      get { return tableMeta_ ?? global::com.aliyun.cloudservice.ots2.TableMeta.DefaultInstance; }
    }
    
    public const int ReservedThroughputFieldNumber = 2;
    private bool hasReservedThroughput;
    private global::com.aliyun.cloudservice.ots2.ReservedThroughput reservedThroughput_;
    public bool HasReservedThroughput {
      get { return hasReservedThroughput; }
    }
    public global::com.aliyun.cloudservice.ots2.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_ ?? global::com.aliyun.cloudservice.ots2.ReservedThroughput.DefaultInstance; }
    }
    
    public const int StreamSpecFieldNumber = 3;
    private bool hasStreamSpec;
    private global::com.aliyun.cloudservice.ots2.StreamSpecification streamSpec_;
    public bool HasStreamSpec {
      get { return hasStreamSpec; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamSpecification StreamSpec {
      get { return streamSpec_ ?? global::com.aliyun.cloudservice.ots2.StreamSpecification.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableMeta) return false;
        if (!hasReservedThroughput) return false;
        if (!TableMeta.IsInitialized) return false;
        if (!ReservedThroughput.IsInitialized) return false;
        if (HasStreamSpec) {
          if (!StreamSpec.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createTableRequestFieldNames;
      if (hasTableMeta) {
        output.WriteMessage(1, field_names[2], TableMeta);
      }
      if (hasReservedThroughput) {
        output.WriteMessage(2, field_names[0], ReservedThroughput);
      }
      if (hasStreamSpec) {
        output.WriteMessage(3, field_names[1], StreamSpec);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableMeta) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TableMeta);
        }
        if (hasReservedThroughput) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ReservedThroughput);
        }
        if (hasStreamSpec) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, StreamSpec);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateTableRequest result;
      
      private CreateTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateTableRequest original = result;
          result = new CreateTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.CreateTableRequest.Descriptor; }
      }
      
      public override CreateTableRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.CreateTableRequest.DefaultInstance; }
      }
      
      public override CreateTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateTableRequest) {
          return MergeFrom((CreateTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateTableRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.CreateTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableMeta) {
          MergeTableMeta(other.TableMeta);
        }
        if (other.HasReservedThroughput) {
          MergeReservedThroughput(other.ReservedThroughput);
        }
        if (other.HasStreamSpec) {
          MergeStreamSpec(other.StreamSpec);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.TableMeta.Builder subBuilder = global::com.aliyun.cloudservice.ots2.TableMeta.CreateBuilder();
              if (result.hasTableMeta) {
                subBuilder.MergeFrom(TableMeta);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableMeta = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.ReservedThroughput.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ReservedThroughput.CreateBuilder();
              if (result.hasReservedThroughput) {
                subBuilder.MergeFrom(ReservedThroughput);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughput = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.aliyun.cloudservice.ots2.StreamSpecification.Builder subBuilder = global::com.aliyun.cloudservice.ots2.StreamSpecification.CreateBuilder();
              if (result.hasStreamSpec) {
                subBuilder.MergeFrom(StreamSpec);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamSpec = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableMeta {
       get { return result.hasTableMeta; }
      }
      public global::com.aliyun.cloudservice.ots2.TableMeta TableMeta {
        get { return result.TableMeta; }
        set { SetTableMeta(value); }
      }
      public Builder SetTableMeta(global::com.aliyun.cloudservice.ots2.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = value;
        return this;
      }
      public Builder SetTableMeta(global::com.aliyun.cloudservice.ots2.TableMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableMeta(global::com.aliyun.cloudservice.ots2.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableMeta &&
            result.tableMeta_ != global::com.aliyun.cloudservice.ots2.TableMeta.DefaultInstance) {
            result.tableMeta_ = global::com.aliyun.cloudservice.ots2.TableMeta.CreateBuilder(result.tableMeta_).MergeFrom(value).BuildPartial();
        } else {
          result.tableMeta_ = value;
        }
        result.hasTableMeta = true;
        return this;
      }
      public Builder ClearTableMeta() {
        PrepareBuilder();
        result.hasTableMeta = false;
        result.tableMeta_ = null;
        return this;
      }
      
      public bool HasReservedThroughput {
       get { return result.hasReservedThroughput; }
      }
      public global::com.aliyun.cloudservice.ots2.ReservedThroughput ReservedThroughput {
        get { return result.ReservedThroughput; }
        set { SetReservedThroughput(value); }
      }
      public Builder SetReservedThroughput(global::com.aliyun.cloudservice.ots2.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = value;
        return this;
      }
      public Builder SetReservedThroughput(global::com.aliyun.cloudservice.ots2.ReservedThroughput.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughput(global::com.aliyun.cloudservice.ots2.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughput &&
            result.reservedThroughput_ != global::com.aliyun.cloudservice.ots2.ReservedThroughput.DefaultInstance) {
            result.reservedThroughput_ = global::com.aliyun.cloudservice.ots2.ReservedThroughput.CreateBuilder(result.reservedThroughput_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughput_ = value;
        }
        result.hasReservedThroughput = true;
        return this;
      }
      public Builder ClearReservedThroughput() {
        PrepareBuilder();
        result.hasReservedThroughput = false;
        result.reservedThroughput_ = null;
        return this;
      }
      
      public bool HasStreamSpec {
       get { return result.hasStreamSpec; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamSpecification StreamSpec {
        get { return result.StreamSpec; }
        set { SetStreamSpec(value); }
      }
      public Builder SetStreamSpec(global::com.aliyun.cloudservice.ots2.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = value;
        return this;
      }
      public Builder SetStreamSpec(global::com.aliyun.cloudservice.ots2.StreamSpecification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamSpec(global::com.aliyun.cloudservice.ots2.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamSpec &&
            result.streamSpec_ != global::com.aliyun.cloudservice.ots2.StreamSpecification.DefaultInstance) {
            result.streamSpec_ = global::com.aliyun.cloudservice.ots2.StreamSpecification.CreateBuilder(result.streamSpec_).MergeFrom(value).BuildPartial();
        } else {
          result.streamSpec_ = value;
        }
        result.hasStreamSpec = true;
        return this;
      }
      public Builder ClearStreamSpec() {
        PrepareBuilder();
        result.hasStreamSpec = false;
        result.streamSpec_ = null;
        return this;
      }
    }
    static CreateTableRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateTableResponse : pb::GeneratedMessage<CreateTableResponse, CreateTableResponse.Builder> {
    private CreateTableResponse() { }
    private static readonly CreateTableResponse defaultInstance = new CreateTableResponse().MakeReadOnly();
    private static readonly string[] _createTableResponseFieldNames = new string[] {  };
    private static readonly uint[] _createTableResponseFieldTags = new uint[] {  };
    public static CreateTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CreateTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateTableResponse, CreateTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_CreateTableResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createTableResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateTableResponse result;
      
      private CreateTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateTableResponse original = result;
          result = new CreateTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.CreateTableResponse.Descriptor; }
      }
      
      public override CreateTableResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.CreateTableResponse.DefaultInstance; }
      }
      
      public override CreateTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateTableResponse) {
          return MergeFrom((CreateTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateTableResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.CreateTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CreateTableResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateTableRequest : pb::GeneratedMessage<UpdateTableRequest, UpdateTableRequest.Builder> {
    private UpdateTableRequest() { }
    private static readonly UpdateTableRequest defaultInstance = new UpdateTableRequest().MakeReadOnly();
    private static readonly string[] _updateTableRequestFieldNames = new string[] { "reserved_throughput", "stream_spec", "table_name" };
    private static readonly uint[] _updateTableRequestFieldTags = new uint[] { 18, 26, 10 };
    public static UpdateTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateTableRequest, UpdateTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int ReservedThroughputFieldNumber = 2;
    private bool hasReservedThroughput;
    private global::com.aliyun.cloudservice.ots2.ReservedThroughput reservedThroughput_;
    public bool HasReservedThroughput {
      get { return hasReservedThroughput; }
    }
    public global::com.aliyun.cloudservice.ots2.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_ ?? global::com.aliyun.cloudservice.ots2.ReservedThroughput.DefaultInstance; }
    }
    
    public const int StreamSpecFieldNumber = 3;
    private bool hasStreamSpec;
    private global::com.aliyun.cloudservice.ots2.StreamSpecification streamSpec_;
    public bool HasStreamSpec {
      get { return hasStreamSpec; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamSpecification StreamSpec {
      get { return streamSpec_ ?? global::com.aliyun.cloudservice.ots2.StreamSpecification.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (HasReservedThroughput) {
          if (!ReservedThroughput.IsInitialized) return false;
        }
        if (HasStreamSpec) {
          if (!StreamSpec.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[2], TableName);
      }
      if (hasReservedThroughput) {
        output.WriteMessage(2, field_names[0], ReservedThroughput);
      }
      if (hasStreamSpec) {
        output.WriteMessage(3, field_names[1], StreamSpec);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        if (hasReservedThroughput) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ReservedThroughput);
        }
        if (hasStreamSpec) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, StreamSpec);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateTableRequest result;
      
      private UpdateTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateTableRequest original = result;
          result = new UpdateTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateTableRequest.Descriptor; }
      }
      
      public override UpdateTableRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateTableRequest.DefaultInstance; }
      }
      
      public override UpdateTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateTableRequest) {
          return MergeFrom((UpdateTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateTableRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.UpdateTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasReservedThroughput) {
          MergeReservedThroughput(other.ReservedThroughput);
        }
        if (other.HasStreamSpec) {
          MergeStreamSpec(other.StreamSpec);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.ReservedThroughput.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ReservedThroughput.CreateBuilder();
              if (result.hasReservedThroughput) {
                subBuilder.MergeFrom(ReservedThroughput);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughput = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.aliyun.cloudservice.ots2.StreamSpecification.Builder subBuilder = global::com.aliyun.cloudservice.ots2.StreamSpecification.CreateBuilder();
              if (result.hasStreamSpec) {
                subBuilder.MergeFrom(StreamSpec);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamSpec = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasReservedThroughput {
       get { return result.hasReservedThroughput; }
      }
      public global::com.aliyun.cloudservice.ots2.ReservedThroughput ReservedThroughput {
        get { return result.ReservedThroughput; }
        set { SetReservedThroughput(value); }
      }
      public Builder SetReservedThroughput(global::com.aliyun.cloudservice.ots2.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = value;
        return this;
      }
      public Builder SetReservedThroughput(global::com.aliyun.cloudservice.ots2.ReservedThroughput.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughput(global::com.aliyun.cloudservice.ots2.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughput &&
            result.reservedThroughput_ != global::com.aliyun.cloudservice.ots2.ReservedThroughput.DefaultInstance) {
            result.reservedThroughput_ = global::com.aliyun.cloudservice.ots2.ReservedThroughput.CreateBuilder(result.reservedThroughput_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughput_ = value;
        }
        result.hasReservedThroughput = true;
        return this;
      }
      public Builder ClearReservedThroughput() {
        PrepareBuilder();
        result.hasReservedThroughput = false;
        result.reservedThroughput_ = null;
        return this;
      }
      
      public bool HasStreamSpec {
       get { return result.hasStreamSpec; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamSpecification StreamSpec {
        get { return result.StreamSpec; }
        set { SetStreamSpec(value); }
      }
      public Builder SetStreamSpec(global::com.aliyun.cloudservice.ots2.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = value;
        return this;
      }
      public Builder SetStreamSpec(global::com.aliyun.cloudservice.ots2.StreamSpecification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamSpec(global::com.aliyun.cloudservice.ots2.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamSpec &&
            result.streamSpec_ != global::com.aliyun.cloudservice.ots2.StreamSpecification.DefaultInstance) {
            result.streamSpec_ = global::com.aliyun.cloudservice.ots2.StreamSpecification.CreateBuilder(result.streamSpec_).MergeFrom(value).BuildPartial();
        } else {
          result.streamSpec_ = value;
        }
        result.hasStreamSpec = true;
        return this;
      }
      public Builder ClearStreamSpec() {
        PrepareBuilder();
        result.hasStreamSpec = false;
        result.streamSpec_ = null;
        return this;
      }
    }
    static UpdateTableRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateTableResponse : pb::GeneratedMessage<UpdateTableResponse, UpdateTableResponse.Builder> {
    private UpdateTableResponse() { }
    private static readonly UpdateTableResponse defaultInstance = new UpdateTableResponse().MakeReadOnly();
    private static readonly string[] _updateTableResponseFieldNames = new string[] { "reserved_throughput_details", "stream_details" };
    private static readonly uint[] _updateTableResponseFieldTags = new uint[] { 10, 18 };
    public static UpdateTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateTableResponse, UpdateTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateTableResponse__FieldAccessorTable; }
    }
    
    public const int ReservedThroughputDetailsFieldNumber = 1;
    private bool hasReservedThroughputDetails;
    private global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails reservedThroughputDetails_;
    public bool HasReservedThroughputDetails {
      get { return hasReservedThroughputDetails; }
    }
    public global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_ ?? global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.DefaultInstance; }
    }
    
    public const int StreamDetailsFieldNumber = 2;
    private bool hasStreamDetails;
    private global::com.aliyun.cloudservice.ots2.StreamDetails streamDetails_;
    public bool HasStreamDetails {
      get { return hasStreamDetails; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamDetails StreamDetails {
      get { return streamDetails_ ?? global::com.aliyun.cloudservice.ots2.StreamDetails.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasReservedThroughputDetails) return false;
        if (!ReservedThroughputDetails.IsInitialized) return false;
        if (HasStreamDetails) {
          if (!StreamDetails.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateTableResponseFieldNames;
      if (hasReservedThroughputDetails) {
        output.WriteMessage(1, field_names[0], ReservedThroughputDetails);
      }
      if (hasStreamDetails) {
        output.WriteMessage(2, field_names[1], StreamDetails);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasReservedThroughputDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ReservedThroughputDetails);
        }
        if (hasStreamDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, StreamDetails);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateTableResponse result;
      
      private UpdateTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateTableResponse original = result;
          result = new UpdateTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateTableResponse.Descriptor; }
      }
      
      public override UpdateTableResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateTableResponse.DefaultInstance; }
      }
      
      public override UpdateTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateTableResponse) {
          return MergeFrom((UpdateTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateTableResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.UpdateTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReservedThroughputDetails) {
          MergeReservedThroughputDetails(other.ReservedThroughputDetails);
        }
        if (other.HasStreamDetails) {
          MergeStreamDetails(other.StreamDetails);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.CreateBuilder();
              if (result.hasReservedThroughputDetails) {
                subBuilder.MergeFrom(ReservedThroughputDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughputDetails = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.StreamDetails.Builder subBuilder = global::com.aliyun.cloudservice.ots2.StreamDetails.CreateBuilder();
              if (result.hasStreamDetails) {
                subBuilder.MergeFrom(StreamDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamDetails = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReservedThroughputDetails {
       get { return result.hasReservedThroughputDetails; }
      }
      public global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails ReservedThroughputDetails {
        get { return result.ReservedThroughputDetails; }
        set { SetReservedThroughputDetails(value); }
      }
      public Builder SetReservedThroughputDetails(global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = value;
        return this;
      }
      public Builder SetReservedThroughputDetails(global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughputDetails(global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughputDetails &&
            result.reservedThroughputDetails_ != global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.DefaultInstance) {
            result.reservedThroughputDetails_ = global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.CreateBuilder(result.reservedThroughputDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughputDetails_ = value;
        }
        result.hasReservedThroughputDetails = true;
        return this;
      }
      public Builder ClearReservedThroughputDetails() {
        PrepareBuilder();
        result.hasReservedThroughputDetails = false;
        result.reservedThroughputDetails_ = null;
        return this;
      }
      
      public bool HasStreamDetails {
       get { return result.hasStreamDetails; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamDetails StreamDetails {
        get { return result.StreamDetails; }
        set { SetStreamDetails(value); }
      }
      public Builder SetStreamDetails(global::com.aliyun.cloudservice.ots2.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = value;
        return this;
      }
      public Builder SetStreamDetails(global::com.aliyun.cloudservice.ots2.StreamDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamDetails(global::com.aliyun.cloudservice.ots2.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamDetails &&
            result.streamDetails_ != global::com.aliyun.cloudservice.ots2.StreamDetails.DefaultInstance) {
            result.streamDetails_ = global::com.aliyun.cloudservice.ots2.StreamDetails.CreateBuilder(result.streamDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.streamDetails_ = value;
        }
        result.hasStreamDetails = true;
        return this;
      }
      public Builder ClearStreamDetails() {
        PrepareBuilder();
        result.hasStreamDetails = false;
        result.streamDetails_ = null;
        return this;
      }
    }
    static UpdateTableResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeTableRequest : pb::GeneratedMessage<DescribeTableRequest, DescribeTableRequest.Builder> {
    private DescribeTableRequest() { }
    private static readonly DescribeTableRequest defaultInstance = new DescribeTableRequest().MakeReadOnly();
    private static readonly string[] _describeTableRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _describeTableRequestFieldTags = new uint[] { 10 };
    public static DescribeTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeTableRequest, DescribeTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _describeTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DescribeTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeTableRequest result;
      
      private DescribeTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeTableRequest original = result;
          result = new DescribeTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeTableRequest.Descriptor; }
      }
      
      public override DescribeTableRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeTableRequest.DefaultInstance; }
      }
      
      public override DescribeTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeTableRequest) {
          return MergeFrom((DescribeTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeTableRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.DescribeTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static DescribeTableRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeTableResponse : pb::GeneratedMessage<DescribeTableResponse, DescribeTableResponse.Builder> {
    private DescribeTableResponse() { }
    private static readonly DescribeTableResponse defaultInstance = new DescribeTableResponse().MakeReadOnly();
    private static readonly string[] _describeTableResponseFieldNames = new string[] { "reserved_throughput_details", "stream_details", "table_meta" };
    private static readonly uint[] _describeTableResponseFieldTags = new uint[] { 18, 26, 10 };
    public static DescribeTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeTableResponse, DescribeTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeTableResponse__FieldAccessorTable; }
    }
    
    public const int TableMetaFieldNumber = 1;
    private bool hasTableMeta;
    private global::com.aliyun.cloudservice.ots2.TableMeta tableMeta_;
    public bool HasTableMeta {
      get { return hasTableMeta; }
    }
    public global::com.aliyun.cloudservice.ots2.TableMeta TableMeta {
      get { return tableMeta_ ?? global::com.aliyun.cloudservice.ots2.TableMeta.DefaultInstance; }
    }
    
    public const int ReservedThroughputDetailsFieldNumber = 2;
    private bool hasReservedThroughputDetails;
    private global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails reservedThroughputDetails_;
    public bool HasReservedThroughputDetails {
      get { return hasReservedThroughputDetails; }
    }
    public global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_ ?? global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.DefaultInstance; }
    }
    
    public const int StreamDetailsFieldNumber = 3;
    private bool hasStreamDetails;
    private global::com.aliyun.cloudservice.ots2.StreamDetails streamDetails_;
    public bool HasStreamDetails {
      get { return hasStreamDetails; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamDetails StreamDetails {
      get { return streamDetails_ ?? global::com.aliyun.cloudservice.ots2.StreamDetails.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableMeta) return false;
        if (!hasReservedThroughputDetails) return false;
        if (!TableMeta.IsInitialized) return false;
        if (!ReservedThroughputDetails.IsInitialized) return false;
        if (HasStreamDetails) {
          if (!StreamDetails.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _describeTableResponseFieldNames;
      if (hasTableMeta) {
        output.WriteMessage(1, field_names[2], TableMeta);
      }
      if (hasReservedThroughputDetails) {
        output.WriteMessage(2, field_names[0], ReservedThroughputDetails);
      }
      if (hasStreamDetails) {
        output.WriteMessage(3, field_names[1], StreamDetails);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableMeta) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TableMeta);
        }
        if (hasReservedThroughputDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ReservedThroughputDetails);
        }
        if (hasStreamDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, StreamDetails);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DescribeTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeTableResponse result;
      
      private DescribeTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeTableResponse original = result;
          result = new DescribeTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeTableResponse.Descriptor; }
      }
      
      public override DescribeTableResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeTableResponse.DefaultInstance; }
      }
      
      public override DescribeTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeTableResponse) {
          return MergeFrom((DescribeTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeTableResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.DescribeTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableMeta) {
          MergeTableMeta(other.TableMeta);
        }
        if (other.HasReservedThroughputDetails) {
          MergeReservedThroughputDetails(other.ReservedThroughputDetails);
        }
        if (other.HasStreamDetails) {
          MergeStreamDetails(other.StreamDetails);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.TableMeta.Builder subBuilder = global::com.aliyun.cloudservice.ots2.TableMeta.CreateBuilder();
              if (result.hasTableMeta) {
                subBuilder.MergeFrom(TableMeta);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableMeta = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.CreateBuilder();
              if (result.hasReservedThroughputDetails) {
                subBuilder.MergeFrom(ReservedThroughputDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughputDetails = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.aliyun.cloudservice.ots2.StreamDetails.Builder subBuilder = global::com.aliyun.cloudservice.ots2.StreamDetails.CreateBuilder();
              if (result.hasStreamDetails) {
                subBuilder.MergeFrom(StreamDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamDetails = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableMeta {
       get { return result.hasTableMeta; }
      }
      public global::com.aliyun.cloudservice.ots2.TableMeta TableMeta {
        get { return result.TableMeta; }
        set { SetTableMeta(value); }
      }
      public Builder SetTableMeta(global::com.aliyun.cloudservice.ots2.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = value;
        return this;
      }
      public Builder SetTableMeta(global::com.aliyun.cloudservice.ots2.TableMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableMeta(global::com.aliyun.cloudservice.ots2.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableMeta &&
            result.tableMeta_ != global::com.aliyun.cloudservice.ots2.TableMeta.DefaultInstance) {
            result.tableMeta_ = global::com.aliyun.cloudservice.ots2.TableMeta.CreateBuilder(result.tableMeta_).MergeFrom(value).BuildPartial();
        } else {
          result.tableMeta_ = value;
        }
        result.hasTableMeta = true;
        return this;
      }
      public Builder ClearTableMeta() {
        PrepareBuilder();
        result.hasTableMeta = false;
        result.tableMeta_ = null;
        return this;
      }
      
      public bool HasReservedThroughputDetails {
       get { return result.hasReservedThroughputDetails; }
      }
      public global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails ReservedThroughputDetails {
        get { return result.ReservedThroughputDetails; }
        set { SetReservedThroughputDetails(value); }
      }
      public Builder SetReservedThroughputDetails(global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = value;
        return this;
      }
      public Builder SetReservedThroughputDetails(global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughputDetails(global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughputDetails &&
            result.reservedThroughputDetails_ != global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.DefaultInstance) {
            result.reservedThroughputDetails_ = global::com.aliyun.cloudservice.ots2.ReservedThroughputDetails.CreateBuilder(result.reservedThroughputDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughputDetails_ = value;
        }
        result.hasReservedThroughputDetails = true;
        return this;
      }
      public Builder ClearReservedThroughputDetails() {
        PrepareBuilder();
        result.hasReservedThroughputDetails = false;
        result.reservedThroughputDetails_ = null;
        return this;
      }
      
      public bool HasStreamDetails {
       get { return result.hasStreamDetails; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamDetails StreamDetails {
        get { return result.StreamDetails; }
        set { SetStreamDetails(value); }
      }
      public Builder SetStreamDetails(global::com.aliyun.cloudservice.ots2.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = value;
        return this;
      }
      public Builder SetStreamDetails(global::com.aliyun.cloudservice.ots2.StreamDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamDetails(global::com.aliyun.cloudservice.ots2.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamDetails &&
            result.streamDetails_ != global::com.aliyun.cloudservice.ots2.StreamDetails.DefaultInstance) {
            result.streamDetails_ = global::com.aliyun.cloudservice.ots2.StreamDetails.CreateBuilder(result.streamDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.streamDetails_ = value;
        }
        result.hasStreamDetails = true;
        return this;
      }
      public Builder ClearStreamDetails() {
        PrepareBuilder();
        result.hasStreamDetails = false;
        result.streamDetails_ = null;
        return this;
      }
    }
    static DescribeTableResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListTableRequest : pb::GeneratedMessage<ListTableRequest, ListTableRequest.Builder> {
    private ListTableRequest() { }
    private static readonly ListTableRequest defaultInstance = new ListTableRequest().MakeReadOnly();
    private static readonly string[] _listTableRequestFieldNames = new string[] {  };
    private static readonly uint[] _listTableRequestFieldTags = new uint[] {  };
    public static ListTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListTableRequest, ListTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListTableRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listTableRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListTableRequest result;
      
      private ListTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListTableRequest original = result;
          result = new ListTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ListTableRequest.Descriptor; }
      }
      
      public override ListTableRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ListTableRequest.DefaultInstance; }
      }
      
      public override ListTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListTableRequest) {
          return MergeFrom((ListTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListTableRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.ListTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ListTableRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListTableResponse : pb::GeneratedMessage<ListTableResponse, ListTableResponse.Builder> {
    private ListTableResponse() { }
    private static readonly ListTableResponse defaultInstance = new ListTableResponse().MakeReadOnly();
    private static readonly string[] _listTableResponseFieldNames = new string[] { "table_names" };
    private static readonly uint[] _listTableResponseFieldTags = new uint[] { 10 };
    public static ListTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListTableResponse, ListTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListTableResponse__FieldAccessorTable; }
    }
    
    public const int TableNamesFieldNumber = 1;
    private pbc::PopsicleList<string> tableNames_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TableNamesList {
      get { return pbc::Lists.AsReadOnly(tableNames_); }
    }
    public int TableNamesCount {
      get { return tableNames_.Count; }
    }
    public string GetTableNames(int index) {
      return tableNames_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listTableResponseFieldNames;
      if (tableNames_.Count > 0) {
        output.WriteStringArray(1, field_names[0], tableNames_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in TableNamesList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * tableNames_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListTableResponse MakeReadOnly() {
      tableNames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListTableResponse result;
      
      private ListTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListTableResponse original = result;
          result = new ListTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ListTableResponse.Descriptor; }
      }
      
      public override ListTableResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ListTableResponse.DefaultInstance; }
      }
      
      public override ListTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListTableResponse) {
          return MergeFrom((ListTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListTableResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.ListTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tableNames_.Count != 0) {
          result.tableNames_.Add(other.tableNames_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.tableNames_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> TableNamesList {
        get { return PrepareBuilder().tableNames_; }
      }
      public int TableNamesCount {
        get { return result.TableNamesCount; }
      }
      public string GetTableNames(int index) {
        return result.GetTableNames(index);
      }
      public Builder SetTableNames(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tableNames_[index] = value;
        return this;
      }
      public Builder AddTableNames(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tableNames_.Add(value);
        return this;
      }
      public Builder AddRangeTableNames(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tableNames_.Add(values);
        return this;
      }
      public Builder ClearTableNames() {
        PrepareBuilder();
        result.tableNames_.Clear();
        return this;
      }
    }
    static ListTableResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteTableRequest : pb::GeneratedMessage<DeleteTableRequest, DeleteTableRequest.Builder> {
    private DeleteTableRequest() { }
    private static readonly DeleteTableRequest defaultInstance = new DeleteTableRequest().MakeReadOnly();
    private static readonly string[] _deleteTableRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _deleteTableRequestFieldTags = new uint[] { 10 };
    public static DeleteTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteTableRequest, DeleteTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _deleteTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeleteTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteTableRequest result;
      
      private DeleteTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteTableRequest original = result;
          result = new DeleteTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteTableRequest.Descriptor; }
      }
      
      public override DeleteTableRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteTableRequest.DefaultInstance; }
      }
      
      public override DeleteTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteTableRequest) {
          return MergeFrom((DeleteTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteTableRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.DeleteTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static DeleteTableRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteTableResponse : pb::GeneratedMessage<DeleteTableResponse, DeleteTableResponse.Builder> {
    private DeleteTableResponse() { }
    private static readonly DeleteTableResponse defaultInstance = new DeleteTableResponse().MakeReadOnly();
    private static readonly string[] _deleteTableResponseFieldNames = new string[] {  };
    private static readonly uint[] _deleteTableResponseFieldTags = new uint[] {  };
    public static DeleteTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteTableResponse, DeleteTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteTableResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _deleteTableResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeleteTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteTableResponse result;
      
      private DeleteTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteTableResponse original = result;
          result = new DeleteTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteTableResponse.Descriptor; }
      }
      
      public override DeleteTableResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteTableResponse.DefaultInstance; }
      }
      
      public override DeleteTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteTableResponse) {
          return MergeFrom((DeleteTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteTableResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.DeleteTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static DeleteTableResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRowRequest : pb::GeneratedMessage<GetRowRequest, GetRowRequest.Builder> {
    private GetRowRequest() { }
    private static readonly GetRowRequest defaultInstance = new GetRowRequest().MakeReadOnly();
    private static readonly string[] _getRowRequestFieldNames = new string[] { "columns_to_get", "filter", "primary_key", "table_name" };
    private static readonly uint[] _getRowRequestFieldTags = new uint[] { 26, 34, 18, 10 };
    public static GetRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRowRequest, GetRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private pbc::PopsicleList<string> columnsToGet_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnsToGetList {
      get { return pbc::Lists.AsReadOnly(columnsToGet_); }
    }
    public int ColumnsToGetCount {
      get { return columnsToGet_.Count; }
    }
    public string GetColumnsToGet(int index) {
      return columnsToGet_[index];
    }
    
    public const int FilterFieldNumber = 4;
    private bool hasFilter;
    private global::com.aliyun.cloudservice.ots2.ColumnCondition filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnCondition Filter {
      get { return filter_ ?? global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        if (HasFilter) {
          if (!Filter.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], primaryKey_);
      }
      if (columnsToGet_.Count > 0) {
        output.WriteStringArray(3, field_names[0], columnsToGet_);
      }
      if (hasFilter) {
        output.WriteMessage(4, field_names[1], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        {
          int dataSize = 0;
          foreach (string element in ColumnsToGetList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * columnsToGet_.Count;
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      columnsToGet_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRowRequest result;
      
      private GetRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRowRequest original = result;
          result = new GetRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRowRequest.Descriptor; }
      }
      
      public override GetRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRowRequest.DefaultInstance; }
      }
      
      public override GetRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRowRequest) {
          return MergeFrom((GetRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.columnsToGet_.Count != 0) {
          result.columnsToGet_.Add(other.columnsToGet_);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.columnsToGet_);
              break;
            }
            case 34: {
              global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnsToGetList {
        get { return PrepareBuilder().columnsToGet_; }
      }
      public int ColumnsToGetCount {
        get { return result.ColumnsToGetCount; }
      }
      public string GetColumnsToGet(int index) {
        return result.GetColumnsToGet(index);
      }
      public Builder SetColumnsToGet(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_[index] = value;
        return this;
      }
      public Builder AddColumnsToGet(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_.Add(value);
        return this;
      }
      public Builder AddRangeColumnsToGet(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnsToGet_.Add(values);
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.columnsToGet_.Clear();
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnCondition Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance) {
            result.filter_ = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static GetRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRowResponse : pb::GeneratedMessage<GetRowResponse, GetRowResponse.Builder> {
    private GetRowResponse() { }
    private static readonly GetRowResponse defaultInstance = new GetRowResponse().MakeReadOnly();
    private static readonly string[] _getRowResponseFieldNames = new string[] { "consumed", "row" };
    private static readonly uint[] _getRowResponseFieldTags = new uint[] { 10, 18 };
    public static GetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRowResponse, GetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.aliyun.cloudservice.ots2.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 2;
    private bool hasRow;
    private global::com.aliyun.cloudservice.ots2.Row row_;
    public bool HasRow {
      get { return hasRow; }
    }
    public global::com.aliyun.cloudservice.ots2.Row Row {
      get { return row_ ?? global::com.aliyun.cloudservice.ots2.Row.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!hasRow) return false;
        if (!Consumed.IsInitialized) return false;
        if (!Row.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteMessage(2, field_names[1], Row);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasConsumed) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
        }
        if (hasRow) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Row);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRowResponse result;
      
      private GetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRowResponse original = result;
          result = new GetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRowResponse.Descriptor; }
      }
      
      public override GetRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRowResponse.DefaultInstance; }
      }
      
      public override GetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRowResponse) {
          return MergeFrom((GetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          MergeRow(other.Row);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.Row.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Row.CreateBuilder();
              if (result.hasRow) {
                subBuilder.MergeFrom(Row);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Row = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
       get { return result.hasRow; }
      }
      public global::com.aliyun.cloudservice.ots2.Row Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(global::com.aliyun.cloudservice.ots2.Row value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder SetRow(global::com.aliyun.cloudservice.ots2.Row.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRow(global::com.aliyun.cloudservice.ots2.Row value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRow &&
            result.row_ != global::com.aliyun.cloudservice.ots2.Row.DefaultInstance) {
            result.row_ = global::com.aliyun.cloudservice.ots2.Row.CreateBuilder(result.row_).MergeFrom(value).BuildPartial();
        } else {
          result.row_ = value;
        }
        result.hasRow = true;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = null;
        return this;
      }
    }
    static GetRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnUpdate : pb::GeneratedMessage<ColumnUpdate, ColumnUpdate.Builder> {
    private ColumnUpdate() { }
    private static readonly ColumnUpdate defaultInstance = new ColumnUpdate().MakeReadOnly();
    private static readonly string[] _columnUpdateFieldNames = new string[] { "name", "type", "value" };
    private static readonly uint[] _columnUpdateFieldTags = new uint[] { 18, 8, 26 };
    public static ColumnUpdate DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnUpdate DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnUpdate ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnUpdate__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnUpdate, ColumnUpdate.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ColumnUpdate__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::com.aliyun.cloudservice.ots2.OperationType type_ = global::com.aliyun.cloudservice.ots2.OperationType.PUT;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.aliyun.cloudservice.ots2.OperationType Type {
      get { return type_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ValueFieldNumber = 3;
    private bool hasValue;
    private global::com.aliyun.cloudservice.ots2.ColumnValue value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnValue Value {
      get { return value_ ?? global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasName) return false;
        if (HasValue) {
          if (!Value.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _columnUpdateFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasName) {
        output.WriteString(2, field_names[0], Name);
      }
      if (hasValue) {
        output.WriteMessage(3, field_names[2], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ColumnUpdate ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnUpdate ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnUpdate ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnUpdate ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnUpdate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnUpdate MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnUpdate prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnUpdate, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnUpdate cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnUpdate result;
      
      private ColumnUpdate PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnUpdate original = result;
          result = new ColumnUpdate();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnUpdate MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnUpdate.Descriptor; }
      }
      
      public override ColumnUpdate DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ColumnUpdate.DefaultInstance; }
      }
      
      public override ColumnUpdate BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnUpdate) {
          return MergeFrom((ColumnUpdate) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnUpdate other) {
        if (other == global::com.aliyun.cloudservice.ots2.ColumnUpdate.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnUpdateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              global::com.aliyun.cloudservice.ots2.ColumnValue.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ColumnValue.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.aliyun.cloudservice.ots2.OperationType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.aliyun.cloudservice.ots2.OperationType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.aliyun.cloudservice.ots2.OperationType.PUT;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnValue Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::com.aliyun.cloudservice.ots2.ColumnValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::com.aliyun.cloudservice.ots2.ColumnValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::com.aliyun.cloudservice.ots2.ColumnValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::com.aliyun.cloudservice.ots2.ColumnValue.DefaultInstance) {
            result.value_ = global::com.aliyun.cloudservice.ots2.ColumnValue.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static ColumnUpdate() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateRowRequest : pb::GeneratedMessage<UpdateRowRequest, UpdateRowRequest.Builder> {
    private UpdateRowRequest() { }
    private static readonly UpdateRowRequest defaultInstance = new UpdateRowRequest().MakeReadOnly();
    private static readonly string[] _updateRowRequestFieldNames = new string[] { "attribute_columns", "condition", "primary_key", "table_name" };
    private static readonly uint[] _updateRowRequestFieldTags = new uint[] { 34, 18, 26, 10 };
    public static UpdateRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRowRequest, UpdateRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int ConditionFieldNumber = 2;
    private bool hasCondition;
    private global::com.aliyun.cloudservice.ots2.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.aliyun.cloudservice.ots2.Condition Condition {
      get { return condition_ ?? global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance; }
    }
    
    public const int PrimaryKeyFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int AttributeColumnsFieldNumber = 4;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> attributeColumns_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> AttributeColumnsList {
      get { return attributeColumns_; }
    }
    public int AttributeColumnsCount {
      get { return attributeColumns_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnUpdate GetAttributeColumns(int index) {
      return attributeColumns_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnUpdate element in AttributeColumnsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (hasCondition) {
        output.WriteMessage(2, field_names[1], Condition);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], primaryKey_);
      }
      if (attributeColumns_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], attributeColumns_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Condition);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnUpdate element in AttributeColumnsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      attributeColumns_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRowRequest result;
      
      private UpdateRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRowRequest original = result;
          result = new UpdateRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateRowRequest.Descriptor; }
      }
      
      public override UpdateRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateRowRequest.DefaultInstance; }
      }
      
      public override UpdateRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRowRequest) {
          return MergeFrom((UpdateRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.UpdateRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.attributeColumns_.Count != 0) {
          result.attributeColumns_.Add(other.attributeColumns_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.Condition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attributeColumns_, global::com.aliyun.cloudservice.ots2.ColumnUpdate.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.aliyun.cloudservice.ots2.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance) {
            result.condition_ = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> AttributeColumnsList {
        get { return PrepareBuilder().attributeColumns_; }
      }
      public int AttributeColumnsCount {
        get { return result.AttributeColumnsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnUpdate GetAttributeColumns(int index) {
        return result.GetAttributeColumns(index);
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.ColumnUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_[index] = value;
        return this;
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.ColumnUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_.Add(value);
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributeColumns(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.ColumnUpdate> values) {
        PrepareBuilder();
        result.attributeColumns_.Add(values);
        return this;
      }
      public Builder ClearAttributeColumns() {
        PrepareBuilder();
        result.attributeColumns_.Clear();
        return this;
      }
    }
    static UpdateRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateRowResponse : pb::GeneratedMessage<UpdateRowResponse, UpdateRowResponse.Builder> {
    private UpdateRowResponse() { }
    private static readonly UpdateRowResponse defaultInstance = new UpdateRowResponse().MakeReadOnly();
    private static readonly string[] _updateRowResponseFieldNames = new string[] { "consumed" };
    private static readonly uint[] _updateRowResponseFieldTags = new uint[] { 10 };
    public static UpdateRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRowResponse, UpdateRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.aliyun.cloudservice.ots2.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasConsumed) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRowResponse result;
      
      private UpdateRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRowResponse original = result;
          result = new UpdateRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateRowResponse.Descriptor; }
      }
      
      public override UpdateRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateRowResponse.DefaultInstance; }
      }
      
      public override UpdateRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRowResponse) {
          return MergeFrom((UpdateRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.UpdateRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
    }
    static UpdateRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PutRowRequest : pb::GeneratedMessage<PutRowRequest, PutRowRequest.Builder> {
    private PutRowRequest() { }
    private static readonly PutRowRequest defaultInstance = new PutRowRequest().MakeReadOnly();
    private static readonly string[] _putRowRequestFieldNames = new string[] { "attribute_columns", "condition", "primary_key", "table_name" };
    private static readonly uint[] _putRowRequestFieldTags = new uint[] { 34, 18, 26, 10 };
    public static PutRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PutRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PutRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_PutRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PutRowRequest, PutRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_PutRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int ConditionFieldNumber = 2;
    private bool hasCondition;
    private global::com.aliyun.cloudservice.ots2.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.aliyun.cloudservice.ots2.Condition Condition {
      get { return condition_ ?? global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance; }
    }
    
    public const int PrimaryKeyFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int AttributeColumnsFieldNumber = 4;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> attributeColumns_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsList {
      get { return attributeColumns_; }
    }
    public int AttributeColumnsCount {
      get { return attributeColumns_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumns(int index) {
      return attributeColumns_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _putRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (hasCondition) {
        output.WriteMessage(2, field_names[1], Condition);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], primaryKey_);
      }
      if (attributeColumns_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], attributeColumns_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Condition);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PutRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PutRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PutRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PutRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PutRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      attributeColumns_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PutRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PutRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PutRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PutRowRequest result;
      
      private PutRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PutRowRequest original = result;
          result = new PutRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PutRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.PutRowRequest.Descriptor; }
      }
      
      public override PutRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.PutRowRequest.DefaultInstance; }
      }
      
      public override PutRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PutRowRequest) {
          return MergeFrom((PutRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PutRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.PutRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.attributeColumns_.Count != 0) {
          result.attributeColumns_.Add(other.attributeColumns_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_putRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _putRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.Condition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attributeColumns_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.aliyun.cloudservice.ots2.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance) {
            result.condition_ = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsList {
        get { return PrepareBuilder().attributeColumns_; }
      }
      public int AttributeColumnsCount {
        get { return result.AttributeColumnsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumns(int index) {
        return result.GetAttributeColumns(index);
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_[index] = value;
        return this;
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_.Add(value);
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributeColumns(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.attributeColumns_.Add(values);
        return this;
      }
      public Builder ClearAttributeColumns() {
        PrepareBuilder();
        result.attributeColumns_.Clear();
        return this;
      }
    }
    static PutRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PutRowResponse : pb::GeneratedMessage<PutRowResponse, PutRowResponse.Builder> {
    private PutRowResponse() { }
    private static readonly PutRowResponse defaultInstance = new PutRowResponse().MakeReadOnly();
    private static readonly string[] _putRowResponseFieldNames = new string[] { "consumed" };
    private static readonly uint[] _putRowResponseFieldTags = new uint[] { 10 };
    public static PutRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PutRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PutRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_PutRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PutRowResponse, PutRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_PutRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.aliyun.cloudservice.ots2.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _putRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasConsumed) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PutRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PutRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PutRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PutRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PutRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PutRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PutRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PutRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PutRowResponse result;
      
      private PutRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PutRowResponse original = result;
          result = new PutRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PutRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.PutRowResponse.Descriptor; }
      }
      
      public override PutRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.PutRowResponse.DefaultInstance; }
      }
      
      public override PutRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PutRowResponse) {
          return MergeFrom((PutRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PutRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.PutRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_putRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _putRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
    }
    static PutRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteRowRequest : pb::GeneratedMessage<DeleteRowRequest, DeleteRowRequest.Builder> {
    private DeleteRowRequest() { }
    private static readonly DeleteRowRequest defaultInstance = new DeleteRowRequest().MakeReadOnly();
    private static readonly string[] _deleteRowRequestFieldNames = new string[] { "condition", "primary_key", "table_name" };
    private static readonly uint[] _deleteRowRequestFieldTags = new uint[] { 18, 26, 10 };
    public static DeleteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteRowRequest, DeleteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int ConditionFieldNumber = 2;
    private bool hasCondition;
    private global::com.aliyun.cloudservice.ots2.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.aliyun.cloudservice.ots2.Condition Condition {
      get { return condition_ ?? global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance; }
    }
    
    public const int PrimaryKeyFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _deleteRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[2], TableName);
      }
      if (hasCondition) {
        output.WriteMessage(2, field_names[0], Condition);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], primaryKey_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Condition);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeleteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteRowRequest result;
      
      private DeleteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteRowRequest original = result;
          result = new DeleteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteRowRequest.Descriptor; }
      }
      
      public override DeleteRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteRowRequest.DefaultInstance; }
      }
      
      public override DeleteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteRowRequest) {
          return MergeFrom((DeleteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.DeleteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.Condition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.aliyun.cloudservice.ots2.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance) {
            result.condition_ = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
    }
    static DeleteRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteRowResponse : pb::GeneratedMessage<DeleteRowResponse, DeleteRowResponse.Builder> {
    private DeleteRowResponse() { }
    private static readonly DeleteRowResponse defaultInstance = new DeleteRowResponse().MakeReadOnly();
    private static readonly string[] _deleteRowResponseFieldNames = new string[] { "consumed" };
    private static readonly uint[] _deleteRowResponseFieldTags = new uint[] { 10 };
    public static DeleteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteRowResponse, DeleteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.aliyun.cloudservice.ots2.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _deleteRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasConsumed) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeleteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteRowResponse result;
      
      private DeleteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteRowResponse original = result;
          result = new DeleteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteRowResponse.Descriptor; }
      }
      
      public override DeleteRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteRowResponse.DefaultInstance; }
      }
      
      public override DeleteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteRowResponse) {
          return MergeFrom((DeleteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.DeleteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
    }
    static DeleteRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowInBatchGetRowRequest : pb::GeneratedMessage<RowInBatchGetRowRequest, RowInBatchGetRowRequest.Builder> {
    private RowInBatchGetRowRequest() { }
    private static readonly RowInBatchGetRowRequest defaultInstance = new RowInBatchGetRowRequest().MakeReadOnly();
    private static readonly string[] _rowInBatchGetRowRequestFieldNames = new string[] { "primary_key" };
    private static readonly uint[] _rowInBatchGetRowRequestFieldTags = new uint[] { 10 };
    public static RowInBatchGetRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowInBatchGetRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowInBatchGetRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowInBatchGetRowRequest, RowInBatchGetRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowRequest__FieldAccessorTable; }
    }
    
    public const int PrimaryKeyFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _rowInBatchGetRowRequestFieldNames;
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], primaryKey_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RowInBatchGetRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchGetRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowInBatchGetRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowInBatchGetRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowInBatchGetRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowInBatchGetRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowInBatchGetRowRequest result;
      
      private RowInBatchGetRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RowInBatchGetRowRequest original = result;
          result = new RowInBatchGetRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowInBatchGetRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.Descriptor; }
      }
      
      public override RowInBatchGetRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.DefaultInstance; }
      }
      
      public override RowInBatchGetRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowInBatchGetRowRequest) {
          return MergeFrom((RowInBatchGetRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowInBatchGetRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowInBatchGetRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowInBatchGetRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
    }
    static RowInBatchGetRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchGetRowRequest : pb::GeneratedMessage<TableInBatchGetRowRequest, TableInBatchGetRowRequest.Builder> {
    private TableInBatchGetRowRequest() { }
    private static readonly TableInBatchGetRowRequest defaultInstance = new TableInBatchGetRowRequest().MakeReadOnly();
    private static readonly string[] _tableInBatchGetRowRequestFieldNames = new string[] { "columns_to_get", "filter", "rows", "table_name" };
    private static readonly uint[] _tableInBatchGetRowRequestFieldTags = new uint[] { 26, 34, 18, 10 };
    public static TableInBatchGetRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchGetRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchGetRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchGetRowRequest, TableInBatchGetRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest> rows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest> RowsList {
      get { return rows_; }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest GetRows(int index) {
      return rows_[index];
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private pbc::PopsicleList<string> columnsToGet_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnsToGetList {
      get { return pbc::Lists.AsReadOnly(columnsToGet_); }
    }
    public int ColumnsToGetCount {
      get { return columnsToGet_.Count; }
    }
    public string GetColumnsToGet(int index) {
      return columnsToGet_[index];
    }
    
    public const int FilterFieldNumber = 4;
    private bool hasFilter;
    private global::com.aliyun.cloudservice.ots2.ColumnCondition filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnCondition Filter {
      get { return filter_ ?? global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest element in RowsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasFilter) {
          if (!Filter.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _tableInBatchGetRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (rows_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], rows_);
      }
      if (columnsToGet_.Count > 0) {
        output.WriteStringArray(3, field_names[0], columnsToGet_);
      }
      if (hasFilter) {
        output.WriteMessage(4, field_names[1], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest element in RowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        {
          int dataSize = 0;
          foreach (string element in ColumnsToGetList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * columnsToGet_.Count;
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TableInBatchGetRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchGetRowRequest MakeReadOnly() {
      rows_.MakeReadOnly();
      columnsToGet_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchGetRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchGetRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchGetRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchGetRowRequest result;
      
      private TableInBatchGetRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchGetRowRequest original = result;
          result = new TableInBatchGetRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchGetRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.Descriptor; }
      }
      
      public override TableInBatchGetRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.DefaultInstance; }
      }
      
      public override TableInBatchGetRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchGetRowRequest) {
          return MergeFrom((TableInBatchGetRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchGetRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        if (other.columnsToGet_.Count != 0) {
          result.columnsToGet_.Add(other.columnsToGet_);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchGetRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchGetRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.rows_, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.columnsToGet_);
              break;
            }
            case 34: {
              global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder SetRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRows(global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRows(global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnsToGetList {
        get { return PrepareBuilder().columnsToGet_; }
      }
      public int ColumnsToGetCount {
        get { return result.ColumnsToGetCount; }
      }
      public string GetColumnsToGet(int index) {
        return result.GetColumnsToGet(index);
      }
      public Builder SetColumnsToGet(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_[index] = value;
        return this;
      }
      public Builder AddColumnsToGet(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_.Add(value);
        return this;
      }
      public Builder AddRangeColumnsToGet(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnsToGet_.Add(values);
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.columnsToGet_.Clear();
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnCondition Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance) {
            result.filter_ = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static TableInBatchGetRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchGetRowRequest : pb::GeneratedMessage<BatchGetRowRequest, BatchGetRowRequest.Builder> {
    private BatchGetRowRequest() { }
    private static readonly BatchGetRowRequest defaultInstance = new BatchGetRowRequest().MakeReadOnly();
    private static readonly string[] _batchGetRowRequestFieldNames = new string[] { "tables" };
    private static readonly uint[] _batchGetRowRequestFieldTags = new uint[] { 10 };
    public static BatchGetRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchGetRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchGetRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchGetRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchGetRowRequest, BatchGetRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchGetRowRequest__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest> tables_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest GetTables(int index) {
      return tables_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _batchGetRowRequestFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest element in TablesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BatchGetRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchGetRowRequest MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchGetRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchGetRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchGetRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchGetRowRequest result;
      
      private BatchGetRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchGetRowRequest original = result;
          result = new BatchGetRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchGetRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchGetRowRequest.Descriptor; }
      }
      
      public override BatchGetRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchGetRowRequest.DefaultInstance; }
      }
      
      public override BatchGetRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchGetRowRequest) {
          return MergeFrom((BatchGetRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchGetRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.BatchGetRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchGetRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchGetRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
    }
    static BatchGetRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowInBatchGetRowResponse : pb::GeneratedMessage<RowInBatchGetRowResponse, RowInBatchGetRowResponse.Builder> {
    private RowInBatchGetRowResponse() { }
    private static readonly RowInBatchGetRowResponse defaultInstance = new RowInBatchGetRowResponse().MakeReadOnly();
    private static readonly string[] _rowInBatchGetRowResponseFieldNames = new string[] { "consumed", "error", "is_ok", "row" };
    private static readonly uint[] _rowInBatchGetRowResponseFieldTags = new uint[] { 26, 18, 8, 34 };
    public static RowInBatchGetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowInBatchGetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowInBatchGetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowInBatchGetRowResponse, RowInBatchGetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RowInBatchGetRowResponse__FieldAccessorTable; }
    }
    
    public const int IsOkFieldNumber = 1;
    private bool hasIsOk;
    private bool isOk_ = true;
    public bool HasIsOk {
      get { return hasIsOk; }
    }
    public bool IsOk {
      get { return isOk_; }
    }
    
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private global::com.aliyun.cloudservice.ots2.Error error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::com.aliyun.cloudservice.ots2.Error Error {
      get { return error_ ?? global::com.aliyun.cloudservice.ots2.Error.DefaultInstance; }
    }
    
    public const int ConsumedFieldNumber = 3;
    private bool hasConsumed;
    private global::com.aliyun.cloudservice.ots2.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 4;
    private bool hasRow;
    private global::com.aliyun.cloudservice.ots2.Row row_;
    public bool HasRow {
      get { return hasRow; }
    }
    public global::com.aliyun.cloudservice.ots2.Row Row {
      get { return row_ ?? global::com.aliyun.cloudservice.ots2.Row.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsOk) return false;
        if (HasError) {
          if (!Error.IsInitialized) return false;
        }
        if (HasConsumed) {
          if (!Consumed.IsInitialized) return false;
        }
        if (HasRow) {
          if (!Row.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _rowInBatchGetRowResponseFieldNames;
      if (hasIsOk) {
        output.WriteBool(1, field_names[2], IsOk);
      }
      if (hasError) {
        output.WriteMessage(2, field_names[1], Error);
      }
      if (hasConsumed) {
        output.WriteMessage(3, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteMessage(4, field_names[3], Row);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsOk) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsOk);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Error);
        }
        if (hasConsumed) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Consumed);
        }
        if (hasRow) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Row);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RowInBatchGetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowInBatchGetRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowInBatchGetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowInBatchGetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowInBatchGetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowInBatchGetRowResponse result;
      
      private RowInBatchGetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RowInBatchGetRowResponse original = result;
          result = new RowInBatchGetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowInBatchGetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.Descriptor; }
      }
      
      public override RowInBatchGetRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.DefaultInstance; }
      }
      
      public override RowInBatchGetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowInBatchGetRowResponse) {
          return MergeFrom((RowInBatchGetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowInBatchGetRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsOk) {
          IsOk = other.IsOk;
        }
        if (other.HasError) {
          MergeError(other.Error);
        }
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          MergeRow(other.Row);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowInBatchGetRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowInBatchGetRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsOk = input.ReadBool(ref result.isOk_);
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.Error.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Error.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.aliyun.cloudservice.ots2.Row.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Row.CreateBuilder();
              if (result.hasRow) {
                subBuilder.MergeFrom(Row);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Row = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsOk {
        get { return result.hasIsOk; }
      }
      public bool IsOk {
        get { return result.IsOk; }
        set { SetIsOk(value); }
      }
      public Builder SetIsOk(bool value) {
        PrepareBuilder();
        result.hasIsOk = true;
        result.isOk_ = value;
        return this;
      }
      public Builder ClearIsOk() {
        PrepareBuilder();
        result.hasIsOk = false;
        result.isOk_ = true;
        return this;
      }
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::com.aliyun.cloudservice.ots2.Error Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::com.aliyun.cloudservice.ots2.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::com.aliyun.cloudservice.ots2.Error.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::com.aliyun.cloudservice.ots2.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::com.aliyun.cloudservice.ots2.Error.DefaultInstance) {
            result.error_ = global::com.aliyun.cloudservice.ots2.Error.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
       get { return result.hasRow; }
      }
      public global::com.aliyun.cloudservice.ots2.Row Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(global::com.aliyun.cloudservice.ots2.Row value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder SetRow(global::com.aliyun.cloudservice.ots2.Row.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRow(global::com.aliyun.cloudservice.ots2.Row value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRow &&
            result.row_ != global::com.aliyun.cloudservice.ots2.Row.DefaultInstance) {
            result.row_ = global::com.aliyun.cloudservice.ots2.Row.CreateBuilder(result.row_).MergeFrom(value).BuildPartial();
        } else {
          result.row_ = value;
        }
        result.hasRow = true;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = null;
        return this;
      }
    }
    static RowInBatchGetRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchGetRowResponse : pb::GeneratedMessage<TableInBatchGetRowResponse, TableInBatchGetRowResponse.Builder> {
    private TableInBatchGetRowResponse() { }
    private static readonly TableInBatchGetRowResponse defaultInstance = new TableInBatchGetRowResponse().MakeReadOnly();
    private static readonly string[] _tableInBatchGetRowResponseFieldNames = new string[] { "rows", "table_name" };
    private static readonly uint[] _tableInBatchGetRowResponseFieldTags = new uint[] { 18, 10 };
    public static TableInBatchGetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchGetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchGetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchGetRowResponse, TableInBatchGetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchGetRowResponse__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse> rows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse> RowsList {
      get { return rows_; }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse GetRows(int index) {
      return rows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse element in RowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _tableInBatchGetRowResponseFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (rows_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], rows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse element in RowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TableInBatchGetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchGetRowResponse MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchGetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchGetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchGetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchGetRowResponse result;
      
      private TableInBatchGetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchGetRowResponse original = result;
          result = new TableInBatchGetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchGetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.Descriptor; }
      }
      
      public override TableInBatchGetRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.DefaultInstance; }
      }
      
      public override TableInBatchGetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchGetRowResponse) {
          return MergeFrom((TableInBatchGetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchGetRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchGetRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchGetRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.rows_, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder SetRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRows(global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRows(global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
    }
    static TableInBatchGetRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchGetRowResponse : pb::GeneratedMessage<BatchGetRowResponse, BatchGetRowResponse.Builder> {
    private BatchGetRowResponse() { }
    private static readonly BatchGetRowResponse defaultInstance = new BatchGetRowResponse().MakeReadOnly();
    private static readonly string[] _batchGetRowResponseFieldNames = new string[] { "tables" };
    private static readonly uint[] _batchGetRowResponseFieldTags = new uint[] { 10 };
    public static BatchGetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchGetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchGetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchGetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchGetRowResponse, BatchGetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchGetRowResponse__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse> tables_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse GetTables(int index) {
      return tables_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _batchGetRowResponseFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse element in TablesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BatchGetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchGetRowResponse MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchGetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchGetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchGetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchGetRowResponse result;
      
      private BatchGetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchGetRowResponse original = result;
          result = new BatchGetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchGetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchGetRowResponse.Descriptor; }
      }
      
      public override BatchGetRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchGetRowResponse.DefaultInstance; }
      }
      
      public override BatchGetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchGetRowResponse) {
          return MergeFrom((BatchGetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchGetRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.BatchGetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchGetRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchGetRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
    }
    static BatchGetRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PutRowInBatchWriteRowRequest : pb::GeneratedMessage<PutRowInBatchWriteRowRequest, PutRowInBatchWriteRowRequest.Builder> {
    private PutRowInBatchWriteRowRequest() { }
    private static readonly PutRowInBatchWriteRowRequest defaultInstance = new PutRowInBatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _putRowInBatchWriteRowRequestFieldNames = new string[] { "attribute_columns", "condition", "primary_key" };
    private static readonly uint[] _putRowInBatchWriteRowRequestFieldTags = new uint[] { 26, 10, 18 };
    public static PutRowInBatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PutRowInBatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PutRowInBatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_PutRowInBatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PutRowInBatchWriteRowRequest, PutRowInBatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_PutRowInBatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int ConditionFieldNumber = 1;
    private bool hasCondition;
    private global::com.aliyun.cloudservice.ots2.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.aliyun.cloudservice.ots2.Condition Condition {
      get { return condition_ ?? global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int AttributeColumnsFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> attributeColumns_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsList {
      get { return attributeColumns_; }
    }
    public int AttributeColumnsCount {
      get { return attributeColumns_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumns(int index) {
      return attributeColumns_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _putRowInBatchWriteRowRequestFieldNames;
      if (hasCondition) {
        output.WriteMessage(1, field_names[1], Condition);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], primaryKey_);
      }
      if (attributeColumns_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attributeColumns_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Condition);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PutRowInBatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PutRowInBatchWriteRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      attributeColumns_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PutRowInBatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PutRowInBatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PutRowInBatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PutRowInBatchWriteRowRequest result;
      
      private PutRowInBatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PutRowInBatchWriteRowRequest original = result;
          result = new PutRowInBatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PutRowInBatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.Descriptor; }
      }
      
      public override PutRowInBatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.DefaultInstance; }
      }
      
      public override PutRowInBatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PutRowInBatchWriteRowRequest) {
          return MergeFrom((PutRowInBatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PutRowInBatchWriteRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.attributeColumns_.Count != 0) {
          result.attributeColumns_.Add(other.attributeColumns_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_putRowInBatchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _putRowInBatchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.Condition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attributeColumns_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.aliyun.cloudservice.ots2.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance) {
            result.condition_ = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsList {
        get { return PrepareBuilder().attributeColumns_; }
      }
      public int AttributeColumnsCount {
        get { return result.AttributeColumnsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumns(int index) {
        return result.GetAttributeColumns(index);
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_[index] = value;
        return this;
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_.Add(value);
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributeColumns(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.attributeColumns_.Add(values);
        return this;
      }
      public Builder ClearAttributeColumns() {
        PrepareBuilder();
        result.attributeColumns_.Clear();
        return this;
      }
    }
    static PutRowInBatchWriteRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateRowInBatchWriteRowRequest : pb::GeneratedMessage<UpdateRowInBatchWriteRowRequest, UpdateRowInBatchWriteRowRequest.Builder> {
    private UpdateRowInBatchWriteRowRequest() { }
    private static readonly UpdateRowInBatchWriteRowRequest defaultInstance = new UpdateRowInBatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _updateRowInBatchWriteRowRequestFieldNames = new string[] { "attribute_columns", "condition", "primary_key" };
    private static readonly uint[] _updateRowInBatchWriteRowRequestFieldTags = new uint[] { 26, 10, 18 };
    public static UpdateRowInBatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRowInBatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRowInBatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateRowInBatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRowInBatchWriteRowRequest, UpdateRowInBatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_UpdateRowInBatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int ConditionFieldNumber = 1;
    private bool hasCondition;
    private global::com.aliyun.cloudservice.ots2.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.aliyun.cloudservice.ots2.Condition Condition {
      get { return condition_ ?? global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int AttributeColumnsFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> attributeColumns_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> AttributeColumnsList {
      get { return attributeColumns_; }
    }
    public int AttributeColumnsCount {
      get { return attributeColumns_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnUpdate GetAttributeColumns(int index) {
      return attributeColumns_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnUpdate element in AttributeColumnsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateRowInBatchWriteRowRequestFieldNames;
      if (hasCondition) {
        output.WriteMessage(1, field_names[1], Condition);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], primaryKey_);
      }
      if (attributeColumns_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attributeColumns_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Condition);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnUpdate element in AttributeColumnsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateRowInBatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRowInBatchWriteRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      attributeColumns_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRowInBatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRowInBatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRowInBatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRowInBatchWriteRowRequest result;
      
      private UpdateRowInBatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRowInBatchWriteRowRequest original = result;
          result = new UpdateRowInBatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRowInBatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.Descriptor; }
      }
      
      public override UpdateRowInBatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.DefaultInstance; }
      }
      
      public override UpdateRowInBatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRowInBatchWriteRowRequest) {
          return MergeFrom((UpdateRowInBatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRowInBatchWriteRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.attributeColumns_.Count != 0) {
          result.attributeColumns_.Add(other.attributeColumns_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRowInBatchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRowInBatchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.Condition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attributeColumns_, global::com.aliyun.cloudservice.ots2.ColumnUpdate.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.aliyun.cloudservice.ots2.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance) {
            result.condition_ = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> AttributeColumnsList {
        get { return PrepareBuilder().attributeColumns_; }
      }
      public int AttributeColumnsCount {
        get { return result.AttributeColumnsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnUpdate GetAttributeColumns(int index) {
        return result.GetAttributeColumns(index);
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.ColumnUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_[index] = value;
        return this;
      }
      public Builder SetAttributeColumns(int index, global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.ColumnUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumns_.Add(value);
        return this;
      }
      public Builder AddAttributeColumns(global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumns_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributeColumns(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.ColumnUpdate> values) {
        PrepareBuilder();
        result.attributeColumns_.Add(values);
        return this;
      }
      public Builder ClearAttributeColumns() {
        PrepareBuilder();
        result.attributeColumns_.Clear();
        return this;
      }
    }
    static UpdateRowInBatchWriteRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteRowInBatchWriteRowRequest : pb::GeneratedMessage<DeleteRowInBatchWriteRowRequest, DeleteRowInBatchWriteRowRequest.Builder> {
    private DeleteRowInBatchWriteRowRequest() { }
    private static readonly DeleteRowInBatchWriteRowRequest defaultInstance = new DeleteRowInBatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _deleteRowInBatchWriteRowRequestFieldNames = new string[] { "condition", "primary_key" };
    private static readonly uint[] _deleteRowInBatchWriteRowRequestFieldTags = new uint[] { 10, 18 };
    public static DeleteRowInBatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteRowInBatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteRowInBatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteRowInBatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteRowInBatchWriteRowRequest, DeleteRowInBatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DeleteRowInBatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int ConditionFieldNumber = 1;
    private bool hasCondition;
    private global::com.aliyun.cloudservice.ots2.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.aliyun.cloudservice.ots2.Condition Condition {
      get { return condition_ ?? global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _deleteRowInBatchWriteRowRequestFieldNames;
      if (hasCondition) {
        output.WriteMessage(1, field_names[0], Condition);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], primaryKey_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Condition);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeleteRowInBatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteRowInBatchWriteRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteRowInBatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteRowInBatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteRowInBatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteRowInBatchWriteRowRequest result;
      
      private DeleteRowInBatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteRowInBatchWriteRowRequest original = result;
          result = new DeleteRowInBatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteRowInBatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.Descriptor; }
      }
      
      public override DeleteRowInBatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.DefaultInstance; }
      }
      
      public override DeleteRowInBatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteRowInBatchWriteRowRequest) {
          return MergeFrom((DeleteRowInBatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteRowInBatchWriteRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteRowInBatchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteRowInBatchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.Condition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.aliyun.cloudservice.ots2.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.aliyun.cloudservice.ots2.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.aliyun.cloudservice.ots2.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.aliyun.cloudservice.ots2.Condition.DefaultInstance) {
            result.condition_ = global::com.aliyun.cloudservice.ots2.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
    }
    static DeleteRowInBatchWriteRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchWriteRowRequest : pb::GeneratedMessage<TableInBatchWriteRowRequest, TableInBatchWriteRowRequest.Builder> {
    private TableInBatchWriteRowRequest() { }
    private static readonly TableInBatchWriteRowRequest defaultInstance = new TableInBatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _tableInBatchWriteRowRequestFieldNames = new string[] { "delete_rows", "put_rows", "table_name", "update_rows" };
    private static readonly uint[] _tableInBatchWriteRowRequestFieldTags = new uint[] { 34, 18, 10, 26 };
    public static TableInBatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchWriteRowRequest, TableInBatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PutRowsFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest> putRows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest> PutRowsList {
      get { return putRows_; }
    }
    public int PutRowsCount {
      get { return putRows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest GetPutRows(int index) {
      return putRows_[index];
    }
    
    public const int UpdateRowsFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest> updateRows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest> UpdateRowsList {
      get { return updateRows_; }
    }
    public int UpdateRowsCount {
      get { return updateRows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest GetUpdateRows(int index) {
      return updateRows_[index];
    }
    
    public const int DeleteRowsFieldNumber = 4;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest> deleteRows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest> DeleteRowsList {
      get { return deleteRows_; }
    }
    public int DeleteRowsCount {
      get { return deleteRows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest GetDeleteRows(int index) {
      return deleteRows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest element in PutRowsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest element in UpdateRowsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest element in DeleteRowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _tableInBatchWriteRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[2], TableName);
      }
      if (putRows_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], putRows_);
      }
      if (updateRows_.Count > 0) {
        output.WriteMessageArray(3, field_names[3], updateRows_);
      }
      if (deleteRows_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], deleteRows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        foreach (global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest element in PutRowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest element in UpdateRowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest element in DeleteRowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TableInBatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchWriteRowRequest MakeReadOnly() {
      putRows_.MakeReadOnly();
      updateRows_.MakeReadOnly();
      deleteRows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchWriteRowRequest result;
      
      private TableInBatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchWriteRowRequest original = result;
          result = new TableInBatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.Descriptor; }
      }
      
      public override TableInBatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.DefaultInstance; }
      }
      
      public override TableInBatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchWriteRowRequest) {
          return MergeFrom((TableInBatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchWriteRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.putRows_.Count != 0) {
          result.putRows_.Add(other.putRows_);
        }
        if (other.updateRows_.Count != 0) {
          result.updateRows_.Add(other.updateRows_);
        }
        if (other.deleteRows_.Count != 0) {
          result.deleteRows_.Add(other.deleteRows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.putRows_, global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.updateRows_, global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.deleteRows_, global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest> PutRowsList {
        get { return PrepareBuilder().putRows_; }
      }
      public int PutRowsCount {
        get { return result.PutRowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest GetPutRows(int index) {
        return result.GetPutRows(index);
      }
      public Builder SetPutRows(int index, global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.putRows_[index] = value;
        return this;
      }
      public Builder SetPutRows(int index, global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.putRows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPutRows(global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.putRows_.Add(value);
        return this;
      }
      public Builder AddPutRows(global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.putRows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePutRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest> values) {
        PrepareBuilder();
        result.putRows_.Add(values);
        return this;
      }
      public Builder ClearPutRows() {
        PrepareBuilder();
        result.putRows_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest> UpdateRowsList {
        get { return PrepareBuilder().updateRows_; }
      }
      public int UpdateRowsCount {
        get { return result.UpdateRowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest GetUpdateRows(int index) {
        return result.GetUpdateRows(index);
      }
      public Builder SetUpdateRows(int index, global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.updateRows_[index] = value;
        return this;
      }
      public Builder SetUpdateRows(int index, global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.updateRows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUpdateRows(global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.updateRows_.Add(value);
        return this;
      }
      public Builder AddUpdateRows(global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.updateRows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUpdateRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest> values) {
        PrepareBuilder();
        result.updateRows_.Add(values);
        return this;
      }
      public Builder ClearUpdateRows() {
        PrepareBuilder();
        result.updateRows_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest> DeleteRowsList {
        get { return PrepareBuilder().deleteRows_; }
      }
      public int DeleteRowsCount {
        get { return result.DeleteRowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest GetDeleteRows(int index) {
        return result.GetDeleteRows(index);
      }
      public Builder SetDeleteRows(int index, global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deleteRows_[index] = value;
        return this;
      }
      public Builder SetDeleteRows(int index, global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deleteRows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDeleteRows(global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deleteRows_.Add(value);
        return this;
      }
      public Builder AddDeleteRows(global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deleteRows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDeleteRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest> values) {
        PrepareBuilder();
        result.deleteRows_.Add(values);
        return this;
      }
      public Builder ClearDeleteRows() {
        PrepareBuilder();
        result.deleteRows_.Clear();
        return this;
      }
    }
    static TableInBatchWriteRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchWriteRowRequest : pb::GeneratedMessage<BatchWriteRowRequest, BatchWriteRowRequest.Builder> {
    private BatchWriteRowRequest() { }
    private static readonly BatchWriteRowRequest defaultInstance = new BatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _batchWriteRowRequestFieldNames = new string[] { "tables" };
    private static readonly uint[] _batchWriteRowRequestFieldTags = new uint[] { 10 };
    public static BatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchWriteRowRequest, BatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest> tables_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest GetTables(int index) {
      return tables_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _batchWriteRowRequestFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest element in TablesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchWriteRowRequest MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchWriteRowRequest result;
      
      private BatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchWriteRowRequest original = result;
          result = new BatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchWriteRowRequest.Descriptor; }
      }
      
      public override BatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchWriteRowRequest.DefaultInstance; }
      }
      
      public override BatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchWriteRowRequest) {
          return MergeFrom((BatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchWriteRowRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.BatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
    }
    static BatchWriteRowRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowInBatchWriteRowResponse : pb::GeneratedMessage<RowInBatchWriteRowResponse, RowInBatchWriteRowResponse.Builder> {
    private RowInBatchWriteRowResponse() { }
    private static readonly RowInBatchWriteRowResponse defaultInstance = new RowInBatchWriteRowResponse().MakeReadOnly();
    private static readonly string[] _rowInBatchWriteRowResponseFieldNames = new string[] { "consumed", "error", "is_ok" };
    private static readonly uint[] _rowInBatchWriteRowResponseFieldTags = new uint[] { 26, 18, 8 };
    public static RowInBatchWriteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowInBatchWriteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowInBatchWriteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RowInBatchWriteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowInBatchWriteRowResponse, RowInBatchWriteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RowInBatchWriteRowResponse__FieldAccessorTable; }
    }
    
    public const int IsOkFieldNumber = 1;
    private bool hasIsOk;
    private bool isOk_ = true;
    public bool HasIsOk {
      get { return hasIsOk; }
    }
    public bool IsOk {
      get { return isOk_; }
    }
    
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private global::com.aliyun.cloudservice.ots2.Error error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::com.aliyun.cloudservice.ots2.Error Error {
      get { return error_ ?? global::com.aliyun.cloudservice.ots2.Error.DefaultInstance; }
    }
    
    public const int ConsumedFieldNumber = 3;
    private bool hasConsumed;
    private global::com.aliyun.cloudservice.ots2.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsOk) return false;
        if (HasError) {
          if (!Error.IsInitialized) return false;
        }
        if (HasConsumed) {
          if (!Consumed.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _rowInBatchWriteRowResponseFieldNames;
      if (hasIsOk) {
        output.WriteBool(1, field_names[2], IsOk);
      }
      if (hasError) {
        output.WriteMessage(2, field_names[1], Error);
      }
      if (hasConsumed) {
        output.WriteMessage(3, field_names[0], Consumed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsOk) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsOk);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Error);
        }
        if (hasConsumed) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Consumed);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RowInBatchWriteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowInBatchWriteRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowInBatchWriteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowInBatchWriteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowInBatchWriteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowInBatchWriteRowResponse result;
      
      private RowInBatchWriteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RowInBatchWriteRowResponse original = result;
          result = new RowInBatchWriteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowInBatchWriteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Descriptor; }
      }
      
      public override RowInBatchWriteRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.DefaultInstance; }
      }
      
      public override RowInBatchWriteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowInBatchWriteRowResponse) {
          return MergeFrom((RowInBatchWriteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowInBatchWriteRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsOk) {
          IsOk = other.IsOk;
        }
        if (other.HasError) {
          MergeError(other.Error);
        }
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowInBatchWriteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowInBatchWriteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsOk = input.ReadBool(ref result.isOk_);
              break;
            }
            case 18: {
              global::com.aliyun.cloudservice.ots2.Error.Builder subBuilder = global::com.aliyun.cloudservice.ots2.Error.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsOk {
        get { return result.hasIsOk; }
      }
      public bool IsOk {
        get { return result.IsOk; }
        set { SetIsOk(value); }
      }
      public Builder SetIsOk(bool value) {
        PrepareBuilder();
        result.hasIsOk = true;
        result.isOk_ = value;
        return this;
      }
      public Builder ClearIsOk() {
        PrepareBuilder();
        result.hasIsOk = false;
        result.isOk_ = true;
        return this;
      }
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::com.aliyun.cloudservice.ots2.Error Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::com.aliyun.cloudservice.ots2.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::com.aliyun.cloudservice.ots2.Error.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::com.aliyun.cloudservice.ots2.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::com.aliyun.cloudservice.ots2.Error.DefaultInstance) {
            result.error_ = global::com.aliyun.cloudservice.ots2.Error.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
    }
    static RowInBatchWriteRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchWriteRowResponse : pb::GeneratedMessage<TableInBatchWriteRowResponse, TableInBatchWriteRowResponse.Builder> {
    private TableInBatchWriteRowResponse() { }
    private static readonly TableInBatchWriteRowResponse defaultInstance = new TableInBatchWriteRowResponse().MakeReadOnly();
    private static readonly string[] _tableInBatchWriteRowResponseFieldNames = new string[] { "delete_rows", "put_rows", "table_name", "update_rows" };
    private static readonly uint[] _tableInBatchWriteRowResponseFieldTags = new uint[] { 34, 18, 10, 26 };
    public static TableInBatchWriteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchWriteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchWriteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchWriteRowResponse, TableInBatchWriteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_TableInBatchWriteRowResponse__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PutRowsFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> putRows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> PutRowsList {
      get { return putRows_; }
    }
    public int PutRowsCount {
      get { return putRows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse GetPutRows(int index) {
      return putRows_[index];
    }
    
    public const int UpdateRowsFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> updateRows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> UpdateRowsList {
      get { return updateRows_; }
    }
    public int UpdateRowsCount {
      get { return updateRows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse GetUpdateRows(int index) {
      return updateRows_[index];
    }
    
    public const int DeleteRowsFieldNumber = 4;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> deleteRows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> DeleteRowsList {
      get { return deleteRows_; }
    }
    public int DeleteRowsCount {
      get { return deleteRows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse GetDeleteRows(int index) {
      return deleteRows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse element in PutRowsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse element in UpdateRowsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse element in DeleteRowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _tableInBatchWriteRowResponseFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[2], TableName);
      }
      if (putRows_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], putRows_);
      }
      if (updateRows_.Count > 0) {
        output.WriteMessageArray(3, field_names[3], updateRows_);
      }
      if (deleteRows_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], deleteRows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse element in PutRowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse element in UpdateRowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse element in DeleteRowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TableInBatchWriteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchWriteRowResponse MakeReadOnly() {
      putRows_.MakeReadOnly();
      updateRows_.MakeReadOnly();
      deleteRows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchWriteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchWriteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchWriteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchWriteRowResponse result;
      
      private TableInBatchWriteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchWriteRowResponse original = result;
          result = new TableInBatchWriteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchWriteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.Descriptor; }
      }
      
      public override TableInBatchWriteRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.DefaultInstance; }
      }
      
      public override TableInBatchWriteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchWriteRowResponse) {
          return MergeFrom((TableInBatchWriteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchWriteRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.putRows_.Count != 0) {
          result.putRows_.Add(other.putRows_);
        }
        if (other.updateRows_.Count != 0) {
          result.updateRows_.Add(other.updateRows_);
        }
        if (other.deleteRows_.Count != 0) {
          result.deleteRows_.Add(other.deleteRows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchWriteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchWriteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.putRows_, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.updateRows_, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.deleteRows_, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> PutRowsList {
        get { return PrepareBuilder().putRows_; }
      }
      public int PutRowsCount {
        get { return result.PutRowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse GetPutRows(int index) {
        return result.GetPutRows(index);
      }
      public Builder SetPutRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.putRows_[index] = value;
        return this;
      }
      public Builder SetPutRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.putRows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPutRows(global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.putRows_.Add(value);
        return this;
      }
      public Builder AddPutRows(global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.putRows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePutRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> values) {
        PrepareBuilder();
        result.putRows_.Add(values);
        return this;
      }
      public Builder ClearPutRows() {
        PrepareBuilder();
        result.putRows_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> UpdateRowsList {
        get { return PrepareBuilder().updateRows_; }
      }
      public int UpdateRowsCount {
        get { return result.UpdateRowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse GetUpdateRows(int index) {
        return result.GetUpdateRows(index);
      }
      public Builder SetUpdateRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.updateRows_[index] = value;
        return this;
      }
      public Builder SetUpdateRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.updateRows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUpdateRows(global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.updateRows_.Add(value);
        return this;
      }
      public Builder AddUpdateRows(global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.updateRows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUpdateRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> values) {
        PrepareBuilder();
        result.updateRows_.Add(values);
        return this;
      }
      public Builder ClearUpdateRows() {
        PrepareBuilder();
        result.updateRows_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> DeleteRowsList {
        get { return PrepareBuilder().deleteRows_; }
      }
      public int DeleteRowsCount {
        get { return result.DeleteRowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse GetDeleteRows(int index) {
        return result.GetDeleteRows(index);
      }
      public Builder SetDeleteRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deleteRows_[index] = value;
        return this;
      }
      public Builder SetDeleteRows(int index, global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deleteRows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDeleteRows(global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deleteRows_.Add(value);
        return this;
      }
      public Builder AddDeleteRows(global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deleteRows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDeleteRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse> values) {
        PrepareBuilder();
        result.deleteRows_.Add(values);
        return this;
      }
      public Builder ClearDeleteRows() {
        PrepareBuilder();
        result.deleteRows_.Clear();
        return this;
      }
    }
    static TableInBatchWriteRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchWriteRowResponse : pb::GeneratedMessage<BatchWriteRowResponse, BatchWriteRowResponse.Builder> {
    private BatchWriteRowResponse() { }
    private static readonly BatchWriteRowResponse defaultInstance = new BatchWriteRowResponse().MakeReadOnly();
    private static readonly string[] _batchWriteRowResponseFieldNames = new string[] { "tables" };
    private static readonly uint[] _batchWriteRowResponseFieldTags = new uint[] { 10 };
    public static BatchWriteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchWriteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchWriteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchWriteRowResponse, BatchWriteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_BatchWriteRowResponse__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse> tables_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse GetTables(int index) {
      return tables_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _batchWriteRowResponseFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse element in TablesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BatchWriteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchWriteRowResponse MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchWriteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchWriteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchWriteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchWriteRowResponse result;
      
      private BatchWriteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchWriteRowResponse original = result;
          result = new BatchWriteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchWriteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchWriteRowResponse.Descriptor; }
      }
      
      public override BatchWriteRowResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.BatchWriteRowResponse.DefaultInstance; }
      }
      
      public override BatchWriteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchWriteRowResponse) {
          return MergeFrom((BatchWriteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchWriteRowResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.BatchWriteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchWriteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchWriteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
    }
    static BatchWriteRowResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRangeRequest : pb::GeneratedMessage<GetRangeRequest, GetRangeRequest.Builder> {
    private GetRangeRequest() { }
    private static readonly GetRangeRequest defaultInstance = new GetRangeRequest().MakeReadOnly();
    private static readonly string[] _getRangeRequestFieldNames = new string[] { "columns_to_get", "direction", "exclusive_end_primary_key", "filter", "inclusive_start_primary_key", "limit", "table_name" };
    private static readonly uint[] _getRangeRequestFieldTags = new uint[] { 26, 16, 50, 58, 42, 32, 10 };
    public static GetRangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRangeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRangeRequest, GetRangeRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRangeRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int DirectionFieldNumber = 2;
    private bool hasDirection;
    private global::com.aliyun.cloudservice.ots2.Direction direction_ = global::com.aliyun.cloudservice.ots2.Direction.FORWARD;
    public bool HasDirection {
      get { return hasDirection; }
    }
    public global::com.aliyun.cloudservice.ots2.Direction Direction {
      get { return direction_; }
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private pbc::PopsicleList<string> columnsToGet_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnsToGetList {
      get { return pbc::Lists.AsReadOnly(columnsToGet_); }
    }
    public int ColumnsToGetCount {
      get { return columnsToGet_.Count; }
    }
    public string GetColumnsToGet(int index) {
      return columnsToGet_[index];
    }
    
    public const int LimitFieldNumber = 4;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public const int InclusiveStartPrimaryKeyFieldNumber = 5;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> inclusiveStartPrimaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> InclusiveStartPrimaryKeyList {
      get { return inclusiveStartPrimaryKey_; }
    }
    public int InclusiveStartPrimaryKeyCount {
      get { return inclusiveStartPrimaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetInclusiveStartPrimaryKey(int index) {
      return inclusiveStartPrimaryKey_[index];
    }
    
    public const int ExclusiveEndPrimaryKeyFieldNumber = 6;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> exclusiveEndPrimaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> ExclusiveEndPrimaryKeyList {
      get { return exclusiveEndPrimaryKey_; }
    }
    public int ExclusiveEndPrimaryKeyCount {
      get { return exclusiveEndPrimaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetExclusiveEndPrimaryKey(int index) {
      return exclusiveEndPrimaryKey_[index];
    }
    
    public const int FilterFieldNumber = 7;
    private bool hasFilter;
    private global::com.aliyun.cloudservice.ots2.ColumnCondition filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnCondition Filter {
      get { return filter_ ?? global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasDirection) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in InclusiveStartPrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in ExclusiveEndPrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        if (HasFilter) {
          if (!Filter.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getRangeRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[6], TableName);
      }
      if (hasDirection) {
        output.WriteEnum(2, field_names[1], (int) Direction, Direction);
      }
      if (columnsToGet_.Count > 0) {
        output.WriteStringArray(3, field_names[0], columnsToGet_);
      }
      if (hasLimit) {
        output.WriteInt32(4, field_names[5], Limit);
      }
      if (inclusiveStartPrimaryKey_.Count > 0) {
        output.WriteMessageArray(5, field_names[4], inclusiveStartPrimaryKey_);
      }
      if (exclusiveEndPrimaryKey_.Count > 0) {
        output.WriteMessageArray(6, field_names[2], exclusiveEndPrimaryKey_);
      }
      if (hasFilter) {
        output.WriteMessage(7, field_names[3], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        if (hasDirection) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Direction);
        }
        {
          int dataSize = 0;
          foreach (string element in ColumnsToGetList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * columnsToGet_.Count;
        }
        if (hasLimit) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Limit);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in InclusiveStartPrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in ExclusiveEndPrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetRangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRangeRequest MakeReadOnly() {
      columnsToGet_.MakeReadOnly();
      inclusiveStartPrimaryKey_.MakeReadOnly();
      exclusiveEndPrimaryKey_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRangeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRangeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRangeRequest result;
      
      private GetRangeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRangeRequest original = result;
          result = new GetRangeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRangeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRangeRequest.Descriptor; }
      }
      
      public override GetRangeRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRangeRequest.DefaultInstance; }
      }
      
      public override GetRangeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRangeRequest) {
          return MergeFrom((GetRangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRangeRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetRangeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasDirection) {
          Direction = other.Direction;
        }
        if (other.columnsToGet_.Count != 0) {
          result.columnsToGet_.Add(other.columnsToGet_);
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        if (other.inclusiveStartPrimaryKey_.Count != 0) {
          result.inclusiveStartPrimaryKey_.Add(other.inclusiveStartPrimaryKey_);
        }
        if (other.exclusiveEndPrimaryKey_.Count != 0) {
          result.exclusiveEndPrimaryKey_.Add(other.exclusiveEndPrimaryKey_);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRangeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRangeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.direction_, out unknown)) {
                result.hasDirection = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.columnsToGet_);
              break;
            }
            case 32: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.inclusiveStartPrimaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.exclusiveEndPrimaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 58: {
              global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasDirection {
       get { return result.hasDirection; }
      }
      public global::com.aliyun.cloudservice.ots2.Direction Direction {
        get { return result.Direction; }
        set { SetDirection(value); }
      }
      public Builder SetDirection(global::com.aliyun.cloudservice.ots2.Direction value) {
        PrepareBuilder();
        result.hasDirection = true;
        result.direction_ = value;
        return this;
      }
      public Builder ClearDirection() {
        PrepareBuilder();
        result.hasDirection = false;
        result.direction_ = global::com.aliyun.cloudservice.ots2.Direction.FORWARD;
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnsToGetList {
        get { return PrepareBuilder().columnsToGet_; }
      }
      public int ColumnsToGetCount {
        get { return result.ColumnsToGetCount; }
      }
      public string GetColumnsToGet(int index) {
        return result.GetColumnsToGet(index);
      }
      public Builder SetColumnsToGet(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_[index] = value;
        return this;
      }
      public Builder AddColumnsToGet(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_.Add(value);
        return this;
      }
      public Builder AddRangeColumnsToGet(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnsToGet_.Add(values);
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.columnsToGet_.Clear();
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> InclusiveStartPrimaryKeyList {
        get { return PrepareBuilder().inclusiveStartPrimaryKey_; }
      }
      public int InclusiveStartPrimaryKeyCount {
        get { return result.InclusiveStartPrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetInclusiveStartPrimaryKey(int index) {
        return result.GetInclusiveStartPrimaryKey(index);
      }
      public Builder SetInclusiveStartPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.inclusiveStartPrimaryKey_[index] = value;
        return this;
      }
      public Builder SetInclusiveStartPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.inclusiveStartPrimaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInclusiveStartPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.inclusiveStartPrimaryKey_.Add(value);
        return this;
      }
      public Builder AddInclusiveStartPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.inclusiveStartPrimaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInclusiveStartPrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.inclusiveStartPrimaryKey_.Add(values);
        return this;
      }
      public Builder ClearInclusiveStartPrimaryKey() {
        PrepareBuilder();
        result.inclusiveStartPrimaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> ExclusiveEndPrimaryKeyList {
        get { return PrepareBuilder().exclusiveEndPrimaryKey_; }
      }
      public int ExclusiveEndPrimaryKeyCount {
        get { return result.ExclusiveEndPrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetExclusiveEndPrimaryKey(int index) {
        return result.GetExclusiveEndPrimaryKey(index);
      }
      public Builder SetExclusiveEndPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exclusiveEndPrimaryKey_[index] = value;
        return this;
      }
      public Builder SetExclusiveEndPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exclusiveEndPrimaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddExclusiveEndPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exclusiveEndPrimaryKey_.Add(value);
        return this;
      }
      public Builder AddExclusiveEndPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exclusiveEndPrimaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeExclusiveEndPrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.exclusiveEndPrimaryKey_.Add(values);
        return this;
      }
      public Builder ClearExclusiveEndPrimaryKey() {
        PrepareBuilder();
        result.exclusiveEndPrimaryKey_.Clear();
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnCondition Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::com.aliyun.cloudservice.ots2.ColumnCondition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::com.aliyun.cloudservice.ots2.ColumnCondition.DefaultInstance) {
            result.filter_ = global::com.aliyun.cloudservice.ots2.ColumnCondition.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static GetRangeRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRangeResponse : pb::GeneratedMessage<GetRangeResponse, GetRangeResponse.Builder> {
    private GetRangeResponse() { }
    private static readonly GetRangeResponse defaultInstance = new GetRangeResponse().MakeReadOnly();
    private static readonly string[] _getRangeResponseFieldNames = new string[] { "consumed", "next_start_primary_key", "rows" };
    private static readonly uint[] _getRangeResponseFieldTags = new uint[] { 10, 18, 26 };
    public static GetRangeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRangeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRangeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRangeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRangeResponse, GetRangeResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetRangeResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.aliyun.cloudservice.ots2.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int NextStartPrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> nextStartPrimaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> NextStartPrimaryKeyList {
      get { return nextStartPrimaryKey_; }
    }
    public int NextStartPrimaryKeyCount {
      get { return nextStartPrimaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetNextStartPrimaryKey(int index) {
      return nextStartPrimaryKey_[index];
    }
    
    public const int RowsFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Row> rows_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Row>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Row> RowsList {
      get { return rows_; }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Row GetRows(int index) {
      return rows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in NextStartPrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.Row element in RowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getRangeResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      if (nextStartPrimaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], nextStartPrimaryKey_);
      }
      if (rows_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], rows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasConsumed) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in NextStartPrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Row element in RowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetRangeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRangeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRangeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRangeResponse MakeReadOnly() {
      nextStartPrimaryKey_.MakeReadOnly();
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRangeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRangeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRangeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRangeResponse result;
      
      private GetRangeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRangeResponse original = result;
          result = new GetRangeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRangeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRangeResponse.Descriptor; }
      }
      
      public override GetRangeResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetRangeResponse.DefaultInstance; }
      }
      
      public override GetRangeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRangeResponse) {
          return MergeFrom((GetRangeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRangeResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetRangeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.nextStartPrimaryKey_.Count != 0) {
          result.nextStartPrimaryKey_.Add(other.nextStartPrimaryKey_);
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRangeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRangeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder subBuilder = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.nextStartPrimaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.rows_, global::com.aliyun.cloudservice.ots2.Row.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.aliyun.cloudservice.ots2.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.aliyun.cloudservice.ots2.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.aliyun.cloudservice.ots2.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.aliyun.cloudservice.ots2.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> NextStartPrimaryKeyList {
        get { return PrepareBuilder().nextStartPrimaryKey_; }
      }
      public int NextStartPrimaryKeyCount {
        get { return result.NextStartPrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetNextStartPrimaryKey(int index) {
        return result.GetNextStartPrimaryKey(index);
      }
      public Builder SetNextStartPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nextStartPrimaryKey_[index] = value;
        return this;
      }
      public Builder SetNextStartPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.nextStartPrimaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNextStartPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nextStartPrimaryKey_.Add(value);
        return this;
      }
      public Builder AddNextStartPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.nextStartPrimaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNextStartPrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.nextStartPrimaryKey_.Add(values);
        return this;
      }
      public Builder ClearNextStartPrimaryKey() {
        PrepareBuilder();
        result.nextStartPrimaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Row> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Row GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, global::com.aliyun.cloudservice.ots2.Row value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder SetRows(int index, global::com.aliyun.cloudservice.ots2.Row.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRows(global::com.aliyun.cloudservice.ots2.Row value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRows(global::com.aliyun.cloudservice.ots2.Row.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Row> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
    }
    static GetRangeResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListStreamRequest : pb::GeneratedMessage<ListStreamRequest, ListStreamRequest.Builder> {
    private ListStreamRequest() { }
    private static readonly ListStreamRequest defaultInstance = new ListStreamRequest().MakeReadOnly();
    private static readonly string[] _listStreamRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _listStreamRequestFieldTags = new uint[] { 10 };
    public static ListStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListStreamRequest, ListStreamRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListStreamRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listStreamRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListStreamRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListStreamRequest result;
      
      private ListStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListStreamRequest original = result;
          result = new ListStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ListStreamRequest.Descriptor; }
      }
      
      public override ListStreamRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ListStreamRequest.DefaultInstance; }
      }
      
      public override ListStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListStreamRequest) {
          return MergeFrom((ListStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListStreamRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.ListStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static ListStreamRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListStreamResponse : pb::GeneratedMessage<ListStreamResponse, ListStreamResponse.Builder> {
    private ListStreamResponse() { }
    private static readonly ListStreamResponse defaultInstance = new ListStreamResponse().MakeReadOnly();
    private static readonly string[] _listStreamResponseFieldNames = new string[] { "streams" };
    private static readonly uint[] _listStreamResponseFieldTags = new uint[] { 10 };
    public static ListStreamResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListStreamResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListStreamResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListStreamResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListStreamResponse, ListStreamResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_ListStreamResponse__FieldAccessorTable; }
    }
    
    public const int StreamsFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Stream> streams_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Stream>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Stream> StreamsList {
      get { return streams_; }
    }
    public int StreamsCount {
      get { return streams_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Stream GetStreams(int index) {
      return streams_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.Stream element in StreamsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listStreamResponseFieldNames;
      if (streams_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], streams_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.Stream element in StreamsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListStreamResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListStreamResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListStreamResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListStreamResponse MakeReadOnly() {
      streams_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListStreamResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListStreamResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListStreamResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListStreamResponse result;
      
      private ListStreamResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListStreamResponse original = result;
          result = new ListStreamResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListStreamResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.ListStreamResponse.Descriptor; }
      }
      
      public override ListStreamResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.ListStreamResponse.DefaultInstance; }
      }
      
      public override ListStreamResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListStreamResponse) {
          return MergeFrom((ListStreamResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListStreamResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.ListStreamResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.streams_.Count != 0) {
          result.streams_.Add(other.streams_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listStreamResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listStreamResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.streams_, global::com.aliyun.cloudservice.ots2.Stream.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Stream> StreamsList {
        get { return PrepareBuilder().streams_; }
      }
      public int StreamsCount {
        get { return result.StreamsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Stream GetStreams(int index) {
        return result.GetStreams(index);
      }
      public Builder SetStreams(int index, global::com.aliyun.cloudservice.ots2.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streams_[index] = value;
        return this;
      }
      public Builder SetStreams(int index, global::com.aliyun.cloudservice.ots2.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streams_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStreams(global::com.aliyun.cloudservice.ots2.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streams_.Add(value);
        return this;
      }
      public Builder AddStreams(global::com.aliyun.cloudservice.ots2.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streams_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStreams(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Stream> values) {
        PrepareBuilder();
        result.streams_.Add(values);
        return this;
      }
      public Builder ClearStreams() {
        PrepareBuilder();
        result.streams_.Clear();
        return this;
      }
    }
    static ListStreamResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Stream : pb::GeneratedMessage<Stream, Stream.Builder> {
    private Stream() { }
    private static readonly Stream defaultInstance = new Stream().MakeReadOnly();
    private static readonly string[] _streamFieldNames = new string[] { "creation_time", "stream_id", "table_name" };
    private static readonly uint[] _streamFieldTags = new uint[] { 24, 10, 18 };
    public static Stream DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Stream DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Stream ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Stream__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Stream, Stream.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_Stream__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int TableNameFieldNumber = 2;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int CreationTimeFieldNumber = 3;
    private bool hasCreationTime;
    private long creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public long CreationTime {
      get { return creationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        if (!hasTableName) return false;
        if (!hasCreationTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[1], StreamId);
      }
      if (hasTableName) {
        output.WriteString(2, field_names[2], TableName);
      }
      if (hasCreationTime) {
        output.WriteInt64(3, field_names[0], CreationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
        }
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, TableName);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, CreationTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Stream ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Stream ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Stream ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Stream ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Stream ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Stream ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Stream ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Stream MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Stream prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Stream, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Stream cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Stream result;
      
      private Stream PrepareBuilder() {
        if (resultIsReadOnly) {
          Stream original = result;
          result = new Stream();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Stream MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.Stream.Descriptor; }
      }
      
      public override Stream DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.Stream.DefaultInstance; }
      }
      
      public override Stream BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Stream) {
          return MergeFrom((Stream) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Stream other) {
        if (other == global::com.aliyun.cloudservice.ots2.Stream.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 18: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 24: {
              result.hasCreationTime = input.ReadInt64(ref result.creationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public long CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(long value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0L;
        return this;
      }
    }
    static Stream() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StreamShard : pb::GeneratedMessage<StreamShard, StreamShard.Builder> {
    private StreamShard() { }
    private static readonly StreamShard defaultInstance = new StreamShard().MakeReadOnly();
    private static readonly string[] _streamShardFieldNames = new string[] { "parent_id", "parent_sibling_id", "shard_id" };
    private static readonly uint[] _streamShardFieldTags = new uint[] { 18, 26, 10 };
    public static StreamShard DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamShard DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamShard ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamShard__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamShard, StreamShard.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamShard__FieldAccessorTable; }
    }
    
    public const int ShardIdFieldNumber = 1;
    private bool hasShardId;
    private string shardId_ = "";
    public bool HasShardId {
      get { return hasShardId; }
    }
    public string ShardId {
      get { return shardId_; }
    }
    
    public const int ParentIdFieldNumber = 2;
    private bool hasParentId;
    private string parentId_ = "";
    public bool HasParentId {
      get { return hasParentId; }
    }
    public string ParentId {
      get { return parentId_; }
    }
    
    public const int ParentSiblingIdFieldNumber = 3;
    private bool hasParentSiblingId;
    private string parentSiblingId_ = "";
    public bool HasParentSiblingId {
      get { return hasParentSiblingId; }
    }
    public string ParentSiblingId {
      get { return parentSiblingId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShardId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamShardFieldNames;
      if (hasShardId) {
        output.WriteString(1, field_names[2], ShardId);
      }
      if (hasParentId) {
        output.WriteString(2, field_names[0], ParentId);
      }
      if (hasParentSiblingId) {
        output.WriteString(3, field_names[1], ParentSiblingId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasShardId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ShardId);
        }
        if (hasParentId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ParentId);
        }
        if (hasParentSiblingId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ParentSiblingId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamShard ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamShard ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamShard ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamShard ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamShard ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamShard ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamShard ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamShard ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamShard ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamShard ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamShard MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamShard prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamShard, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamShard cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamShard result;
      
      private StreamShard PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamShard original = result;
          result = new StreamShard();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamShard MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamShard.Descriptor; }
      }
      
      public override StreamShard DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamShard.DefaultInstance; }
      }
      
      public override StreamShard BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamShard) {
          return MergeFrom((StreamShard) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamShard other) {
        if (other == global::com.aliyun.cloudservice.ots2.StreamShard.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShardId) {
          ShardId = other.ShardId;
        }
        if (other.HasParentId) {
          ParentId = other.ParentId;
        }
        if (other.HasParentSiblingId) {
          ParentSiblingId = other.ParentSiblingId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamShardFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamShardFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasShardId = input.ReadString(ref result.shardId_);
              break;
            }
            case 18: {
              result.hasParentId = input.ReadString(ref result.parentId_);
              break;
            }
            case 26: {
              result.hasParentSiblingId = input.ReadString(ref result.parentSiblingId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShardId {
        get { return result.hasShardId; }
      }
      public string ShardId {
        get { return result.ShardId; }
        set { SetShardId(value); }
      }
      public Builder SetShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardId = true;
        result.shardId_ = value;
        return this;
      }
      public Builder ClearShardId() {
        PrepareBuilder();
        result.hasShardId = false;
        result.shardId_ = "";
        return this;
      }
      
      public bool HasParentId {
        get { return result.hasParentId; }
      }
      public string ParentId {
        get { return result.ParentId; }
        set { SetParentId(value); }
      }
      public Builder SetParentId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentId = true;
        result.parentId_ = value;
        return this;
      }
      public Builder ClearParentId() {
        PrepareBuilder();
        result.hasParentId = false;
        result.parentId_ = "";
        return this;
      }
      
      public bool HasParentSiblingId {
        get { return result.hasParentSiblingId; }
      }
      public string ParentSiblingId {
        get { return result.ParentSiblingId; }
        set { SetParentSiblingId(value); }
      }
      public Builder SetParentSiblingId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentSiblingId = true;
        result.parentSiblingId_ = value;
        return this;
      }
      public Builder ClearParentSiblingId() {
        PrepareBuilder();
        result.hasParentSiblingId = false;
        result.parentSiblingId_ = "";
        return this;
      }
    }
    static StreamShard() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeStreamRequest : pb::GeneratedMessage<DescribeStreamRequest, DescribeStreamRequest.Builder> {
    private DescribeStreamRequest() { }
    private static readonly DescribeStreamRequest defaultInstance = new DescribeStreamRequest().MakeReadOnly();
    private static readonly string[] _describeStreamRequestFieldNames = new string[] { "inclusive_start_shard_id", "shard_limit", "stream_id" };
    private static readonly uint[] _describeStreamRequestFieldTags = new uint[] { 18, 24, 10 };
    public static DescribeStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeStreamRequest, DescribeStreamRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeStreamRequest__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int InclusiveStartShardIdFieldNumber = 2;
    private bool hasInclusiveStartShardId;
    private string inclusiveStartShardId_ = "";
    public bool HasInclusiveStartShardId {
      get { return hasInclusiveStartShardId; }
    }
    public string InclusiveStartShardId {
      get { return inclusiveStartShardId_; }
    }
    
    public const int ShardLimitFieldNumber = 3;
    private bool hasShardLimit;
    private int shardLimit_;
    public bool HasShardLimit {
      get { return hasShardLimit; }
    }
    public int ShardLimit {
      get { return shardLimit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _describeStreamRequestFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[2], StreamId);
      }
      if (hasInclusiveStartShardId) {
        output.WriteString(2, field_names[0], InclusiveStartShardId);
      }
      if (hasShardLimit) {
        output.WriteInt32(3, field_names[1], ShardLimit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
        }
        if (hasInclusiveStartShardId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, InclusiveStartShardId);
        }
        if (hasShardLimit) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ShardLimit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DescribeStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeStreamRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeStreamRequest result;
      
      private DescribeStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeStreamRequest original = result;
          result = new DescribeStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeStreamRequest.Descriptor; }
      }
      
      public override DescribeStreamRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeStreamRequest.DefaultInstance; }
      }
      
      public override DescribeStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeStreamRequest) {
          return MergeFrom((DescribeStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeStreamRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.DescribeStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasInclusiveStartShardId) {
          InclusiveStartShardId = other.InclusiveStartShardId;
        }
        if (other.HasShardLimit) {
          ShardLimit = other.ShardLimit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 18: {
              result.hasInclusiveStartShardId = input.ReadString(ref result.inclusiveStartShardId_);
              break;
            }
            case 24: {
              result.hasShardLimit = input.ReadInt32(ref result.shardLimit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasInclusiveStartShardId {
        get { return result.hasInclusiveStartShardId; }
      }
      public string InclusiveStartShardId {
        get { return result.InclusiveStartShardId; }
        set { SetInclusiveStartShardId(value); }
      }
      public Builder SetInclusiveStartShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInclusiveStartShardId = true;
        result.inclusiveStartShardId_ = value;
        return this;
      }
      public Builder ClearInclusiveStartShardId() {
        PrepareBuilder();
        result.hasInclusiveStartShardId = false;
        result.inclusiveStartShardId_ = "";
        return this;
      }
      
      public bool HasShardLimit {
        get { return result.hasShardLimit; }
      }
      public int ShardLimit {
        get { return result.ShardLimit; }
        set { SetShardLimit(value); }
      }
      public Builder SetShardLimit(int value) {
        PrepareBuilder();
        result.hasShardLimit = true;
        result.shardLimit_ = value;
        return this;
      }
      public Builder ClearShardLimit() {
        PrepareBuilder();
        result.hasShardLimit = false;
        result.shardLimit_ = 0;
        return this;
      }
    }
    static DescribeStreamRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeStreamResponse : pb::GeneratedMessage<DescribeStreamResponse, DescribeStreamResponse.Builder> {
    private DescribeStreamResponse() { }
    private static readonly DescribeStreamResponse defaultInstance = new DescribeStreamResponse().MakeReadOnly();
    private static readonly string[] _describeStreamResponseFieldNames = new string[] { "creation_time", "expiration_time", "next_shard_id", "shards", "stream_id", "stream_status", "table_name" };
    private static readonly uint[] _describeStreamResponseFieldTags = new uint[] { 32, 16, 58, 50, 10, 40, 26 };
    public static DescribeStreamResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeStreamResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeStreamResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeStreamResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeStreamResponse, DescribeStreamResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_DescribeStreamResponse__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int ExpirationTimeFieldNumber = 2;
    private bool hasExpirationTime;
    private int expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public int ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int TableNameFieldNumber = 3;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int CreationTimeFieldNumber = 4;
    private bool hasCreationTime;
    private long creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public long CreationTime {
      get { return creationTime_; }
    }
    
    public const int StreamStatusFieldNumber = 5;
    private bool hasStreamStatus;
    private global::com.aliyun.cloudservice.ots2.StreamStatus streamStatus_ = global::com.aliyun.cloudservice.ots2.StreamStatus.STREAM_ENABLING;
    public bool HasStreamStatus {
      get { return hasStreamStatus; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamStatus StreamStatus {
      get { return streamStatus_; }
    }
    
    public const int ShardsFieldNumber = 6;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.StreamShard> shards_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.StreamShard>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.StreamShard> ShardsList {
      get { return shards_; }
    }
    public int ShardsCount {
      get { return shards_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamShard GetShards(int index) {
      return shards_[index];
    }
    
    public const int NextShardIdFieldNumber = 7;
    private bool hasNextShardId;
    private string nextShardId_ = "";
    public bool HasNextShardId {
      get { return hasNextShardId; }
    }
    public string NextShardId {
      get { return nextShardId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        if (!hasExpirationTime) return false;
        if (!hasTableName) return false;
        if (!hasCreationTime) return false;
        if (!hasStreamStatus) return false;
        foreach (global::com.aliyun.cloudservice.ots2.StreamShard element in ShardsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _describeStreamResponseFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[4], StreamId);
      }
      if (hasExpirationTime) {
        output.WriteInt32(2, field_names[1], ExpirationTime);
      }
      if (hasTableName) {
        output.WriteString(3, field_names[6], TableName);
      }
      if (hasCreationTime) {
        output.WriteInt64(4, field_names[0], CreationTime);
      }
      if (hasStreamStatus) {
        output.WriteEnum(5, field_names[5], (int) StreamStatus, StreamStatus);
      }
      if (shards_.Count > 0) {
        output.WriteMessageArray(6, field_names[3], shards_);
      }
      if (hasNextShardId) {
        output.WriteString(7, field_names[2], NextShardId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ExpirationTime);
        }
        if (hasTableName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, TableName);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, CreationTime);
        }
        if (hasStreamStatus) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) StreamStatus);
        }
        foreach (global::com.aliyun.cloudservice.ots2.StreamShard element in ShardsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        if (hasNextShardId) {
          size += pb::CodedOutputStream.ComputeStringSize(7, NextShardId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DescribeStreamResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeStreamResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeStreamResponse MakeReadOnly() {
      shards_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeStreamResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeStreamResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeStreamResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeStreamResponse result;
      
      private DescribeStreamResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeStreamResponse original = result;
          result = new DescribeStreamResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeStreamResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeStreamResponse.Descriptor; }
      }
      
      public override DescribeStreamResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.DescribeStreamResponse.DefaultInstance; }
      }
      
      public override DescribeStreamResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeStreamResponse) {
          return MergeFrom((DescribeStreamResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeStreamResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.DescribeStreamResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasStreamStatus) {
          StreamStatus = other.StreamStatus;
        }
        if (other.shards_.Count != 0) {
          result.shards_.Add(other.shards_);
        }
        if (other.HasNextShardId) {
          NextShardId = other.NextShardId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeStreamResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeStreamResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 16: {
              result.hasExpirationTime = input.ReadInt32(ref result.expirationTime_);
              break;
            }
            case 26: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 32: {
              result.hasCreationTime = input.ReadInt64(ref result.creationTime_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.streamStatus_, out unknown)) {
                result.hasStreamStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.shards_, global::com.aliyun.cloudservice.ots2.StreamShard.DefaultInstance, extensionRegistry);
              break;
            }
            case 58: {
              result.hasNextShardId = input.ReadString(ref result.nextShardId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public int ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(int value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public long CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(long value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0L;
        return this;
      }
      
      public bool HasStreamStatus {
       get { return result.hasStreamStatus; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamStatus StreamStatus {
        get { return result.StreamStatus; }
        set { SetStreamStatus(value); }
      }
      public Builder SetStreamStatus(global::com.aliyun.cloudservice.ots2.StreamStatus value) {
        PrepareBuilder();
        result.hasStreamStatus = true;
        result.streamStatus_ = value;
        return this;
      }
      public Builder ClearStreamStatus() {
        PrepareBuilder();
        result.hasStreamStatus = false;
        result.streamStatus_ = global::com.aliyun.cloudservice.ots2.StreamStatus.STREAM_ENABLING;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.StreamShard> ShardsList {
        get { return PrepareBuilder().shards_; }
      }
      public int ShardsCount {
        get { return result.ShardsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamShard GetShards(int index) {
        return result.GetShards(index);
      }
      public Builder SetShards(int index, global::com.aliyun.cloudservice.ots2.StreamShard value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shards_[index] = value;
        return this;
      }
      public Builder SetShards(int index, global::com.aliyun.cloudservice.ots2.StreamShard.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shards_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddShards(global::com.aliyun.cloudservice.ots2.StreamShard value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shards_.Add(value);
        return this;
      }
      public Builder AddShards(global::com.aliyun.cloudservice.ots2.StreamShard.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shards_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeShards(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.StreamShard> values) {
        PrepareBuilder();
        result.shards_.Add(values);
        return this;
      }
      public Builder ClearShards() {
        PrepareBuilder();
        result.shards_.Clear();
        return this;
      }
      
      public bool HasNextShardId {
        get { return result.hasNextShardId; }
      }
      public string NextShardId {
        get { return result.NextShardId; }
        set { SetNextShardId(value); }
      }
      public Builder SetNextShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextShardId = true;
        result.nextShardId_ = value;
        return this;
      }
      public Builder ClearNextShardId() {
        PrepareBuilder();
        result.hasNextShardId = false;
        result.nextShardId_ = "";
        return this;
      }
    }
    static DescribeStreamResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetShardIteratorRequest : pb::GeneratedMessage<GetShardIteratorRequest, GetShardIteratorRequest.Builder> {
    private GetShardIteratorRequest() { }
    private static readonly GetShardIteratorRequest defaultInstance = new GetShardIteratorRequest().MakeReadOnly();
    private static readonly string[] _getShardIteratorRequestFieldNames = new string[] { "shard_id", "stream_id" };
    private static readonly uint[] _getShardIteratorRequestFieldTags = new uint[] { 18, 10 };
    public static GetShardIteratorRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetShardIteratorRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetShardIteratorRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetShardIteratorRequest, GetShardIteratorRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorRequest__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int ShardIdFieldNumber = 2;
    private bool hasShardId;
    private string shardId_ = "";
    public bool HasShardId {
      get { return hasShardId; }
    }
    public string ShardId {
      get { return shardId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        if (!hasShardId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getShardIteratorRequestFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[1], StreamId);
      }
      if (hasShardId) {
        output.WriteString(2, field_names[0], ShardId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
        }
        if (hasShardId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ShardId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetShardIteratorRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetShardIteratorRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetShardIteratorRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetShardIteratorRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetShardIteratorRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetShardIteratorRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetShardIteratorRequest result;
      
      private GetShardIteratorRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetShardIteratorRequest original = result;
          result = new GetShardIteratorRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetShardIteratorRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetShardIteratorRequest.Descriptor; }
      }
      
      public override GetShardIteratorRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetShardIteratorRequest.DefaultInstance; }
      }
      
      public override GetShardIteratorRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetShardIteratorRequest) {
          return MergeFrom((GetShardIteratorRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetShardIteratorRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetShardIteratorRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasShardId) {
          ShardId = other.ShardId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getShardIteratorRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getShardIteratorRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 18: {
              result.hasShardId = input.ReadString(ref result.shardId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasShardId {
        get { return result.hasShardId; }
      }
      public string ShardId {
        get { return result.ShardId; }
        set { SetShardId(value); }
      }
      public Builder SetShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardId = true;
        result.shardId_ = value;
        return this;
      }
      public Builder ClearShardId() {
        PrepareBuilder();
        result.hasShardId = false;
        result.shardId_ = "";
        return this;
      }
    }
    static GetShardIteratorRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetShardIteratorResponse : pb::GeneratedMessage<GetShardIteratorResponse, GetShardIteratorResponse.Builder> {
    private GetShardIteratorResponse() { }
    private static readonly GetShardIteratorResponse defaultInstance = new GetShardIteratorResponse().MakeReadOnly();
    private static readonly string[] _getShardIteratorResponseFieldNames = new string[] { "shard_iterator" };
    private static readonly uint[] _getShardIteratorResponseFieldTags = new uint[] { 10 };
    public static GetShardIteratorResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetShardIteratorResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetShardIteratorResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetShardIteratorResponse, GetShardIteratorResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetShardIteratorResponse__FieldAccessorTable; }
    }
    
    public const int ShardIteratorFieldNumber = 1;
    private bool hasShardIterator;
    private string shardIterator_ = "";
    public bool HasShardIterator {
      get { return hasShardIterator; }
    }
    public string ShardIterator {
      get { return shardIterator_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShardIterator) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getShardIteratorResponseFieldNames;
      if (hasShardIterator) {
        output.WriteString(1, field_names[0], ShardIterator);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasShardIterator) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ShardIterator);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetShardIteratorResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetShardIteratorResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetShardIteratorResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetShardIteratorResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetShardIteratorResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetShardIteratorResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetShardIteratorResponse result;
      
      private GetShardIteratorResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetShardIteratorResponse original = result;
          result = new GetShardIteratorResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetShardIteratorResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetShardIteratorResponse.Descriptor; }
      }
      
      public override GetShardIteratorResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetShardIteratorResponse.DefaultInstance; }
      }
      
      public override GetShardIteratorResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetShardIteratorResponse) {
          return MergeFrom((GetShardIteratorResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetShardIteratorResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetShardIteratorResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShardIterator) {
          ShardIterator = other.ShardIterator;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getShardIteratorResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getShardIteratorResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasShardIterator = input.ReadString(ref result.shardIterator_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShardIterator {
        get { return result.hasShardIterator; }
      }
      public string ShardIterator {
        get { return result.ShardIterator; }
        set { SetShardIterator(value); }
      }
      public Builder SetShardIterator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardIterator = true;
        result.shardIterator_ = value;
        return this;
      }
      public Builder ClearShardIterator() {
        PrepareBuilder();
        result.hasShardIterator = false;
        result.shardIterator_ = "";
        return this;
      }
    }
    static GetShardIteratorResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetStreamRecordRequest : pb::GeneratedMessage<GetStreamRecordRequest, GetStreamRecordRequest.Builder> {
    private GetStreamRecordRequest() { }
    private static readonly GetStreamRecordRequest defaultInstance = new GetStreamRecordRequest().MakeReadOnly();
    private static readonly string[] _getStreamRecordRequestFieldNames = new string[] { "limit", "shard_iterator" };
    private static readonly uint[] _getStreamRecordRequestFieldTags = new uint[] { 16, 10 };
    public static GetStreamRecordRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamRecordRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamRecordRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamRecordRequest, GetStreamRecordRequest.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordRequest__FieldAccessorTable; }
    }
    
    public const int ShardIteratorFieldNumber = 1;
    private bool hasShardIterator;
    private string shardIterator_ = "";
    public bool HasShardIterator {
      get { return hasShardIterator; }
    }
    public string ShardIterator {
      get { return shardIterator_; }
    }
    
    public const int LimitFieldNumber = 2;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShardIterator) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamRecordRequestFieldNames;
      if (hasShardIterator) {
        output.WriteString(1, field_names[1], ShardIterator);
      }
      if (hasLimit) {
        output.WriteInt32(2, field_names[0], Limit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasShardIterator) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ShardIterator);
        }
        if (hasLimit) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Limit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamRecordRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamRecordRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamRecordRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamRecordRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamRecordRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamRecordRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamRecordRequest result;
      
      private GetStreamRecordRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamRecordRequest original = result;
          result = new GetStreamRecordRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamRecordRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetStreamRecordRequest.Descriptor; }
      }
      
      public override GetStreamRecordRequest DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetStreamRecordRequest.DefaultInstance; }
      }
      
      public override GetStreamRecordRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamRecordRequest) {
          return MergeFrom((GetStreamRecordRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamRecordRequest other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetStreamRecordRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShardIterator) {
          ShardIterator = other.ShardIterator;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamRecordRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamRecordRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasShardIterator = input.ReadString(ref result.shardIterator_);
              break;
            }
            case 16: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShardIterator {
        get { return result.hasShardIterator; }
      }
      public string ShardIterator {
        get { return result.ShardIterator; }
        set { SetShardIterator(value); }
      }
      public Builder SetShardIterator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardIterator = true;
        result.shardIterator_ = value;
        return this;
      }
      public Builder ClearShardIterator() {
        PrepareBuilder();
        result.hasShardIterator = false;
        result.shardIterator_ = "";
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
    }
    static GetStreamRecordRequest() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RecordSequenceInfo : pb::GeneratedMessage<RecordSequenceInfo, RecordSequenceInfo.Builder> {
    private RecordSequenceInfo() { }
    private static readonly RecordSequenceInfo defaultInstance = new RecordSequenceInfo().MakeReadOnly();
    private static readonly string[] _recordSequenceInfoFieldNames = new string[] { "epoch", "rowIndex", "timestamp" };
    private static readonly uint[] _recordSequenceInfoFieldTags = new uint[] { 8, 24, 16 };
    public static RecordSequenceInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RecordSequenceInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RecordSequenceInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RecordSequenceInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RecordSequenceInfo, RecordSequenceInfo.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_RecordSequenceInfo__FieldAccessorTable; }
    }
    
    public const int EpochFieldNumber = 1;
    private bool hasEpoch;
    private int epoch_;
    public bool HasEpoch {
      get { return hasEpoch; }
    }
    public int Epoch {
      get { return epoch_; }
    }
    
    public const int TimestampFieldNumber = 2;
    private bool hasTimestamp;
    private long timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public long Timestamp {
      get { return timestamp_; }
    }
    
    public const int RowIndexFieldNumber = 3;
    private bool hasRowIndex;
    private int rowIndex_;
    public bool HasRowIndex {
      get { return hasRowIndex; }
    }
    public int RowIndex {
      get { return rowIndex_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEpoch) return false;
        if (!hasTimestamp) return false;
        if (!hasRowIndex) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _recordSequenceInfoFieldNames;
      if (hasEpoch) {
        output.WriteInt32(1, field_names[0], Epoch);
      }
      if (hasTimestamp) {
        output.WriteInt64(2, field_names[2], Timestamp);
      }
      if (hasRowIndex) {
        output.WriteInt32(3, field_names[1], RowIndex);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEpoch) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Epoch);
        }
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, Timestamp);
        }
        if (hasRowIndex) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, RowIndex);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RecordSequenceInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecordSequenceInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecordSequenceInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecordSequenceInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecordSequenceInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecordSequenceInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RecordSequenceInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RecordSequenceInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RecordSequenceInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecordSequenceInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RecordSequenceInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RecordSequenceInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RecordSequenceInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RecordSequenceInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RecordSequenceInfo result;
      
      private RecordSequenceInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          RecordSequenceInfo original = result;
          result = new RecordSequenceInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RecordSequenceInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.Descriptor; }
      }
      
      public override RecordSequenceInfo DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.DefaultInstance; }
      }
      
      public override RecordSequenceInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RecordSequenceInfo) {
          return MergeFrom((RecordSequenceInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RecordSequenceInfo other) {
        if (other == global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEpoch) {
          Epoch = other.Epoch;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasRowIndex) {
          RowIndex = other.RowIndex;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_recordSequenceInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _recordSequenceInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEpoch = input.ReadInt32(ref result.epoch_);
              break;
            }
            case 16: {
              result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
              break;
            }
            case 24: {
              result.hasRowIndex = input.ReadInt32(ref result.rowIndex_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEpoch {
        get { return result.hasEpoch; }
      }
      public int Epoch {
        get { return result.Epoch; }
        set { SetEpoch(value); }
      }
      public Builder SetEpoch(int value) {
        PrepareBuilder();
        result.hasEpoch = true;
        result.epoch_ = value;
        return this;
      }
      public Builder ClearEpoch() {
        PrepareBuilder();
        result.hasEpoch = false;
        result.epoch_ = 0;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public long Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(long value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      public bool HasRowIndex {
        get { return result.hasRowIndex; }
      }
      public int RowIndex {
        get { return result.RowIndex; }
        set { SetRowIndex(value); }
      }
      public Builder SetRowIndex(int value) {
        PrepareBuilder();
        result.hasRowIndex = true;
        result.rowIndex_ = value;
        return this;
      }
      public Builder ClearRowIndex() {
        PrepareBuilder();
        result.hasRowIndex = false;
        result.rowIndex_ = 0;
        return this;
      }
    }
    static RecordSequenceInfo() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StreamRecord : pb::GeneratedMessage<StreamRecord, StreamRecord.Builder> {
    private StreamRecord() { }
    private static readonly StreamRecord defaultInstance = new StreamRecord().MakeReadOnly();
    private static readonly string[] _streamRecordFieldNames = new string[] { "attribute_columns_for_put", "attribute_columns_for_update", "op_type", "primary_key", "sequence_info" };
    private static readonly uint[] _streamRecordFieldTags = new uint[] { 26, 34, 8, 18, 42 };
    public static StreamRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamRecord, StreamRecord.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_StreamRecord__FieldAccessorTable; }
    }
    
    public const int OpTypeFieldNumber = 1;
    private bool hasOpType;
    private global::com.aliyun.cloudservice.ots2.StreamOperationType opType_ = global::com.aliyun.cloudservice.ots2.StreamOperationType.STREAM_PUT;
    public bool HasOpType {
      get { return hasOpType; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamOperationType OpType {
      get { return opType_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> primaryKey_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int AttributeColumnsForPutFieldNumber = 3;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column> attributeColumnsForPut_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.Column>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsForPutList {
      get { return attributeColumnsForPut_; }
    }
    public int AttributeColumnsForPutCount {
      get { return attributeColumnsForPut_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumnsForPut(int index) {
      return attributeColumnsForPut_[index];
    }
    
    public const int AttributeColumnsForUpdateFieldNumber = 4;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> attributeColumnsForUpdate_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> AttributeColumnsForUpdateList {
      get { return attributeColumnsForUpdate_; }
    }
    public int AttributeColumnsForUpdateCount {
      get { return attributeColumnsForUpdate_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.ColumnUpdate GetAttributeColumnsForUpdate(int index) {
      return attributeColumnsForUpdate_[index];
    }
    
    public const int SequenceInfoFieldNumber = 5;
    private bool hasSequenceInfo;
    private global::com.aliyun.cloudservice.ots2.RecordSequenceInfo sequenceInfo_;
    public bool HasSequenceInfo {
      get { return hasSequenceInfo; }
    }
    public global::com.aliyun.cloudservice.ots2.RecordSequenceInfo SequenceInfo {
      get { return sequenceInfo_ ?? global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOpType) return false;
        if (!hasSequenceInfo) return false;
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsForPutList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnUpdate element in AttributeColumnsForUpdateList) {
          if (!element.IsInitialized) return false;
        }
        if (!SequenceInfo.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamRecordFieldNames;
      if (hasOpType) {
        output.WriteEnum(1, field_names[2], (int) OpType, OpType);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[3], primaryKey_);
      }
      if (attributeColumnsForPut_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attributeColumnsForPut_);
      }
      if (attributeColumnsForUpdate_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], attributeColumnsForUpdate_);
      }
      if (hasSequenceInfo) {
        output.WriteMessage(5, field_names[4], SequenceInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOpType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) OpType);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in PrimaryKeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.Column element in AttributeColumnsForPutList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::com.aliyun.cloudservice.ots2.ColumnUpdate element in AttributeColumnsForUpdateList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasSequenceInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, SequenceInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamRecord MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      attributeColumnsForPut_.MakeReadOnly();
      attributeColumnsForUpdate_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamRecord result;
      
      private StreamRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamRecord original = result;
          result = new StreamRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamRecord.Descriptor; }
      }
      
      public override StreamRecord DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.StreamRecord.DefaultInstance; }
      }
      
      public override StreamRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamRecord) {
          return MergeFrom((StreamRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamRecord other) {
        if (other == global::com.aliyun.cloudservice.ots2.StreamRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOpType) {
          OpType = other.OpType;
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.attributeColumnsForPut_.Count != 0) {
          result.attributeColumnsForPut_.Add(other.attributeColumnsForPut_);
        }
        if (other.attributeColumnsForUpdate_.Count != 0) {
          result.attributeColumnsForUpdate_.Add(other.attributeColumnsForUpdate_);
        }
        if (other.HasSequenceInfo) {
          MergeSequenceInfo(other.SequenceInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.opType_, out unknown)) {
                result.hasOpType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attributeColumnsForPut_, global::com.aliyun.cloudservice.ots2.Column.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attributeColumnsForUpdate_, global::com.aliyun.cloudservice.ots2.ColumnUpdate.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.Builder subBuilder = global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.CreateBuilder();
              if (result.hasSequenceInfo) {
                subBuilder.MergeFrom(SequenceInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SequenceInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOpType {
       get { return result.hasOpType; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamOperationType OpType {
        get { return result.OpType; }
        set { SetOpType(value); }
      }
      public Builder SetOpType(global::com.aliyun.cloudservice.ots2.StreamOperationType value) {
        PrepareBuilder();
        result.hasOpType = true;
        result.opType_ = value;
        return this;
      }
      public Builder ClearOpType() {
        PrepareBuilder();
        result.hasOpType = false;
        result.opType_ = global::com.aliyun.cloudservice.ots2.StreamOperationType.STREAM_PUT;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.Column> AttributeColumnsForPutList {
        get { return PrepareBuilder().attributeColumnsForPut_; }
      }
      public int AttributeColumnsForPutCount {
        get { return result.AttributeColumnsForPutCount; }
      }
      public global::com.aliyun.cloudservice.ots2.Column GetAttributeColumnsForPut(int index) {
        return result.GetAttributeColumnsForPut(index);
      }
      public Builder SetAttributeColumnsForPut(int index, global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumnsForPut_[index] = value;
        return this;
      }
      public Builder SetAttributeColumnsForPut(int index, global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumnsForPut_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributeColumnsForPut(global::com.aliyun.cloudservice.ots2.Column value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumnsForPut_.Add(value);
        return this;
      }
      public Builder AddAttributeColumnsForPut(global::com.aliyun.cloudservice.ots2.Column.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumnsForPut_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributeColumnsForPut(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.Column> values) {
        PrepareBuilder();
        result.attributeColumnsForPut_.Add(values);
        return this;
      }
      public Builder ClearAttributeColumnsForPut() {
        PrepareBuilder();
        result.attributeColumnsForPut_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.ColumnUpdate> AttributeColumnsForUpdateList {
        get { return PrepareBuilder().attributeColumnsForUpdate_; }
      }
      public int AttributeColumnsForUpdateCount {
        get { return result.AttributeColumnsForUpdateCount; }
      }
      public global::com.aliyun.cloudservice.ots2.ColumnUpdate GetAttributeColumnsForUpdate(int index) {
        return result.GetAttributeColumnsForUpdate(index);
      }
      public Builder SetAttributeColumnsForUpdate(int index, global::com.aliyun.cloudservice.ots2.ColumnUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumnsForUpdate_[index] = value;
        return this;
      }
      public Builder SetAttributeColumnsForUpdate(int index, global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumnsForUpdate_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributeColumnsForUpdate(global::com.aliyun.cloudservice.ots2.ColumnUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributeColumnsForUpdate_.Add(value);
        return this;
      }
      public Builder AddAttributeColumnsForUpdate(global::com.aliyun.cloudservice.ots2.ColumnUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributeColumnsForUpdate_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributeColumnsForUpdate(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.ColumnUpdate> values) {
        PrepareBuilder();
        result.attributeColumnsForUpdate_.Add(values);
        return this;
      }
      public Builder ClearAttributeColumnsForUpdate() {
        PrepareBuilder();
        result.attributeColumnsForUpdate_.Clear();
        return this;
      }
      
      public bool HasSequenceInfo {
       get { return result.hasSequenceInfo; }
      }
      public global::com.aliyun.cloudservice.ots2.RecordSequenceInfo SequenceInfo {
        get { return result.SequenceInfo; }
        set { SetSequenceInfo(value); }
      }
      public Builder SetSequenceInfo(global::com.aliyun.cloudservice.ots2.RecordSequenceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSequenceInfo = true;
        result.sequenceInfo_ = value;
        return this;
      }
      public Builder SetSequenceInfo(global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSequenceInfo = true;
        result.sequenceInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSequenceInfo(global::com.aliyun.cloudservice.ots2.RecordSequenceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSequenceInfo &&
            result.sequenceInfo_ != global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.DefaultInstance) {
            result.sequenceInfo_ = global::com.aliyun.cloudservice.ots2.RecordSequenceInfo.CreateBuilder(result.sequenceInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.sequenceInfo_ = value;
        }
        result.hasSequenceInfo = true;
        return this;
      }
      public Builder ClearSequenceInfo() {
        PrepareBuilder();
        result.hasSequenceInfo = false;
        result.sequenceInfo_ = null;
        return this;
      }
    }
    static StreamRecord() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetStreamRecordResponse : pb::GeneratedMessage<GetStreamRecordResponse, GetStreamRecordResponse.Builder> {
    private GetStreamRecordResponse() { }
    private static readonly GetStreamRecordResponse defaultInstance = new GetStreamRecordResponse().MakeReadOnly();
    private static readonly string[] _getStreamRecordResponseFieldNames = new string[] { "next_shard_iterator", "stream_records" };
    private static readonly uint[] _getStreamRecordResponseFieldTags = new uint[] { 18, 10 };
    public static GetStreamRecordResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamRecordResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamRecordResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamRecordResponse, GetStreamRecordResponse.Builder> InternalFieldAccessors {
      get { return global::com.aliyun.cloudservice.ots2.OtsProtocol2.internal__static_com_aliyun_cloudservice_ots2_GetStreamRecordResponse__FieldAccessorTable; }
    }
    
    public const int StreamRecordsFieldNumber = 1;
    private pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.StreamRecord> streamRecords_ = new pbc::PopsicleList<global::com.aliyun.cloudservice.ots2.StreamRecord>();
    public scg::IList<global::com.aliyun.cloudservice.ots2.StreamRecord> StreamRecordsList {
      get { return streamRecords_; }
    }
    public int StreamRecordsCount {
      get { return streamRecords_.Count; }
    }
    public global::com.aliyun.cloudservice.ots2.StreamRecord GetStreamRecords(int index) {
      return streamRecords_[index];
    }
    
    public const int NextShardIteratorFieldNumber = 2;
    private bool hasNextShardIterator;
    private string nextShardIterator_ = "";
    public bool HasNextShardIterator {
      get { return hasNextShardIterator; }
    }
    public string NextShardIterator {
      get { return nextShardIterator_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.aliyun.cloudservice.ots2.StreamRecord element in StreamRecordsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamRecordResponseFieldNames;
      if (streamRecords_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], streamRecords_);
      }
      if (hasNextShardIterator) {
        output.WriteString(2, field_names[0], NextShardIterator);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.aliyun.cloudservice.ots2.StreamRecord element in StreamRecordsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasNextShardIterator) {
          size += pb::CodedOutputStream.ComputeStringSize(2, NextShardIterator);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamRecordResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamRecordResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamRecordResponse MakeReadOnly() {
      streamRecords_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamRecordResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamRecordResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamRecordResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamRecordResponse result;
      
      private GetStreamRecordResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamRecordResponse original = result;
          result = new GetStreamRecordResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamRecordResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.aliyun.cloudservice.ots2.GetStreamRecordResponse.Descriptor; }
      }
      
      public override GetStreamRecordResponse DefaultInstanceForType {
        get { return global::com.aliyun.cloudservice.ots2.GetStreamRecordResponse.DefaultInstance; }
      }
      
      public override GetStreamRecordResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamRecordResponse) {
          return MergeFrom((GetStreamRecordResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamRecordResponse other) {
        if (other == global::com.aliyun.cloudservice.ots2.GetStreamRecordResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.streamRecords_.Count != 0) {
          result.streamRecords_.Add(other.streamRecords_);
        }
        if (other.HasNextShardIterator) {
          NextShardIterator = other.NextShardIterator;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamRecordResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamRecordResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.streamRecords_, global::com.aliyun.cloudservice.ots2.StreamRecord.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              result.hasNextShardIterator = input.ReadString(ref result.nextShardIterator_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.aliyun.cloudservice.ots2.StreamRecord> StreamRecordsList {
        get { return PrepareBuilder().streamRecords_; }
      }
      public int StreamRecordsCount {
        get { return result.StreamRecordsCount; }
      }
      public global::com.aliyun.cloudservice.ots2.StreamRecord GetStreamRecords(int index) {
        return result.GetStreamRecords(index);
      }
      public Builder SetStreamRecords(int index, global::com.aliyun.cloudservice.ots2.StreamRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streamRecords_[index] = value;
        return this;
      }
      public Builder SetStreamRecords(int index, global::com.aliyun.cloudservice.ots2.StreamRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streamRecords_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStreamRecords(global::com.aliyun.cloudservice.ots2.StreamRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streamRecords_.Add(value);
        return this;
      }
      public Builder AddStreamRecords(global::com.aliyun.cloudservice.ots2.StreamRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streamRecords_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStreamRecords(scg::IEnumerable<global::com.aliyun.cloudservice.ots2.StreamRecord> values) {
        PrepareBuilder();
        result.streamRecords_.Add(values);
        return this;
      }
      public Builder ClearStreamRecords() {
        PrepareBuilder();
        result.streamRecords_.Clear();
        return this;
      }
      
      public bool HasNextShardIterator {
        get { return result.hasNextShardIterator; }
      }
      public string NextShardIterator {
        get { return result.NextShardIterator; }
        set { SetNextShardIterator(value); }
      }
      public Builder SetNextShardIterator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextShardIterator = true;
        result.nextShardIterator_ = value;
        return this;
      }
      public Builder ClearNextShardIterator() {
        PrepareBuilder();
        result.hasNextShardIterator = false;
        result.nextShardIterator_ = "";
        return this;
      }
    }
    static GetStreamRecordResponse() {
      object.ReferenceEquals(global::com.aliyun.cloudservice.ots2.OtsProtocol2.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
